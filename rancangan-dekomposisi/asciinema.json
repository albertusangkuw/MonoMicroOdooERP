{"setup": ["setuptools.setup", "<builtin>.open", "sys.exit"], "sys.exit": [], "<builtin>.open": [], "setuptools.setup": [], "asciinema": ["<builtin>.ImportError"], "<builtin>.ImportError": [], "asciinema.record_asciicast": ["asciinema.recorder.record"], "asciinema.recorder.record": ["time.time", "os.environ.copy", "asciinema.recorder.async_notifier.__init__", "<builtin>.int", "asciinema.term.get_size", "os.stat", "asciinema.recorder.async_writer.__init__", "os.environ.get", "asciinema.asciicast.v2.get_duration"], "asciinema.recorder": [], "os.environ.get": [], "os.environ.copy": [], "asciinema.term.get_size": ["subprocess.check_output", "<builtin>.int"], "time.time": [], "<builtin>.int": [], "os.stat": [], "asciinema.asciicast.v2.get_duration": ["<builtin>.open", "asciinema.asciicast.v2.open_from_file.__init__"], "asciinema.recorder.async_writer.__init__": ["asciinema.async_worker.async_worker.__init__"], "asciinema.recorder.async_notifier.__init__": ["asciinema.async_worker.async_worker.__init__"], "asciinema.async_worker.async_worker.__init__": ["multiprocessing.Queue", "queue.Queue"], "asciinema.recorder.async_writer.write_stdin": ["asciinema.async_worker.async_worker.enqueue"], "asciinema.async_worker.async_worker.enqueue": [], "asciinema.recorder.async_writer.write_stdout": ["asciinema.async_worker.async_worker.enqueue"], "asciinema.recorder.async_writer.run": ["<builtin>.iter"], "<builtin>.iter": [], "asciinema.recorder.async_notifier.notify": ["asciinema.async_worker.async_worker.enqueue"], "asciinema.recorder.async_notifier.perform": ["asciinema.notifier.NoopNotifier.notify", "asciinema.notifier.CustomCommandNotifier.notify"], "asciinema.notifier.NoopNotifier.notify": [], "asciinema.notifier.CustomCommandNotifier.notify": ["asciinema.notifier.Notifier.get_icon_path", "subprocess.run"], "asciinema.async_worker": [], "multiprocessing.Queue": [], "queue.Queue": [], "asciinema.async_worker.async_worker.__enter__": ["multiprocessing.Process", "threading.Thread"], "multiprocessing.Process": [], "threading.Thread": [], "asciinema.async_worker.async_worker.__exit__": [], "asciinema.async_worker.async_worker.run": ["asciinema.recorder.async_notifier.perform", "<builtin>.iter"], "asciinema.asciicast": [], "asciinema.asciicast.Parser.__init__": [], "asciinema.asciicast.Parser.handle_starttag": [], "asciinema.asciicast.open_url": ["os.path.dirname", "urllib.request.urlopen", "urllib.parse.urlparse", "gzip.open", "<builtin>.open", "asciinema.asciicast.open_url", "urllib.request.Request", "asciinema.asciicast.Parser.__init__", "urllib.parse.urlunparse", "codecs.getreader"], "urllib.request.Request": [], "urllib.request.urlopen": [], "gzip.open": [], "codecs.getreader": [], "urllib.parse.urlparse": [], "urllib.parse.urlunparse": [], "os.path.dirname": [], "asciinema.asciicast.open_from_url.__init__": [], "asciinema.asciicast.open_from_url.__enter__": ["sys.stdin.readline", "asciinema.asciicast.v2.open_from_file.__enter__", "asciinema.asciicast.v1.open_from_file.__enter__", "asciinema.asciicast.v1.open_from_file.__init__", "<builtin>.str", "asciinema.asciicast.open_url", "asciinema.asciicast.v2.open_from_file.__init__"], "sys.stdin.readline": [], "asciinema.asciicast.v2.open_from_file.__init__": [], "asciinema.asciicast.v2.open_from_file.__enter__": ["asciinema.asciicast.v2.build_from_header_and_file", "json.loads"], "asciinema.asciicast.v1.open_from_file.__enter__": ["sys.stdin.read", "json.loads", "asciinema.asciicast.v1.Asciicast.__init__"], "asciinema.asciicast.v1.open_from_file.__init__": [], "<builtin>.str": [], "asciinema.asciicast.open_from_url.__exit__": ["asciinema.asciicast.v1.open_from_file.__exit__", "asciinema.asciicast.v2.open_from_file.__exit__"], "asciinema.asciicast.v1.open_from_file.__exit__": ["sys.stdin.close"], "asciinema.asciicast.v2.open_from_file.__exit__": ["sys.stdin.close"], "asciinema.asciicast.v2": [], "asciinema.asciicast.v2.Asciicast.__init__": [], "asciinema.asciicast.v2.Asciicast.events": ["json.loads"], "json.loads": [], "asciinema.asciicast.v2.Asciicast.stdout_events": ["asciinema.asciicast.v2.Asciicast.events"], "asciinema.asciicast.v2.build_from_header_and_file": ["asciinema.asciicast.v2.Asciicast.__init__"], "sys.stdin.close": [], "asciinema.asciicast.v2.build_header": ["<builtin>.type"], "<builtin>.type": [], "asciinema.asciicast.v2.writer.__init__": ["codecs.getincrementaldecoder", "asciinema.asciicast.v2.build_header"], "codecs.getincrementaldecoder": [], "asciinema.asciicast.v2.writer.__enter__": ["<builtin>.open", "asciinema.asciicast.v2.writer.__write_line"], "asciinema.asciicast.v2.writer.__write_line": ["json.dumps"], "asciinema.asciicast.v2.writer.__exit__": [], "asciinema.asciicast.v2.writer.write_stdout": ["<builtin>.type", "asciinema.asciicast.v2.writer.__write_event"], "asciinema.asciicast.v2.writer.__write_event": ["<builtin>.round", "asciinema.asciicast.v2.writer.__write_line"], "asciinema.asciicast.v2.writer.write_stdin": ["<builtin>.type", "asciinema.asciicast.v2.writer.__write_event"], "<builtin>.round": [], "json.dumps": [], "asciinema.asciicast.v1": [], "asciinema.asciicast.v1.Asciicast.__init__": [], "asciinema.asciicast.v1.Asciicast.v2_header": [], "asciinema.asciicast.v1.Asciicast.__stdout_events": [], "asciinema.asciicast.v1.Asciicast.events": ["asciinema.asciicast.v1.Asciicast.stdout_events"], "asciinema.asciicast.v1.Asciicast.stdout_events": ["asciinema.asciicast.v1.Asciicast.__stdout_events", "asciinema.asciicast.events.to_absolute_time"], "asciinema.asciicast.events.to_absolute_time": [], "sys.stdin.read": [], "asciinema.asciicast.events": [], "asciinema.asciicast.events.to_relative_time": [], "asciinema.asciicast.events.cap_relative_time": ["<builtin>.min"], "<builtin>.min": [], "asciinema.asciicast.events.adjust_speed": [], "asciinema.pty": [], "asciinema.pty.record": ["os.pipe", "pty.fork", "time.time", "asciinema.term.raw.__init__", "fcntl.fcntl", "asciinema.pty.record._signals", "asciinema.pty.record._copy", "asciinema.pty.record._set_pty_size", "<builtin>.map", "os.execvpe", "os.waitpid", "signal.set_wakeup_fd"], "asciinema.pty.record._notify": [], "asciinema.pty.record._set_pty_size": ["array.array", "os.isatty", "fcntl.ioctl"], "os.isatty": [], "array.array": [], "fcntl.ioctl": [], "asciinema.pty.record._write_stdout": ["os.write"], "os.write": [], "asciinema.pty.record._handle_master_read": ["asciinema.pty.record._write_stdout", "time.time"], "asciinema.pty.record._write_master": ["os.write"], "asciinema.pty.record._handle_stdin_read": ["asciinema.pty.record._write_master", "asciinema.pty.record._notify", "time.time"], "asciinema.pty.record._signals": ["signal.signal"], "signal.signal": [], "asciinema.pty.record._copy": ["select.select", "<builtin>.len", "asciinema.pty.record._handle_stdin_read", "os.read", "asciinema.pty.record._handle_master_read", "os.close", "struct.unpack", "asciinema.pty.record._set_pty_size"], "select.select": [], "os.read": [], "<builtin>.len": [], "struct.unpack": [], "os.close": [], "pty.fork": [], "os.execvpe": [], "os.pipe": [], "fcntl.fcntl": [], "signal.set_wakeup_fd": [], "asciinema.pty.record.<lambda1>": [], "asciinema.pty.record.<lambda1>.<lambda1>": [], "<builtin>.map": [], "asciinema.term.raw.__init__": [], "os.waitpid": [], "asciinema.term": [], "asciinema.term.raw.__enter__": ["tty.tcgetattr", "tty.setraw"], "tty.tcgetattr": [], "tty.setraw": [], "asciinema.term.raw.__exit__": ["tty.tcsetattr"], "tty.tcsetattr": [], "asciinema.term.read_blocking": ["select.select", "os.read"], "subprocess.check_output": [], "tests.config_test": [], "tests.config_test.create_config": ["<builtin>.open", "tempfile.mkdtemp", "asciinema.config.Config.__init__"], "tempfile.mkdtemp": [], "asciinema.config.Config.__init__": ["os.path.join", "configparser.ConfigParser"], "tests.config_test.read_install_id": ["<builtin>.open"], "tests.config_test.test_upgrade_no_config_file": ["tests.config_test.create_config", "asciinema.config.Config.upgrade", "re.match", "tests.config_test.read_install_id", "os.path.exists", "nose.tools.assert_equal"], "asciinema.config.Config.upgrade": ["os.remove", "asciinema.config.Config.__gen_install_id", "asciinema.config.Config.__save_install_id", "asciinema.config.Config.__user_token", "asciinema.config.Config.__api_token", "<builtin>.dict"], "re.match": [], "nose.tools.assert_equal": [], "os.path.exists": [], "tests.config_test.test_upgrade_config_file_with_api_token": ["tests.config_test.create_config", "asciinema.config.Config.upgrade", "tests.config_test.read_install_id", "os.path.exists", "nose.tools.assert_equal"], "tests.config_test.test_upgrade_config_file_with_api_token_and_more": ["tests.config_test.create_config", "asciinema.config.Config.upgrade", "tests.config_test.read_install_id", "os.path.exists", "nose.tools.assert_equal"], "tests.config_test.test_upgrade_config_file_with_user_token": ["tests.config_test.create_config", "asciinema.config.Config.upgrade", "tests.config_test.read_install_id", "os.path.exists", "nose.tools.assert_equal"], "tests.config_test.test_upgrade_config_file_with_user_token_and_more": ["tests.config_test.create_config", "asciinema.config.Config.upgrade", "tests.config_test.read_install_id", "os.path.exists", "nose.tools.assert_equal"], "tests.config_test.test_default_api_url": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_default_record_stdin": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_default_record_command": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_default_record_env": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_default_record_idle_time_limit": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_default_record_yes": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_default_record_quiet": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_default_play_idle_time_limit": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_api_url": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_api_url_when_override_set": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_record_command": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_record_stdin": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_record_env": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_record_idle_time_limit": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_record_yes": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_record_quiet": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_play_idle_time_limit": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_notifications_enabled": ["nose.tools.assert_equal", "tests.config_test.create_config"], "tests.config_test.test_notifications_command": ["nose.tools.assert_equal", "tests.config_test.create_config"], "asciinema.config": [], "os.path.join": [], "configparser.ConfigParser": [], "asciinema.config.Config.__api_token": [], "asciinema.config.Config.__user_token": [], "asciinema.config.Config.__gen_install_id": ["uuid.uuid4", "<builtin>.str"], "asciinema.config.Config.__save_install_id": ["<builtin>.open", "asciinema.config.Config.__create_config_home"], "<builtin>.dict": [], "os.remove": [], "asciinema.config.Config.__read_install_id": ["os.path.isfile", "<builtin>.open"], "os.path.isfile": [], "uuid.uuid4": [], "asciinema.config.Config.__create_config_home": ["os.path.exists", "os.makedirs"], "os.makedirs": [], "asciinema.config.Config.install_id": ["asciinema.config.Config.__read_install_id"], "asciinema.config.Config.api_url": [], "asciinema.config.Config.record_stdin": [], "asciinema.config.Config.record_command": [], "asciinema.config.Config.record_env": [], "asciinema.config.Config.record_idle_time_limit": [], "asciinema.config.Config.record_yes": [], "asciinema.config.Config.record_quiet": [], "asciinema.config.Config.play_idle_time_limit": [], "asciinema.config.Config.play_speed": [], "asciinema.config.Config.notifications_enabled": [], "asciinema.config.Config.notifications_command": [], "asciinema.config.get_config_home": ["os.path.isfile", "os.path.join", "<builtin>.Exception"], "<builtin>.Exception": [], "asciinema.config.load": ["asciinema.config.Config.upgrade", "asciinema.config.get_config_home", "asciinema.config.Config.__init__"], "tests.asciicast.v2_test": [], "tests.asciicast.v2_test.TestWriter.test_writing": ["<builtin>.list", "tempfile.mkstemp", "<builtin>.open", "asciinema.asciicast.v2.writer.__init__", "<builtin>.map"], "tempfile.mkstemp": [], "<builtin>.list": [], "tests.test_helper": [], "tests.test_helper.assert_printed": [], "tests.test_helper.assert_not_printed": [], "tests.test_helper.Test.setUp": ["io.StringIO", "StringIO.StringIO"], "io.StringIO": [], "StringIO.StringIO": [], "tests.test_helper.Test.tearDown": [], "tests.test_helper.FakeClock.__init__": [], "tests.test_helper.FakeClock.time": [], "tests.test_helper.FakeAsciicast.__init__": [], "tests": [], "tests.asciicast": [], "tests.pty_test": [], "tests.pty_test.FakeStdout.__init__": [], "tests.pty_test.FakeStdout.write_stdout": [], "tests.pty_test.FakeStdout.write_stdin": [], "tests.pty_test.TestRecord.setUp": [], "tests.pty_test.TestRecord.tearDown": [], "tests.pty_test.TestRecord.os_write": ["os.write"], "tests.pty_test.TestRecord.test_record_command_writes_to_stdout": ["tests.pty_test.FakeStdout.__init__", "nose.tools.assert_equal"], "asciinema.asciicast.raw": [], "asciinema.asciicast.raw.writer.__init__": ["os.path.exists", "os.stat"], "asciinema.asciicast.raw.writer.__enter__": ["<builtin>.open"], "asciinema.asciicast.raw.writer.__exit__": [], "asciinema.asciicast.raw.writer.write_stdout": [], "asciinema.asciicast.raw.writer.write_stdin": [], "asciinema.__main__": ["asciinema.__main__.main"], "asciinema.__main__.positive_float": ["argparse.ArgumentTypeError", "<builtin>.float"], "<builtin>.float": [], "argparse.ArgumentTypeError": [], "asciinema.__main__.maybe_str": ["<builtin>.str"], "asciinema.__main__.main": ["<builtin>.print", "asciinema.config.load", "sys.stderr.write", "asciinema.__main__.maybe_str", "<builtin>.str", "sys.exit", "locale.nl_langinfo", "<builtin>.hasattr", "argparse.ArgumentParser"], "locale.nl_langinfo": [], "<builtin>.print": [], "sys.stderr.write": [], "argparse.ArgumentParser": [], "<builtin>.hasattr": [], "asciinema.commands.auth": [], "asciinema.commands.auth.AuthCommand.__init__": ["asciinema.commands.command.Command.__init__"], "asciinema.commands.command.Command.__init__": ["asciinema.api.Api.__init__"], "asciinema.commands.auth.AuthCommand.execute": ["asciinema.api.Api.hostname", "asciinema.commands.command.Command.print", "asciinema.api.Api.auth_url"], "asciinema.api.Api.hostname": ["urllib.parse.urlparse"], "asciinema.api.Api.auth_url": [], "asciinema.commands.command.Command.print": ["asciinema.commands.command.Command.print"], "asciinema.commands.command": [], "asciinema.api.Api.__init__": [], "asciinema.commands.command.Command.print_info": ["asciinema.commands.command.Command.print"], "asciinema.commands.command.Command.print_warning": ["asciinema.commands.command.Command.print"], "asciinema.commands.command.Command.print_error": ["asciinema.commands.command.Command.print"], "asciinema.api": [], "asciinema.api.Api.upload_url": [], "asciinema.api.Api.upload_asciicast": ["asciinema.api.Api._handle_error", "json.loads", "<builtin>.open", "<builtin>.str", "asciinema.api.Api.upload_url", "asciinema.api.Api._headers"], "asciinema.api.Api._headers": ["asciinema.api.Api._user_agent"], "asciinema.api.Api._handle_error": [], "asciinema.api.Api._user_agent": ["platform.platform", "platform.python_implementation", "platform.python_version", "re.sub"], "platform.platform": [], "re.sub": [], "platform.python_implementation": [], "platform.python_version": [], "asciinema.http_adapter": [], "asciinema.urllib_http_adapter": [], "asciinema.urllib_http_adapter.MultipartFormdataEncoder.__init__": ["uuid.uuid4"], "asciinema.urllib_http_adapter.MultipartFormdataEncoder.u": ["<builtin>.isinstance"], "<builtin>.isinstance": [], "asciinema.urllib_http_adapter.MultipartFormdataEncoder.iter": ["<builtin>.len", "asciinema.urllib_http_adapter.MultipartFormdataEncoder.u", "<builtin>.str", "<builtin>.isinstance", "codecs.getencoder"], "codecs.getencoder": [], "asciinema.urllib_http_adapter.MultipartFormdataEncoder.encode": ["asciinema.urllib_http_adapter.MultipartFormdataEncoder.iter", "io.BytesIO"], "io.BytesIO": [], "asciinema.urllib_http_adapter.URLLibHttpAdapter.post": ["asciinema.urllib_http_adapter.MultipartFormdataEncoder.__init__", "urllib.request.urlopen", "asciinema.urllib_http_adapter.URLLibHttpAdapter._parse_headers", "asciinema.urllib_http_adapter.MultipartFormdataEncoder.encode", "<builtin>.str", "urllib.request.Request", "base64.encodebytes"], "base64.encodebytes": [], "asciinema.urllib_http_adapter.URLLibHttpAdapter._parse_headers": [], "asciinema.commands.play": [], "asciinema.commands.play.PlayCommand.__init__": ["asciinema.commands.command.Command.__init__"], "asciinema.commands.play.PlayCommand.execute": ["asciinema.commands.command.Command.print_error", "asciinema.asciicast.open_from_url.__init__", "<builtin>.str"], "asciinema.player": [], "asciinema.player.Player.play": ["asciinema.term.raw.__init__", "<builtin>.open", "asciinema.player.Player._play"], "asciinema.player.Player._play": ["time.time", "asciinema.asciicast.events.cap_relative_time", "sys.stdout.write", "asciinema.asciicast.events.to_absolute_time", "asciinema.asciicast.events.to_relative_time", "sys.stdout.flush", "asciinema.asciicast.events.adjust_speed", "asciinema.term.read_blocking"], "sys.stdout.write": [], "sys.stdout.flush": [], "asciinema.commands.record": [], "asciinema.commands.record.RecordCommand.__init__": ["asciinema.commands.command.Command.__init__"], "asciinema.commands.record.RecordCommand.execute": ["asciinema.api.Api.hostname", "asciinema.commands.command.Command.print_warning", "asciinema.commands.command.Command.print_error", "asciinema.recorder.record", "os.remove", "asciinema.commands.command.Command.print_info", "<builtin>.filter", "sys.stdin.readline", "asciinema.commands.command.Command.print", "asciinema.commands.record._tmp_path", "asciinema.api.Api.upload_asciicast", "os.stat", "<builtin>.map", "<builtin>.str", "os.access", "os.path.exists"], "asciinema.commands.record._tmp_path": ["tempfile.mkstemp", "os.close"], "os.access": [], "asciinema.commands.record.RecordCommand.execute.<lambda1>": [], "<builtin>.filter": [], "asciinema.notifier": [], "asciinema.notifier.Notifier.is_available": ["shutil.which"], "shutil.which": [], "asciinema.notifier.Notifier.notify": ["subprocess.run"], "subprocess.run": [], "asciinema.notifier.Notifier.get_icon_path": [], "asciinema.notifier.AppleScriptNotifier.args": [], "asciinema.notifier.LibNotifyNotifier.args": ["asciinema.notifier.Notifier.get_icon_path"], "asciinema.notifier.TerminalNotifier.args": ["asciinema.notifier.Notifier.get_icon_path"], "asciinema.notifier.CustomCommandNotifier.__init__": [], "asciinema.notifier.get_notifier": ["asciinema.notifier.CustomCommandNotifier.__init__"], "asciinema.commands.cat": [], "asciinema.commands.cat.CatCommand.__init__": ["asciinema.commands.command.Command.__init__"], "asciinema.commands.cat.CatCommand.execute": ["asciinema.commands.command.Command.print_error", "sys.stdout.write", "asciinema.asciicast.open_from_url.__init__", "<builtin>.str", "sys.stdout.flush"], "asciinema.commands.upload": [], "asciinema.commands.upload.UploadCommand.__init__": ["asciinema.commands.command.Command.__init__"], "asciinema.commands.upload.UploadCommand.execute": ["asciinema.commands.command.Command.print_warning", "asciinema.commands.command.Command.print_error", "asciinema.commands.command.Command.print", "asciinema.api.Api.upload_asciicast", "<builtin>.str"], "asciinema.commands": []}
