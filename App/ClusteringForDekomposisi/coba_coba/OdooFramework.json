{"exceptions": [], "exceptions.UserError.__init__": ["<builtin>.super"], "<builtin>.super": [], "exceptions.UserError.name": ["warnings.warn"], "warnings.warn": [], "exceptions.RedirectWarning.__init__": ["<builtin>.super"], "exceptions.RedirectWarning.name": ["warnings.warn"], "exceptions.AccessDenied.__init__": ["<builtin>.super"], "exceptions.CacheMiss.__init__": ["<builtin>.super"], "exceptions.except_orm.__init__": ["<builtin>.super", "warnings.warn"], "exceptions.Warning.__init__": ["<builtin>.super", "warnings.warn"], "loglevels": ["<builtin>.type"], "loglevels.get_encodings": ["locale.getpreferredencoding"], "locale.getpreferredencoding": [], "<builtin>.type": [], "loglevels.ustr": ["loglevels.get_encodings", "<builtin>.issubclass", "loglevels.exception_to_unicode", "<builtin>.type", "<builtin>.UnicodeError", "<builtin>.isinstance"], "<builtin>.issubclass": [], "<builtin>.isinstance": [], "loglevels.exception_to_unicode": ["loglevels.ustr", "<builtin>.getattr"], "<builtin>.UnicodeError": [], "<builtin>.getattr": [], "http": ["logging.getLogger", "tools.parse_version.parse_version", "mimetypes.add_type", "contextlib.contextmanager", "functools.partial"], "functools.partial": [], "logging.getLogger": [], "mimetypes.add_type": [], "http.get_default_session": [], "tools.parse_version.parse_version": ["tools.parse_version._parse_version_parts", "<builtin>.tuple"], "http.content_disposition": ["werkzeug.urls.url_quote"], "werkzeug.urls.url_quote": [], "http.db_list": ["http.db_filter", "odoo.service.db.list_dbs"], "odoo.service.db.list_dbs": [], "http.db_filter": ["re.escape", "re.compile", "<builtin>.sorted", "<builtin>.list"], "re.escape": [], "re.compile": [], "<builtin>.sorted": [], "<builtin>.list": [], "http.dispatch_rpc": ["http.borrow_request", "threading.current_thread"], "http.borrow_request": [], "threading.current_thread": [], "http.is_cors_preflight": [], "http.serialize_exception": ["<builtin>.type", "odoo.loglevels.ustr", "traceback.format_exc", "<builtin>.getattr"], "traceback.format_exc": [], "odoo.loglevels.ustr": [], "http.send_file": ["warnings.warn", "werkzeug.utils.send_file", "tools._vendor.send_file.send_file"], "tools._vendor.send_file.send_file": ["time.time", "os.path.join", "<builtin>.isinstance", "werkzeug.datastructures.Headers", "os.stat", "os.path.abspath", "werkzeug.wsgi.wrap_file", "<builtin>.int", "unicodedata.normalize", "http.Response.__init__", "mimetypes.guess_type", "os.path.basename", "<builtin>.hasattr", "werkzeug.urls.url_quote", "zlib.adler32", "<builtin>.ValueError", "werkzeug.wrappers.Response", "<builtin>.TypeError", "<builtin>.open", "<builtin>.callable"], "werkzeug.utils.send_file": [], "http.Stream.__init__": [], "http.Stream.from_path": ["<builtin>.int", "zlib.adler32", "os.stat", "tools.misc.file_path", "os.path.basename", "http.Stream.__init__"], "tools.misc.file_path": ["os.path.exists", "<builtin>.FileNotFoundError", "os.path.normcase", "os.path.abspath", "os.path.join", "os.path.isabs", "<builtin>.ValueError", "os.path.normpath"], "zlib.adler32": [], "os.stat": [], "os.path.basename": [], "<builtin>.int": [], "http.Stream.from_attachment": ["<builtin>.len", "os.stat", "http.Stream.from_path", "tools.config.configmanager.filestore", "os.path.abspath", "http.Application.get_static_file", "http.Stream.__init__"], "tools.config.configmanager.filestore": ["os.path.join"], "os.path.abspath": [], "<builtin>.len": [], "http.Application.get_static_file": ["urllib.parse.urlparse", "tools.misc.file_path"], "http.Stream.from_binary_field": ["base64.b64decode", "<builtin>.len", "http.Stream.__init__"], "base64.b64decode": [], "http.Stream.read": ["<builtin>.open", "<builtin>.ValueError"], "<builtin>.ValueError": [], "<builtin>.open": [], "http.Stream.get_response": ["pathlib.Path", "io.BytesIO", "tools._vendor.send_file.send_file", "contextlib.suppress", "<builtin>.getattr", "os.path.join", "werkzeug.utils.send_file"], "io.BytesIO": [], "contextlib.suppress": [], "os.path.join": [], "pathlib.Path": [], "collections.defaultdict": [], "http.Controller": ["collections.defaultdict"], "http.Controller.__init_subclass__": ["<builtin>.super"], "http.route": [], "http.route.decorator": ["<builtin>.isinstance", "functools.wraps"], "functools.wraps": [], "http.route.decorator.route_wrapper": ["http.Response.load", "<builtin>.set", "tools.func.filter_kwargs"], "tools.func.filter_kwargs": ["inspect.signature", "<builtin>.set"], "<builtin>.set": [], "http.Response.load": ["<builtin>.type", "<builtin>.isinstance", "<builtin>.TypeError", "http.Response.__init__"], "http._generate_routing_rules": ["<builtin>.map", "inspect.getmembers", "http.route", "<builtin>.any", "http.route.decorator", "tools.misc.unique", "<builtin>.reversed", "http._generate_routing_rules.build_controllers", "functools.update_wrapper", "<builtin>.type", "<builtin>.hasattr", "<builtin>.getattr", "functools.partial"], "http._generate_routing_rules.is_valid": [], "http._generate_routing_rules.get_leaf_classes": ["http._generate_routing_rules.is_valid", "http._generate_routing_rules.get_leaf_classes"], "http._generate_routing_rules.build_controllers": ["tools.misc.unique", "<builtin>.reversed", "<builtin>.list", "<builtin>.type", "<builtin>.tuple", "http._generate_routing_rules.get_leaf_classes"], "tools.misc.unique": ["<builtin>.set"], "<builtin>.reversed": [], "<builtin>.tuple": [], "inspect.getmembers": [], "http._generate_routing_rules.is_method_a_route": ["<builtin>.getattr"], "<builtin>.map": [], "<builtin>.any": [], "<builtin>.hasattr": [], "functools.update_wrapper": [], "http.FilesystemSessionStore.get_session_filename": ["os.path.join"], "http.FilesystemSessionStore.save": ["os.mkdir", "<builtin>.super", "os.path.dirname", "os.path.isdir", "contextlib.suppress", "http.FilesystemSessionStore.get_session_filename"], "os.path.dirname": [], "os.path.isdir": [], "os.mkdir": [], "http.FilesystemSessionStore.get": ["os.mkdir", "<builtin>.super", "os.path.dirname", "os.path.isdir", "os.path.isfile", "contextlib.suppress", "os.rename", "http.FilesystemSessionStore.get_session_filename"], "os.path.isfile": [], "os.rename": [], "http.FilesystemSessionStore.rotate": ["http.FilesystemSessionStore.save", "service.security.compute_session_token", "tools._vendor.sessions.FilesystemSessionStore.delete", "tools._vendor.sessions.SessionStore.generate_key"], "tools._vendor.sessions.FilesystemSessionStore.delete": ["os.unlink", "tools._vendor.sessions.FilesystemSessionStore.get_session_filename", "http.FilesystemSessionStore.get_session_filename"], "tools._vendor.sessions.SessionStore.generate_key": ["tools._vendor.sessions.SessionStore.generate_key"], "service.security.compute_session_token": [], "http.FilesystemSessionStore.vacuum": ["time.time", "contextlib.suppress", "os.path.join", "os.unlink", "glob.iglob", "os.path.getmtime"], "time.time": [], "glob.iglob": [], "os.path.getmtime": [], "os.unlink": [], "http.Session.__init__": [], "http.Session.__getitem__": ["warnings.warn"], "http.Session.__setitem__": [], "http.Session.__delitem__": [], "http.Session.__len__": ["<builtin>.len"], "http.Session.__iter__": ["<builtin>.iter"], "<builtin>.iter": [], "http.Session.__getattr__": ["collections.abc.MutableMapping.get"], "collections.abc.MutableMapping.get": [], "http.Session.__setattr__": ["<builtin>.super"], "http.Session.clear": [], "http.Session.authenticate": ["modules.registry.Registry", "http.Session.finalize", "odoo.api.Environment"], "modules.registry.Registry": ["odoo.tools.func.locked", "threading.RLock", "odoo.tools.lazy_classproperty", "contextlib.contextmanager", "odoo.tools.lazy_property"], "odoo.api.Environment": [], "http.Session.finalize": ["<builtin>.dict", "collections.abc.MutableMapping.update", "collections.abc.MutableMapping.pop"], "collections.abc.MutableMapping.pop": [], "<builtin>.dict": [], "collections.abc.MutableMapping.update": [], "http.Session.logout": ["collections.abc.MutableMapping.update", "http.Session.clear", "http.get_default_session"], "http.Session.touch": [], "contextlib.contextmanager": [], "http.Response.__init__": ["<builtin>.super", "http.Response.set_default"], "http.Response.set_default": ["<builtin>.dict"], "<builtin>.TypeError": [], "http.Response.is_qweb": [], "http.Response.render": [], "http.Response.flatten": ["http.Response.render"], "http.Response.set_cookie": ["<builtin>.super"], "http.FutureResponse.__init__": [], "http.FutureResponse": ["functools.wraps"], "http.FutureResponse.set_cookie": [], "http.Request.__init__": ["http.Dispatcher.__init__", "http.FutureResponse.__init__"], "http.Dispatcher.__init__": [], "http.Request._post_init": ["http.Request._get_session_and_dbname"], "http.Request._get_session_and_dbname": ["<builtin>.len", "http.db_filter", "http.Request.default_lang", "http.db_list", "http.get_default_session"], "http.Request.default_lang": [], "http.Request.update_env": ["threading.current_thread"], "http.Request.update_context": ["<builtin>.dict", "http.Request.update_env"], "http.Request.context": ["<builtin>.NotImplementedError"], "<builtin>.NotImplementedError": [], "http.Request.uid": ["<builtin>.NotImplementedError"], "http.Request.cr": ["<builtin>.NotImplementedError", "<builtin>.ValueError"], "http.Request.geoip": ["http.Request._geoip_resolve"], "http.Request._geoip_resolve": [], "http.Request": ["tools.func.lazy_property"], "tools.func.lazy_property": [], "http.Request.best_lang": [], "http.Request.csrf_token": ["<builtin>.int", "<builtin>.ValueError", "time.time", "hmac.new"], "hmac.new": [], "http.Request.validate_csrf": ["<builtin>.int", "hmac.new", "hmac.compare_digest", "time.time", "<builtin>.ValueError"], "hmac.compare_digest": [], "http.Request.default_context": ["http.Request.default_lang", "<builtin>.dict", "http.get_default_session"], "http.Request.get_http_params": [], "http.Request.get_json_data": ["json.loads"], "json.loads": [], "http.Request._get_profiler_context_manager": ["<builtin>.str", "tools.profiler.Profiler.__init__", "datetime.datetime.now", "contextlib.nullcontext"], "datetime.datetime.now": [], "<builtin>.str": [], "tools.profiler.Profiler.__init__": ["<builtin>.Exception", "threading.current_thread", "tools.profiler.make_session", "tools.profiler.Collector.make", "<builtin>.isinstance", "<builtin>.getattr"], "contextlib.nullcontext": [], "http.Request._inject_future_response": [], "http.Request.make_response": ["http.Response.set_cookie", "http.Response.__init__"], "http.Request.make_json_response": ["json.dumps", "<builtin>.len", "http.Request.make_response"], "json.dumps": [], "http.Request.not_found": ["werkzeug.exceptions.NotFound"], "werkzeug.exceptions.NotFound": [], "http.Request.redirect": ["werkzeug.urls.url_parse", "<builtin>.isinstance"], "werkzeug.urls.url_parse": [], "http.Request.redirect_query": ["http.Request.redirect", "werkzeug.urls.url_encode"], "werkzeug.urls.url_encode": [], "http.Request.render": ["http.Response.render", "http.Response.__init__"], "http.Request._save_session": ["http.FutureResponse.set_cookie"], "http.Request._set_request_dispatcher": ["werkzeug.exceptions.BadRequest", "http.is_cors_preflight"], "werkzeug.exceptions.BadRequest": [], "http.Request._serve_static": ["http.Stream.from_path", "werkzeug.exceptions.NotFound"], "http.Request._serve_nodb": ["http.Request._set_request_dispatcher"], "http.Request._serve_db": ["modules.registry.Registry", "http.Request._serve_nodb", "threading.current_thread", "service.model.retrying", "odoo.api.Environment", "contextlib.closing", "<builtin>.isinstance"], "contextlib.closing": [], "service.model.retrying": ["time.sleep", "http.Request._serve_ir_http", "random.uniform", "service.model._as_validation_error", "psycopg2.errorcodes.lookup", "<builtin>.range", "<builtin>.isinstance", "odoo.http.request._get_session_and_dbname"], "http.Request._serve_ir_http": ["http.Request._set_request_dispatcher", "http.Request.get_http_params"], "http.Dispatcher.__init_subclass__": ["<builtin>.super"], "http.Dispatcher": ["abc.abstractmethod"], "abc.abstractmethod": [], "http.Dispatcher.is_compatible_with": [], "http.Dispatcher.pre_dispatch": ["http.Response.__init__"], "http.Dispatcher.dispatch": [], "http.Dispatcher.post_dispatch": ["http.Application.set_csp", "http.Request._inject_future_response", "http.Request._save_session"], "http.Application.set_csp": ["cgi.parse_header"], "http.Dispatcher.handle_error": [], "http.HttpDispatcher.is_compatible_with": [], "http.HttpDispatcher.dispatch": ["<builtin>.dict", "http.Request.redirect", "http.Request.validate_csrf", "http.Request.get_http_params"], "http.HttpDispatcher.handle_error": ["http.Request.redirect_query", "werkzeug.exceptions.BadRequest", "werkzeug.exceptions.InternalServerError", "werkzeug.exceptions.Forbidden", "<builtin>.isinstance"], "werkzeug.exceptions.Forbidden": [], "werkzeug.exceptions.InternalServerError": [], "http.JsonRPCDispatcher.__init__": ["<builtin>.super"], "http.JsonRPCDispatcher.is_compatible_with": [], "http.JsonRPCDispatcher.dispatch": ["http.Request.update_context", "http.Request.get_json_data", "werkzeug.exceptions.BadRequest", "http.JsonRPCDispatcher._response", "<builtin>.dict"], "http.JsonRPCDispatcher._response": ["http.Request.make_json_response"], "http.JsonRPCDispatcher.handle_error": ["<builtin>.isinstance", "http.JsonRPCDispatcher._response", "http.serialize_exception"], "http.Application": ["tools.func.lazy_property"], "http.Application.statics": ["modules.module.get_manifest", "os.path.join", "os.listdir", "os.path.isdir"], "os.listdir": [], "modules.module.get_manifest": ["modules.module.load_manifest"], "urllib.parse.urlparse": [], "http.Application.nodb_routing_map": ["http._generate_routing_rules", "tools.misc.submap"], "tools.misc.submap": ["<builtin>.frozenset"], "http.Application.session_store": ["tools._vendor.sessions.FilesystemSessionStore.__init__"], "tools._vendor.sessions.FilesystemSessionStore.__init__": ["tools._vendor.sessions.SessionStore.__init__", "tempfile.gettempdir"], "http.Application.geoip_resolver": ["tools.geoipresolver.GeoIPResolver.open", "tools.config.configmanager.get"], "tools.config.configmanager.get": [], "tools.geoipresolver.GeoIPResolver.open": ["tools.geoipresolver.GeoIPResolver"], "http.Application.get_db_router": [], "cgi.parse_header": [], "http.Application.__call__": ["http.Request._post_init", "http.Request._get_profiler_context_manager", "http.Request._serve_nodb", "threading.current_thread", "http.Request.__init__", "time.time", "werkzeug.contrib.fixers.ProxyFix", "http.Dispatcher.__init__", "http.Application.get_static_file", "http.Request._serve_db", "http.Request._serve_static", "http.Dispatcher.post_dispatch", "<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.getattr"], "http.Application.__call__.fake_app": [], "http.Application.__call__.fake_start_response": [], "werkzeug.contrib.fixers.ProxyFix": [], "tools.win32": ["<builtin>.hasattr"], "tools.win32.nl_langinfo": ["time.strptime", "datetime.datetime"], "time.strptime": [], "datetime.datetime": [], "tools.osutil": ["re.compile"], "tools.osutil.clean_filename": ["re.sub"], "re.sub": [], "tools.osutil.listdir": ["os.walk", "os.path.relpath", "warnings.warn", "os.path.normpath", "os.path.join"], "os.path.normpath": [], "os.walk": [], "os.path.relpath": [], "tools.osutil.zip_dir": ["<builtin>.len", "os.walk", "os.path.dirname", "<builtin>.sorted", "os.path.isfile", "os.path.join", "os.path.normpath", "os.path.splitext", "zipfile.ZipFile"], "zipfile.ZipFile": [], "os.path.splitext": [], "tools.osutil.<lambda1>": [], "tools.osutil.is_running_as_nt_service": ["win32service.QueryServiceStatusEx", "win32serviceutil.SmartOpenService", "win32service.OpenSCManager", "contextlib.contextmanager", "tools.osutil.is_running_as_nt_service.close_srv", "os.getppid"], "tools.osutil.is_running_as_nt_service.close_srv": ["win32service.CloseServiceHandle"], "win32service.CloseServiceHandle": [], "win32service.OpenSCManager": [], "win32serviceutil.SmartOpenService": [], "win32service.QueryServiceStatusEx": [], "os.getppid": [], "tools.pdf": ["logging.getLogger", "re.compile"], "tools.pdf.PdfFileReader.__init__": ["<builtin>.len", "<builtin>.super"], "tools.pdf._unwrapping_get": [], "tools.pdf.BrandedFileWriter.__init__": ["<builtin>.super", "PyPDF2.PdfFileWriter.addMetadata"], "PyPDF2.PdfFileWriter.addMetadata": [], "tools.pdf.merge_pdf": ["io.BytesIO", "PyPDF2.PdfFileReader", "tools.pdf.BrandedFileWriter.__init__", "PyPDF2.PdfFileReader.getNumPages", "PyPDF2.PdfFileReader.getPage", "PyPDF2.PdfFileWriter", "<builtin>.range"], "PyPDF2.PdfFileWriter": [], "PyPDF2.PdfFileReader": [], "PyPDF2.PdfFileReader.getNumPages": [], "<builtin>.range": [], "PyPDF2.PdfFileReader.getPage": [], "tools.pdf.rotate_pdf": ["io.BytesIO", "PyPDF2.PdfFileReader", "tools.pdf.BrandedFileWriter.__init__", "PyPDF2.PdfFileReader.getNumPages", "PyPDF2.PdfFileReader.getPage", "PyPDF2.PdfFileWriter", "<builtin>.range"], "tools.pdf.to_pdf_stream": ["PIL.Image.open", "io.BytesIO"], "PIL.Image.open": [], "tools.pdf.add_banner": ["<builtin>.abs", "io.BytesIO", "<builtin>.float", "reportlab.lib.colors.Color", "PyPDF2.PdfFileReader", "PyPDF2.PdfFileReader.getNumPages", "tools.pdf.BrandedFileWriter.__init__", "PyPDF2.PdfFileReader.getPage", "reportlab.lib.utils.ImageReader", "PyPDF2.PdfFileWriter", "<builtin>.range", "odoo.tools.misc.file_open", "PIL.Image.open", "reportlab.pdfgen.canvas.Canvas"], "reportlab.pdfgen.canvas.Canvas": [], "odoo.tools.misc.file_open": [], "reportlab.lib.colors.Color": [], "<builtin>.abs": [], "<builtin>.float": [], "reportlab.lib.utils.ImageReader": [], "tools.pdf.<lambda1>": ["PyPDF2.PdfFileReader.__init__"], "PyPDF2.PdfFileReader.__init__": [], "tools.pdf.OdooPdfFileReader.getAttachments": ["<builtin>.len", "PyPDF2.PdfFileReader.decrypt", "<builtin>.range"], "PyPDF2.PdfFileReader.decrypt": [], "tools.pdf.OdooPdfFileWriter.__init__": ["<builtin>.super"], "tools.pdf.OdooPdfFileWriter.addAttachment": ["PyPDF2.generic.NameObject", "PyPDF2.PdfFileWriter._add_object", "PyPDF2.PdfFileWriter._root_object.get", "PyPDF2.generic.ArrayObject", "PyPDF2.generic.DictionaryObject", "PyPDF2.PdfFileWriter._root_object.update", "tools.pdf.OdooPdfFileWriter._create_attachment_object"], "tools.pdf.OdooPdfFileWriter._create_attachment_object": ["PyPDF2.generic.NameObject", "PyPDF2.generic.createStringObject", "<builtin>.len", "PyPDF2.PdfFileWriter._add_object", "PyPDF2.generic.DictionaryObject", "datetime.datetime.now", "hashlib.md5", "PyPDF2.generic.DecodedStreamObject"], "PyPDF2.PdfFileWriter._root_object.get": [], "PyPDF2.generic.ArrayObject": [], "PyPDF2.generic.DictionaryObject": [], "PyPDF2.generic.NameObject": [], "PyPDF2.PdfFileWriter._root_object.update": [], "PyPDF2.PdfFileWriter._add_object": [], "tools.pdf.OdooPdfFileWriter.embed_odoo_attachment": ["tools.pdf.OdooPdfFileWriter.addAttachment"], "tools.pdf.OdooPdfFileWriter.cloneReaderDocumentRoot": ["<builtin>.super", "<builtin>.len"], "tools.pdf.OdooPdfFileWriter.convert_to_pdfa": ["PyPDF2.generic.DictionaryObject", "<builtin>.len", "fontTools.ttLib.TTFont", "io.BytesIO", "PyPDF2.PdfFileWriter._add_object", "PyPDF2.generic.ByteStringObject", "odoo.tools.misc.file_open", "PyPDF2.PdfFileWriter.addMetadata", "zlib.compress", "PyPDF2.generic.NameObject", "PyPDF2.generic.createStringObject", "PyPDF2.generic.ArrayObject", "zlib.decompress", "PyPDF2.PdfFileWriter._root_object.update", "PyPDF2.generic.NumberObject", "<builtin>.str", "hashlib.md5", "PyPDF2.generic.DecodedStreamObject", "<builtin>.round"], "hashlib.md5": [], "PyPDF2.generic.ByteStringObject": [], "zlib.compress": [], "PyPDF2.generic.DecodedStreamObject": [], "PyPDF2.generic.NumberObject": [], "PyPDF2.generic.createStringObject": [], "zlib.decompress": [], "fontTools.ttLib.TTFont": [], "<builtin>.round": [], "tools.pdf.OdooPdfFileWriter.add_file_metadata": ["<builtin>.len", "PyPDF2.generic.NameObject", "PyPDF2.PdfFileWriter._root_object.update", "PyPDF2.PdfFileWriter._add_object", "<builtin>.str", "PyPDF2.generic.DecodedStreamObject"], "tools._monkeypatches": [], "tools._monkeypatches.<lambda1>": ["shutil.copyfileobj"], "shutil.copyfileobj": [], "tools.appdirs": ["<builtin>.print", "<builtin>.str", "<builtin>.getattr", "tools.appdirs.AppDirs.__init__"], "tools.appdirs.user_data_dir": ["os.getenv", "tools.appdirs._get_win_folder_from_registry", "os.path.expanduser", "os.path.join", "os.path.normpath", "tools.appdirs._get_win_folder_with_pywin32", "tools.appdirs._get_win_folder_with_ctypes"], "tools.appdirs._get_win_folder_from_registry": ["winreg.QueryValueEx", "winreg.OpenKey"], "tools.appdirs._get_win_folder_with_pywin32": ["<builtin>.str", "win32api.GetShortPathName", "win32com.shell.shell.SHGetFolderPath", "<builtin>.getattr", "<builtin>.ord"], "tools.appdirs._get_win_folder_with_ctypes": ["ctypes.windll.kernel32.GetShortPathNameW", "<builtin>.ord", "ctypes.windll.shell32.SHGetFolderPathW", "ctypes.create_unicode_buffer"], "os.path.expanduser": [], "os.getenv": [], "tools.appdirs.site_data_dir": ["os.sep.join", "os.getenv", "tools.appdirs._get_win_folder_from_registry", "os.path.expanduser", "os.defpath.split", "os.path.join", "os.path.normpath", "tools.appdirs._get_win_folder_with_pywin32", "os.pathsep.join", "odoo.addons.__path__.split", "tools.appdirs._get_win_folder_with_ctypes"], "os.pathsep.join": [], "os.defpath.split": [], "odoo.addons.__path__.split": [], "os.sep.join": [], "tools.appdirs.user_config_dir": ["os.path.expanduser", "tools.appdirs.user_data_dir", "os.getenv", "os.path.join"], "tools.appdirs.site_config_dir": ["os.sep.join", "os.getenv", "os.path.expanduser", "os.defpath.split", "os.path.join", "os.pathsep.join", "odoo.addons.__path__.split", "tools.appdirs.site_data_dir"], "tools.appdirs.user_cache_dir": ["os.getenv", "tools.appdirs._get_win_folder_from_registry", "os.path.expanduser", "os.path.join", "os.path.normpath", "tools.appdirs._get_win_folder_with_pywin32", "tools.appdirs._get_win_folder_with_ctypes"], "tools.appdirs.user_log_dir": ["os.path.expanduser", "os.path.join", "tools.appdirs.user_cache_dir", "tools.appdirs.user_data_dir"], "tools.appdirs.AppDirs.__init__": [], "tools.appdirs.AppDirs.user_data_dir": ["tools.appdirs.AppDirs.user_data_dir"], "tools.appdirs.AppDirs.site_data_dir": ["tools.appdirs.AppDirs.site_data_dir"], "tools.appdirs.AppDirs.user_config_dir": ["tools.appdirs.AppDirs.user_config_dir"], "tools.appdirs.AppDirs.site_config_dir": ["tools.appdirs.AppDirs.site_data_dir"], "tools.appdirs.AppDirs.user_cache_dir": ["tools.appdirs.AppDirs.user_cache_dir"], "tools.appdirs.AppDirs.user_log_dir": ["tools.appdirs.AppDirs.user_log_dir"], "winreg.OpenKey": [], "winreg.QueryValueEx": [], "win32com.shell.shell.SHGetFolderPath": [], "<builtin>.ord": [], "win32api.GetShortPathName": [], "ctypes.create_unicode_buffer": [], "ctypes.windll.shell32.SHGetFolderPathW": [], "ctypes.windll.kernel32.GetShortPathNameW": [], "<builtin>.print": [], "tools.cloc": [], "tools.cloc.Cloc.__init__": [], "tools.cloc.Cloc.parse_xml": ["re.sub"], "tools.cloc.Cloc.parse_py": ["<builtin>.len", "<builtin>.set", "ast.walk", "<builtin>.hasattr", "ast.parse"], "ast.parse": [], "ast.walk": [], "tools.cloc.Cloc.parse_c_like": ["re.compile", "re.sub"], "tools.cloc.Cloc.parse_c_like.replacer": [], "tools.cloc.Cloc.parse_js": ["tools.cloc.Cloc.parse_c_like"], "tools.cloc.Cloc.parse_scss": ["tools.cloc.Cloc.parse_c_like"], "tools.cloc.Cloc.parse_css": ["tools.cloc.Cloc.parse_c_like"], "tools.cloc.Cloc.parse": ["tools.cloc.Cloc.parse_js", "tools.cloc.Cloc.parse_css", "tools.cloc.Cloc.parse_xml", "tools.cloc.Cloc.parse_scss", "tools.cloc.Cloc.parse_py"], "tools.cloc.Cloc.book": ["<builtin>.len", "<builtin>.max"], "<builtin>.max": [], "tools.cloc.Cloc.count_path": ["<builtin>.open", "pathlib.Path", "tools.cloc.Cloc.book", "os.walk", "ast.literal_eval", "<builtin>.str", "os.path.join", "<builtin>.filter", "os.path.basename", "os.path.splitext", "<builtin>.set", "odoo.addons.__path__.rstrip", "os.defpath.rstrip", "os.path.getsize", "tools.cloc.Cloc.parse"], "odoo.addons.__path__.rstrip": [], "os.defpath.rstrip": [], "ast.literal_eval": [], "<builtin>.filter": [], "os.path.getsize": [], "tools.cloc.Cloc.count_modules": ["os.path.realpath", "<builtin>.any", "odoo.modules.get_module_path", "os.path.dirname", "tools.cloc.Cloc.count_path", "<builtin>.set"], "odoo.modules.get_module_path": [], "os.path.realpath": [], "tools.cloc.Cloc.count_customization": ["<builtin>.len", "tools.cloc.Cloc.book", "tools.cloc.Cloc.parse_xml", "os.path.splitext", "tools.cloc.Cloc.parse", "tools.cloc.Cloc.parse_py"], "tools.cloc.Cloc.count_env": ["tools.cloc.Cloc.count_customization", "tools.cloc.Cloc.count_modules"], "tools.cloc.Cloc.count_database": ["odoo.registry", "tools.cloc.Cloc.count_env", "odoo.api.Environment"], "odoo.registry": [], "tools.cloc.Cloc.report": ["<builtin>.sorted", "<builtin>.sum", "<builtin>.min", "shutil.get_terminal_size", "<builtin>.print"], "shutil.get_terminal_size": [], "<builtin>.min": [], "tools.cloc.Cloc.report.<lambda1>": [], "<builtin>.sum": [], "tools.cloc.Cloc.report.<lambda2>": [], "tools.pycompat": ["codecs.getreader", "codecs.getwriter"], "codecs.getreader": [], "codecs.getwriter": [], "tools.pycompat.csv_reader": ["<builtin>.isinstance", "csv.reader"], "csv.reader": [], "tools.pycompat.csv_writer": ["<builtin>.isinstance", "csv.writer"], "csv.writer": [], "tools.pycompat.to_text": ["<builtin>.isinstance", "<builtin>.str"], "tools.image": ["PIL.Image.preinit"], "PIL.Image.preinit": [], "tools.image.ImageProcess.__init__": ["tools.image.image_fix_orientation", "io.BytesIO", "<builtin>.str", "<builtin>.ValueError", "odoo.exceptions.UserError", "PIL.Image.open", "odoo.tools.translate._"], "odoo.tools.translate._": [], "odoo.exceptions.UserError": [], "tools.image.image_fix_orientation": ["<builtin>.getattr"], "tools.image.ImageProcess.image_quality": ["tools.image.image_apply_opt"], "tools.image.image_apply_opt": ["io.BytesIO"], "tools.image.ImageProcess.resize": [], "tools.image.ImageProcess.crop_resize": ["<builtin>.int", "tools.image.ImageProcess.resize"], "tools.image.ImageProcess.colorize": ["random.randrange", "PIL.Image.new"], "random.randrange": [], "PIL.Image.new": [], "tools.image.image_process": ["tools.image.ImageProcess.__init__", "tools.image.ImageProcess.crop_resize", "tools.image.ImageProcess.resize", "tools.image.ImageProcess.colorize", "tools.image.ImageProcess.image_quality"], "tools.image.average_dominant_color": ["<builtin>.int", "<builtin>.sum", "<builtin>.max", "<builtin>.range", "<builtin>.tuple"], "tools.image.binary_to_image": ["PIL.Image.open", "odoo.exceptions.UserError", "odoo.tools.translate._", "io.BytesIO"], "tools.image.base64_to_image": ["io.BytesIO", "odoo.exceptions.UserError", "base64.b64decode", "PIL.Image.open", "odoo.tools.translate._"], "tools.image.image_to_base64": ["tools.image.image_apply_opt", "base64.b64encode"], "base64.b64encode": [], "tools.image.is_image_size_above": ["tools.image.image_fix_orientation", "tools.image.base64_to_image"], "tools.image.image_guess_size_from_field_name": ["<builtin>.int"], "tools.image.image_data_uri": [], "tools.image.get_saturation": ["<builtin>.min", "<builtin>.abs", "<builtin>.max"], "tools.image.get_lightness": ["<builtin>.min", "<builtin>.max"], "tools.image.hex_to_rgb": ["<builtin>.int", "<builtin>.tuple", "<builtin>.range"], "tools.image.rgb_to_hex": ["<builtin>.hex"], "<builtin>.hex": [], "tools.mail": ["logging.getLogger", "re.compile", "<builtin>.frozenset"], "<builtin>.frozenset": [], "tools.mail._Cleaner": ["re.compile"], "tools.mail._Cleaner.__call__": ["<builtin>.super", "tools.mail._Cleaner.strip_class", "tools.mail._Cleaner.parse_style", "<builtin>.getattr"], "tools.mail._Cleaner.strip_class": [], "tools.mail._Cleaner.parse_style": ["collections.OrderedDict"], "collections.OrderedDict": [], "tools.mail.tag_quote": ["re.compile", "re.search", "tools.mail.tag_quote._tag_matching_regex_in_text"], "tools.mail.tag_quote._create_new_node": ["lxml.etree.Element"], "lxml.etree.Element": [], "tools.mail.tag_quote._tag_matching_regex_in_text": ["re.search", "tools.mail.tag_quote._create_new_node", "re.finditer"], "re.search": [], "re.finditer": [], "tools.mail.html_normalize": ["<builtin>.str", "lxml.html.tostring", "odoo.loglevels.ustr", "tools.mail.html_sanitize.sanitize_handler", "re.compile", "tools.mail.tag_quote", "lxml.html.fromstring"], "lxml.html.fromstring": [], "tools.mail.html_sanitize.sanitize_handler": ["lxml.html.clean.Cleaner.__init__", "<builtin>.frozenset"], "lxml.html.tostring": [], "tools.mail.html_sanitize": ["logging.getLogger", "markupsafe.Markup", "tools.mail.html_normalize"], "lxml.html.clean.Cleaner.__init__": [], "markupsafe.Markup": [], "tools.mail.validate_url": ["werkzeug.urls.url_parse"], "tools.mail.is_html_empty": ["re.compile", "<builtin>.bool", "re.sub"], "<builtin>.bool": [], "tools.mail.html_keep_url": ["re.compile", "re.finditer"], "tools.mail.html_to_inner_content": ["tools.mail.html_sanitize", "<builtin>.isinstance", "tools.mail.is_html_empty", "re.sub"], "tools.mail.html2plaintext": ["<builtin>.len", "lxml.etree.tostring", "lxml.etree.HTMLParser", "odoo.loglevels.ustr", "lxml.etree.fromstring", "<builtin>.enumerate", "re.sub"], "lxml.etree.HTMLParser": [], "lxml.etree.fromstring": [], "lxml.etree.tostring": [], "<builtin>.enumerate": [], "tools.mail.plaintext2html": ["tools.mail.html_keep_url", "odoo.tools.misc.html_escape", "odoo.loglevels.ustr", "markupsafe.Markup", "re.finditer", "re.compile", "re.sub"], "odoo.tools.misc.html_escape": [], "tools.mail.append_content_to_html": ["odoo.tools.misc.html_escape", "tools.mail.plaintext2html", "odoo.loglevels.ustr", "markupsafe.Markup", "re.sub"], "tools.mail.append_content_to_html.<lambda1>": [], "tools.mail.prepend_html_content": ["<builtin>.type", "re.search", "re.sub"], "tools.mail.generate_tracking_message_id": ["socket.gethostname", "random.SystemRandom", "random.random", "time.time"], "random.SystemRandom": [], "random.random": [], "socket.gethostname": [], "tools.mail.email_split_tuples": ["email.utils.getaddresses"], "email.utils.getaddresses": [], "tools.mail.email_split": ["tools.mail.email_split_tuples"], "tools.mail.email_split_and_format": ["tools.mail.email_split_tuples", "tools.mail.formataddr"], "tools.mail.formataddr": ["base64.b64encode", "idna.encode"], "tools.mail.email_normalize": ["<builtin>.len", "tools.mail.email_split"], "tools.mail.email_domain_extract": ["tools.mail.email_normalize"], "tools.mail.email_domain_normalize": [], "tools.mail.url_domain_extract": ["urllib.parse.urlparse"], "tools.mail.email_escape_char": [], "tools.mail.decode_message_header": [], "idna.encode": [], "tools.mail.encapsulate_email": ["email.utils.getaddresses", "tools.mail.formataddr"], "tools.which": ["os.defpath.insert", "doctest.testmod", "<builtin>.set", "os.environ.get", "sys.platform.startswith"], "sys.platform.startswith": [], "os.environ.get": [], "os.defpath.insert": [], "tools.which.which_files": ["os.path.exists", "os.defpath.split", "os.path.join", "os.path.split", "<builtin>.isinstance", "os.access"], "os.path.split": [], "os.path.exists": [], "os.access": [], "tools.which.which": ["<builtin>.IOError", "tools.which.which_files", "<builtin>.next"], "<builtin>.next": [], "<builtin>.IOError": [], "doctest.testmod": [], "tools.debugger": ["logging.getLogger"], "tools.debugger.post_mortem": ["importlib.import_module", "<builtin>.isinstance", "<builtin>.next"], "importlib.import_module": [], "tools.cache": ["logging.getLogger", "collections.defaultdict"], "tools.cache.ormcache_counter.__init__": [], "tools.cache.ormcache_counter.ratio": [], "tools.cache.ormcache.__init__": [], "tools.cache.ormcache.__call__": ["decorator.decorator", "tools.cache.ormcache.determine_key"], "tools.cache.ormcache.determine_key": ["inspect.signature", "<builtin>.str"], "decorator.decorator": [], "inspect.signature": [], "tools.cache.ormcache.determine_key.<lambda1>": [], "tools.cache.ormcache.lru": [], "tools.cache.ormcache.lookup": ["service.db.restore_db", "service.db.dump_db", "service.db.exp_restore", "service.db.exp_rename", "service.db.exp_migrate_databases", "service.db.exp_dump", "tools.cache.ormcache.lru", "tools.cache.ormcache.determine_key.<lambda1>", "service.db.exp_duplicate_database", "service.db.exp_drop", "service.db.exp_change_admin_password", "service.db.dump_db_manifest", "service.db.exp_create_database"], "service.db.restore_db": ["<builtin>.Exception", "subprocess.run", "tempfile.TemporaryDirectory", "odoo.api.Environment", "os.path.join", "zipfile.ZipFile", "service.db._create_empty_database", "odoo.tools.exec_pg_environ", "shutil.move", "zipfile.is_zipfile", "<builtin>.isinstance", "service.db.exp_db_exist", "odoo.modules.registry.Registry.new"], "service.db.dump_db": ["json.dump", "subprocess.Popen", "os.path.exists", "shutil.copytree", "tempfile.TemporaryDirectory", "service.db.dump_db_manifest", "subprocess.run", "odoo.sql_db.db_connect", "odoo.tools.find_pg_tool", "os.path.join", "shutil.copyfileobj", "odoo.tools.exec_pg_environ", "tempfile.TemporaryFile", "<builtin>.open", "odoo.tools.config.filestore", "odoo.tools.osutil.zip_dir"], "service.db.exp_restore": ["service.db.restore_db", "service.db.exp_restore.chunks", "os.unlink", "base64.b64decode", "tempfile.NamedTemporaryFile"], "service.db.exp_rename": ["<builtin>.Exception", "os.path.exists", "psycopg2.sql.Identifier", "odoo.sql_db.db_connect", "contextlib.closing", "odoo.sql_db.close_db", "psycopg2.sql.SQL", "service.db._drop_conn", "shutil.move", "odoo.tools.config.filestore", "odoo.modules.registry.Registry.delete"], "service.db.dump_db_manifest": ["<builtin>.dict", "<builtin>.divmod"], "service.db.exp_migrate_databases": ["odoo.modules.registry.Registry.new"], "service.db.exp_dump": ["service.db.dump_db", "base64.b64encode", "tempfile.TemporaryFile"], "service.db.exp_duplicate_database": ["os.path.exists", "shutil.copytree", "psycopg2.sql.Identifier", "odoo.sql_db.db_connect", "contextlib.closing", "odoo.api.Environment", "odoo.sql_db.close_db", "psycopg2.sql.SQL", "service.db._drop_conn", "odoo.tools.config.filestore", "odoo.modules.registry.Registry.new"], "service.db.exp_drop": ["<builtin>.Exception", "os.path.exists", "psycopg2.sql.Identifier", "service.db.list_dbs", "odoo.sql_db.db_connect", "shutil.rmtree", "contextlib.closing", "odoo.sql_db.close_db", "psycopg2.sql.SQL", "service.db._drop_conn", "odoo.tools.config.filestore", "odoo.modules.registry.Registry.delete"], "service.db.exp_change_admin_password": ["odoo.tools.config.set_admin_password", "odoo.tools.config.save"], "service.db.exp_create_database": ["service.db._initialize_db", "service.db._create_empty_database"], "tools.cache.ormcache.clear": [], "tools.cache.ormcache_context.__init__": ["<builtin>.super"], "tools.cache.ormcache_context.determine_key": ["inspect.signature", "<builtin>.str"], "tools.cache.ormcache_multi.__init__": ["<builtin>.super"], "tools.cache.ormcache_multi.determine_key": ["<builtin>.super", "<builtin>.str", "<builtin>.list", "inspect.signature", "<builtin>.isinstance"], "tools.cache.ormcache_multi.lookup": ["tools.cache.ormcache.determine_key.<lambda1>", "tools.cache.ormcache.lru", "<builtin>.list"], "tools.cache.dummy_cache.__init__": [], "tools.cache.dummy_cache.__call__": [], "tools.cache.dummy_cache.clear": [], "tools.cache.log_ormcache_stats": ["threading.current_thread", "<builtin>.sorted", "odoo.modules.registry.Registry.registries.d.items", "collections.Counter", "<builtin>.getattr"], "odoo.modules.registry.Registry.registries.d.items": [], "collections.Counter": [], "tools.cache.log_ormcache_stats.<lambda1>": [], "tools.cache.get_cache_key_counter": [], "tools.lru": [], "tools.lru.LRU.__init__": ["threading.RLock", "collections.OrderedDict", "<builtin>.max"], "threading.RLock": [], "tools.lru.LRU": ["tools.func.synchronized.locked"], "tools.func.synchronized.locked": ["<builtin>.getattr"], "tools.lru.LRU.__contains__": [], "tools.lru.LRU.get": [], "tools.lru.LRU.__getitem__": [], "tools.lru.LRU.__setitem__": ["<builtin>.len"], "tools.lru.LRU.__delitem__": [], "tools.lru.LRU.__len__": ["<builtin>.len"], "tools.lru.LRU.pop": [], "tools.lru.LRU.clear": [], "tools": [], "tools.misc": ["logging.getLogger", "<builtin>.len", "lxml.etree.XMLParser", "<builtin>.object", "types.ModuleType", "re.compile", "lxml.etree.set_default_parser", "datetime.date.today"], "lxml.etree.XMLParser": [], "lxml.etree.set_default_parser": [], "tools.misc.find_in_path": ["tools.which.which", "tools.config.configmanager.get", "os.environ.get", "os.pathsep.join"], "tools.misc._exec_pipe": ["subprocess.Popen", "warnings.warn"], "subprocess.Popen": [], "tools.misc.exec_command_pipe": ["warnings.warn", "tools.misc.find_in_path", "tools.misc._exec_pipe", "<builtin>.Exception"], "<builtin>.Exception": [], "tools.misc.find_pg_tool": ["tools.which.which", "<builtin>.Exception"], "tools.misc.exec_pg_environ": ["os.environ.copy", "<builtin>.str"], "os.environ.copy": [], "tools.misc.exec_pg_command": ["<builtin>.Exception", "warnings.warn", "tools.misc.exec_pg_environ", "subprocess.call", "<builtin>.open", "tools.misc.find_pg_tool"], "subprocess.call": [], "tools.misc.exec_pg_command_pipe": ["warnings.warn", "tools.misc.exec_pg_environ", "tools.misc.find_pg_tool", "tools.misc._exec_pipe"], "os.path.isabs": [], "os.path.normcase": [], "<builtin>.FileNotFoundError": [], "tools.misc.file_open": ["os.path.isfile", "tools.misc.file_path", "<builtin>.open", "<builtin>.FileNotFoundError"], "tools.misc.flatten": ["<builtin>.isinstance", "tools.misc.flatten"], "tools.misc.reverse_enumerate": ["<builtin>.len", "<builtin>.zip", "<builtin>.reversed", "<builtin>.range"], "<builtin>.zip": [], "tools.misc.partition": ["models.BaseModel.exists.<lambda1>"], "models.BaseModel.exists.<lambda1>": ["<builtin>.isinstance"], "tools.misc.topological_sort": ["tools.misc.topological_sort.visit", "<builtin>.set"], "tools.misc.topological_sort.visit": ["tools.misc.topological_sort.visit"], "tools.misc.merge_sequences": ["tools.misc.topological_sort", "collections.OrderedDict", "<builtin>.enumerate"], "tools.misc.PatchedWorkbook.add_sheet": ["<builtin>.super", "re.sub"], "tools.misc.PatchedXlsxWorkbook.add_worksheet": ["<builtin>.super", "re.sub"], "tools.misc.to_xml": ["warnings.warn"], "tools.misc.get_iso_codes": ["odoo.http.request.env.lang.split", "odoo.http.request.env.lang.find"], "odoo.http.request.env.lang.find": [], "odoo.http.request.env.lang.split": [], "tools.misc.scan_languages": ["tools.pycompat.csv_reader", "odoo.modules.module.get_resource_path", "<builtin>.sorted", "<builtin>.next", "<builtin>.open", "operator.itemgetter"], "odoo.modules.module.get_resource_path": [], "operator.itemgetter": [], "tools.misc.mod10r": ["<builtin>.int", "<builtin>.str"], "tools.misc.str2bool": ["odoo.loglevels.ustr", "<builtin>.ValueError", "<builtin>.bool"], "tools.misc.human_size": ["<builtin>.len", "<builtin>.isinstance", "<builtin>.float"], "tools.misc.logged": ["warnings.warn", "functools.wraps"], "tools.misc.logged.wrapper": ["time.time", "<builtin>.enumerate", "pprint.pformat"], "pprint.pformat": [], "tools.misc.profile.__init__": ["warnings.warn"], "tools.misc.profile.__call__": ["functools.wraps"], "tools.misc.profile.__call__.wrapper": ["cProfile.Profile"], "cProfile.Profile": [], "tools.misc.detect_ip_addr": ["warnings.warn", "tools.misc.detect_ip_addr._detect_ip_addr"], "tools.misc.detect_ip_addr._detect_ip_addr": ["socket.gethostname", "socket.socket", "socket.gethostbyname", "array.array", "struct.pack", "fcntl.ioctl", "<builtin>.range", "socket.inet_ntoa", "struct.unpack"], "socket.gethostbyname": [], "socket.socket": [], "array.array": [], "struct.pack": [], "fcntl.ioctl": [], "struct.unpack": [], "socket.inet_ntoa": [], "datetime.date.today": [], "tools.misc.posix_to_ldml": [], "tools.misc.split_every": ["<builtin>.iter", "itertools.islice"], "itertools.islice": [], "<builtin>.object": [], "tools.misc.resolve_attr": ["<builtin>.AttributeError", "warnings.warn", "<builtin>.getattr"], "<builtin>.AttributeError": [], "tools.misc.attrgetter": ["<builtin>.len", "warnings.warn"], "tools.misc.attrgetter.g": ["tools.misc.resolve_attr", "<builtin>.tuple"], "tools.misc.discardattr": ["<builtin>.delattr"], "<builtin>.delattr": [], "tools.misc.remove_accents": ["odoo.loglevels.ustr", "unicodedata.normalize", "unicodedata.combining"], "unicodedata.normalize": [], "unicodedata.combining": [], "tools.misc.unquote.__repr__": [], "tools.misc.mute_logger.__init__": ["<builtin>.super"], "tools.misc.mute_logger.__enter__": ["logging.getLogger"], "tools.misc.mute_logger.__exit__": ["logging.getLogger"], "tools.misc.mute_logger.__call__": ["functools.wraps"], "tools.misc.mute_logger.__call__.deco": [], "tools.misc.mute_logger.emit": [], "tools.misc.lower_logging.__init__": ["<builtin>.super"], "tools.misc.lower_logging.__enter__": ["logging.getLogger"], "tools.misc.lower_logging.__exit__": ["logging.getLogger"], "tools.misc.lower_logging.emit": ["<builtin>.type", "logging.getLogger", "<builtin>.tuple"], "tools.misc.CountingStream.__init__": ["<builtin>.iter"], "tools.misc.CountingStream.__iter__": [], "tools.misc.CountingStream.next": ["tools.misc.CountingStream.next", "<builtin>.StopIteration"], "<builtin>.StopIteration": [], "tools.misc.stripped_sys_argv": ["<builtin>.all", "itertools.groupby", "<builtin>.sorted", "<builtin>.list", "tools.misc.stripped_sys_argv.strip", "<builtin>.enumerate", "<builtin>.set", "<builtin>.dict", "<builtin>.tuple"], "<builtin>.all": [], "tools.misc.stripped_sys_argv.<lambda1>": [], "itertools.groupby": [], "tools.misc.stripped_sys_argv.strip": [], "tools.misc.ConstantMapping.__init__": [], "tools.misc.ConstantMapping.__len__": [], "tools.misc.ConstantMapping.__iter__": ["<builtin>.iter"], "tools.misc.ConstantMapping.__getitem__": [], "tools.misc.dumpstacks": ["sys._current_frames", "gc.get_objects", "threading.enumerate", "tools.misc.dumpstacks.extract_stack", "<builtin>.isinstance", "<builtin>.getattr"], "tools.misc.dumpstacks.extract_stack": ["traceback.extract_stack"], "traceback.extract_stack": [], "threading.enumerate": [], "sys._current_frames": [], "gc.get_objects": [], "tools.misc.freehash": ["tools.misc.freehash", "<builtin>.frozenset", "<builtin>.hash", "<builtin>.isinstance", "<builtin>.id"], "<builtin>.hash": [], "<builtin>.id": [], "tools.misc.clean_context": [], "tools.misc.frozendict.__delitem__": ["<builtin>.NotImplementedError"], "tools.misc.frozendict.__setitem__": ["<builtin>.NotImplementedError"], "tools.misc.frozendict.clear": ["<builtin>.NotImplementedError"], "tools.misc.frozendict.pop": ["<builtin>.NotImplementedError"], "tools.misc.frozendict.popitem": ["<builtin>.NotImplementedError"], "tools.misc.frozendict.setdefault": ["<builtin>.NotImplementedError"], "tools.misc.frozendict.update": ["<builtin>.NotImplementedError"], "tools.misc.frozendict.__hash__": ["<builtin>.hash", "tools.misc.freehash", "<builtin>.frozenset"], "tools.misc.Collector.__getitem__": [], "tools.misc.Collector.__setitem__": ["<builtin>.super", "<builtin>.tuple"], "tools.misc.Collector.add": [], "tools.misc.Collector.discard_keys_and_values": ["<builtin>.tuple", "<builtin>.list"], "tools.misc.StackMap.__init__": [], "tools.misc.StackMap.__getitem__": ["<builtin>.reversed", "<builtin>.KeyError"], "<builtin>.KeyError": [], "tools.misc.StackMap.__setitem__": [], "tools.misc.StackMap.__delitem__": [], "tools.misc.StackMap.__iter__": ["<builtin>.iter"], "tools.misc.StackMap.__len__": ["<builtin>.sum"], "tools.misc.StackMap.__str__": [], "tools.misc.StackMap.pushmap": [], "tools.misc.StackMap.popmap": [], "tools.misc.OrderedSet.__init__": [], "tools.misc.OrderedSet.__contains__": [], "tools.misc.OrderedSet.__iter__": ["<builtin>.iter"], "tools.misc.OrderedSet.__len__": ["<builtin>.len"], "tools.misc.OrderedSet.add": [], "tools.misc.OrderedSet.discard": [], "tools.misc.OrderedSet.update": ["itertools.repeat", "<builtin>.zip"], "itertools.repeat": [], "tools.misc.OrderedSet.difference_update": ["tools.misc.OrderedSet.discard"], "tools.misc.OrderedSet.__repr__": ["<builtin>.type", "<builtin>.list"], "tools.misc.LastOrderedSet.add": ["tools.misc.LastOrderedSet.add", "tools.misc.OrderedSet.discard", "tools.misc.OrderedSet.add"], "tools.misc.Callbacks.__init__": ["collections.deque"], "collections.deque": [], "tools.misc.Callbacks.add": [], "tools.misc.Callbacks.run": ["tools.misc.Callbacks.clear"], "tools.misc.Callbacks.clear": [], "tools.misc.ReversedIterable.__init__": [], "tools.misc.ReversedIterable.__iter__": ["<builtin>.reversed"], "tools.misc.ReversedIterable.__reversed__": ["<builtin>.iter"], "tools.misc.groupby": ["collections.defaultdict", "tools.misc.groupby.<lambda1>"], "tools.misc.groupby.<lambda1>": [], "tools.misc.Reverse.__init__": [], "tools.misc.Reverse.__eq__": [], "tools.misc.Reverse.__ne__": [], "tools.misc.Reverse.__ge__": [], "tools.misc.Reverse.__gt__": [], "tools.misc.Reverse.__le__": [], "tools.misc.Reverse.__lt__": [], "tools.misc.ignore": ["contextlib.suppress", "warnings.warn"], "tools.misc.replace_exceptions.__init__": ["<builtin>.ValueError", "<builtin>.issubclass", "<builtin>.next", "<builtin>.TypeError"], "tools.misc.replace_exceptions.__enter__": [], "tools.misc.replace_exceptions.__exit__": ["<builtin>.issubclass"], "tools.misc.get_lang": [], "tools.misc.babel_locale_parse": ["babel.Locale.default", "babel.Locale.parse"], "babel.Locale.parse": [], "babel.Locale.default": [], "tools.misc.formatLang": ["<builtin>.isinstance", "tools.misc.get_lang", "<builtin>.str"], "tools.misc.format_date": ["<builtin>.len", "odoo.fields.Datetime.from_string", "tools.misc.get_lang", "tools.misc.posix_to_ldml", "odoo.fields.Datetime.context_timestamp", "tools.misc.babel_locale_parse", "babel.dates.format_date", "<builtin>.isinstance"], "odoo.fields.Datetime.from_string": [], "odoo.fields.Datetime.context_timestamp": [], "babel.dates.format_date": [], "tools.misc.parse_date": ["tools.misc.babel_locale_parse", "tools.misc.get_lang", "babel.dates.parse_date"], "babel.dates.parse_date": [], "tools.misc.format_datetime": ["odoo.fields.Datetime.from_string", "tools.misc.get_lang", "pytz.utc.localize", "tools.misc.posix_to_ldml", "tools.misc.babel_locale_parse", "<builtin>.isinstance", "babel.dates.format_datetime", "pytz.timezone"], "pytz.utc.localize": [], "pytz.timezone": [], "babel.dates.format_datetime": [], "tools.misc.format_time": ["babel.dates.format_time", "odoo.fields.Datetime.from_string", "tools.misc.get_lang", "pytz.utc.localize", "tools.misc.posix_to_ldml", "tools.misc.babel_locale_parse", "<builtin>.isinstance", "pytz.timezone"], "babel.dates.format_time": [], "tools.misc._format_time_ago": ["tools.misc.babel_locale_parse", "babel.dates.format_timedelta"], "babel.dates.format_timedelta": [], "tools.misc.format_decimalized_number": ["<builtin>.abs", "<builtin>.round"], "tools.misc.format_decimalized_amount": ["tools.misc.format_decimalized_number"], "tools.misc.format_amount": ["tools.misc.get_lang"], "tools.misc.format_duration": ["<builtin>.round", "<builtin>.abs", "<builtin>.divmod"], "<builtin>.divmod": [], "tools.misc._pickle_load": ["pickle.Unpickler.__init__", "pickle.Unpickler.load"], "pickle.Unpickler.__init__": [], "pickle.Unpickler.load": [], "types.ModuleType": [], "tools.misc.<lambda1>": ["tools.misc._pickle_load", "io.BytesIO"], "tools.misc.DotDict.__getattr__": ["<builtin>.type"], "tools.misc.get_diff": ["difflib.HtmlDiff", "tools.misc.get_diff.handle_style"], "tools.misc.get_diff.handle_style": [], "difflib.HtmlDiff": [], "tools.misc.hmac": ["<builtin>.repr", "hmac.new", "<builtin>.ValueError"], "<builtin>.repr": [], "tools.misc.street_split": [], "tools.misc.is_list_of": ["<builtin>.all", "<builtin>.isinstance"], "tools.misc.has_list_types": ["<builtin>.len", "<builtin>.zip", "<builtin>.isinstance", "<builtin>.all"], "tools.parse_version": ["re.compile", "tools.parse_version.chk"], "tools.parse_version._parse_version_parts": [], "tools.parse_version.chk": ["<builtin>.print", "<builtin>.zip", "tools.parse_version.parse_version"], "tools.convert": ["logging.getLogger"], "tools.convert.<lambda1>": ["tools.safe_eval.safe_eval"], "tools.safe_eval.safe_eval": ["<builtin>.dict", "tools.safe_eval.check_values", "odoo.loglevels.ustr", "<builtin>.ValueError", "tools.safe_eval.test_expr", "<builtin>.TypeError", "<builtin>.type"], "tools.convert.RecordDictWrapper.__init__": [], "tools.convert.RecordDictWrapper.__getitem__": [], "tools.convert._get_idref": ["<builtin>.dict"], "tools.convert._fix_multiple_roots": ["<builtin>.len", "lxml.etree.Element", "<builtin>.isinstance"], "tools.convert._eval_xml": ["logging.getLogger", "<builtin>.len", "tools.misc.file_open", "<builtin>.int", "lxml.etree.tostring", "<builtin>.float", "tools.convert.<lambda1>", "<builtin>.list", "<builtin>.IOError", "tools.convert._fix_multiple_roots", "base64.b64encode", "tools.convert._get_idref", "tools.convert._eval_xml", "tools.pycompat.to_text", "tools.convert._eval_xml._process", "<builtin>.isinstance", "odoo.api.call_kw", "<builtin>.tuple"], "tools.convert._eval_xml._process": ["<builtin>.set", "tools.convert.xml_import.id_get", "<builtin>.str", "re.finditer"], "tools.convert.xml_import.id_get": ["tools.convert.xml_import.model_id_get"], "odoo.api.call_kw": [], "tools.convert.str2bool": [], "tools.convert.nodeattr2bool": ["tools.convert.str2bool"], "tools.convert.xml_import.get_env": ["tools.convert.<lambda1>", "tools.convert.xml_import.id_get", "tools.convert.xml_import.env"], "tools.convert.xml_import.env": [], "tools.convert.xml_import.make_xml_id": [], "tools.convert.xml_import._test_xml_id": [], "tools.convert.xml_import._tag_delete": ["tools.convert.<lambda1>", "tools.convert.xml_import.id_get", "tools.convert._get_idref"], "tools.convert.xml_import._tag_report": ["odoo.Command.link", "odoo.Command.unlink", "tools.convert.<lambda1>", "tools.convert.xml_import._test_xml_id", "warnings.warn", "tools.convert.xml_import.make_xml_id", "<builtin>.dict", "tools.convert.xml_import.id_get"], "odoo.Command.unlink": [], "odoo.Command.link": [], "tools.convert.xml_import._tag_function": ["tools.convert.xml_import.get_env", "tools.convert._eval_xml"], "tools.convert.xml_import._tag_act_window": ["odoo.Command.link", "odoo.Command.unlink", "tools.convert.<lambda1>", "tools.convert.xml_import.get_env", "tools.convert.xml_import._test_xml_id", "warnings.warn", "tools.convert.xml_import.make_xml_id", "<builtin>.dict", "tools.convert.xml_import.id_get"], "tools.convert.xml_import._tag_menuitem": ["<builtin>.int", "odoo.Command.link", "odoo.Command.unlink", "tools.convert.xml_import._test_xml_id", "tools.convert.nodeattr2bool", "tools.convert.xml_import._tag_menuitem", "tools.convert.xml_import.make_xml_id", "tools.convert.xml_import.id_get"], "tools.convert.xml_import._tag_record": ["<builtin>.Exception", "tools.convert.<lambda1>", "tools.convert.xml_import._test_xml_id", "<builtin>.isinstance", "<builtin>.len", "<builtin>.float", "tools.convert.xml_import.model_id_get", "tools.convert._get_idref", "<builtin>.int", "tools.convert.xml_import.get_env", "tools.convert.xml_import.make_xml_id", "tools.convert._eval_xml", "<builtin>.dict", "tools.convert.xml_import.id_get", "tools.config.configmanager.get", "<builtin>.str", "odoo.Command.set", "tools.convert.nodeattr2bool", "tools.convert.xml_import._tag_record", "tools.convert.str2bool"], "odoo.Command.set": [], "tools.convert.xml_import.model_id_get": [], "tools.convert.xml_import._tag_template": ["lxml.builder.E.xpath", "lxml.builder.E.field", "lxml.etree.Element", "tools.convert.xml_import._tag_record", "tools.convert.xml_import.id_get", "lxml.builder.E.attribute"], "lxml.builder.E.field": [], "lxml.builder.E.attribute": [], "lxml.builder.E.xpath": [], "tools.convert.xml_import._tag_root": ["lxml.etree.tostring", "tools.convert.xml_import.get_env", "tools.convert.nodeattr2bool", "pprint.pformat", "<builtin>.getattr"], "tools.convert.xml_import.noupdate": [], "tools.convert.xml_import.__init__": ["odoo.api.Environment"], "tools.convert.xml_import.parse": ["tools.convert.xml_import._tag_root"], "tools.convert.convert_file": ["tools.misc.file_open", "tools.convert.convert_xml_import", "tools.convert.convert_sql_import", "tools.convert.convert_csv_import", "<builtin>.ValueError"], "tools.convert.convert_csv_import": ["tools.pycompat.csv_reader", "<builtin>.Exception", "<builtin>.any", "io.BytesIO", "odoo.api.Environment", "<builtin>.next"], "tools.convert.convert_sql_import": [], "tools.convert.convert_xml_import": ["subprocess.run", "lxml.etree.parse", "tools.convert.xml_import.parse", "lxml.etree.RelaxNG", "<builtin>.isinstance", "tools.convert.xml_import.__init__"], "lxml.etree.parse": [], "lxml.etree.RelaxNG": [], "subprocess.run": [], "tools.safe_eval": ["logging.getLogger", "tools.safe_eval.to_opcodes", "<builtin>.__import__", "tools.safe_eval.wrap_module.__init__", "<builtin>.set", "<builtin>.getattr"], "tools.safe_eval.to_opcodes": [], "tools.safe_eval.assert_no_dunder_name": ["<builtin>.NameError"], "<builtin>.NameError": [], "tools.safe_eval.assert_valid_codeobj": ["tools.safe_eval.assert_no_dunder_name", "tools.safe_eval.assert_valid_codeobj", "<builtin>.ValueError", "dis.get_instructions", "<builtin>.isinstance"], "dis.get_instructions": [], "tools.safe_eval.test_expr": ["odoo.loglevels.ustr", "<builtin>.ValueError", "<builtin>.compile", "tools.safe_eval.assert_valid_codeobj"], "<builtin>.compile": [], "tools.safe_eval.const_eval": ["tools.safe_eval.test_expr"], "tools.safe_eval.expr_eval": ["tools.safe_eval.test_expr"], "tools.safe_eval._import": ["<builtin>.__import__", "<builtin>.ImportError"], "<builtin>.__import__": [], "<builtin>.ImportError": [], "tools.safe_eval.check_values": ["<builtin>.isinstance", "<builtin>.TypeError"], "tools.safe_eval.test_python_expr": ["<builtin>.len", "<builtin>.type", "tools.safe_eval.test_expr", "odoo.loglevels.ustr"], "tools.safe_eval.wrap_module.__init__": ["<builtin>.setattr", "<builtin>.isinstance", "<builtin>.getattr", "tools.safe_eval.wrap_module.__init__"], "<builtin>.setattr": [], "tools.safe_eval.wrap_module.__repr__": [], "tools.translate": ["logging.getLogger", "tools.translate.CodeTranslations.__init__", "collections.namedtuple", "lxml.etree.HTMLParser", "csv.register_dialect", "re.compile"], "csv.register_dialect": [], "tools.translate.encode": ["<builtin>.isinstance"], "tools.translate.<lambda1>": [], "tools.translate.translate_attrib_value": [], "tools.translate.<lambda2>": [], "tools.translate.translate_xml_node": ["tools.translate.translate_xml_node.process"], "tools.translate.translate_xml_node.nonspace": ["<builtin>.bool"], "tools.translate.translate_xml_node.translatable": ["<builtin>.all", "tools.translate.translate_xml_node.translatable", "<builtin>.any"], "tools.translate.translate_xml_node.hastext": ["<builtin>.len", "tools.translate.translate_xml_node.hastext", "tools.translate.translate_xml_node.translatable", "<builtin>.any", "tools.translate.translate_xml_node.nonspace"], "tools.translate.translate_xml_node.process": ["<builtin>.len", "tools.translate.translate_xml_node.hastext", "tools.translate.translate_xml_node.translatable", "tools.translate.parse_html", "tools.translate.serialize_xml", "lxml.etree.Element", "tools.translate.translate_xml_node.nonspace", "tools.translate.translate_xml_node.process", "tools.translate.serialize_html", "<builtin>.isinstance"], "tools.translate.serialize_xml": ["lxml.etree.tostring"], "tools.translate.serialize_html": ["lxml.etree.tostring"], "tools.translate.parse_html": ["lxml.html.fragment_fromstring"], "tools.translate.parse_xml": ["lxml.etree.fromstring"], "lxml.html.fragment_fromstring": [], "tools.translate.xml_translate": ["tools.translate.translate_xml_node", "tools.translate.parse_html", "tools.translate.parse_xml", "tools.translate.serialize_xml"], "tools.translate.xml_term_converter": ["lxml.etree.fromstring", "lxml.etree.HTMLParser", "lxml.etree.tostring"], "tools.translate.html_translate": ["tools.translate.parse_html", "tools.translate.translate_xml_node", "tools.translate.serialize_html"], "tools.translate.html_term_converter": ["lxml.etree.fromstring", "lxml.etree.HTMLParser", "lxml.etree.tostring"], "tools.translate.get_text_content": ["lxml.html.fromstring"], "tools.translate.translate_sql_constraint": [], "tools.translate.GettextAlias._get_db": ["odoo.sql_db.db_connect", "<builtin>.getattr", "threading.current_thread"], "odoo.sql_db.db_connect": [], "tools.translate.GettextAlias._get_cr": ["tools.translate.GettextAlias._get_db", "<builtin>.hasattr"], "tools.translate.GettextAlias._get_uid": ["<builtin>.int"], "tools.translate.GettextAlias._get_lang": ["tools.translate.GettextAlias._get_uid", "<builtin>.hasattr", "tools.translate.GettextAlias._get_cr", "odoo.api.Environment"], "tools.translate.GettextAlias.__call__": ["tools.translate.GettextAlias._get_translation"], "tools.translate.GettextAlias._get_translation": ["inspect.currentframe", "odoo.modules.get_resource_from_path", "inspect.getfile", "tools.translate.GettextAlias._get_lang", "tools.translate.CodeTranslations.get_python_translations"], "inspect.currentframe": [], "inspect.getfile": [], "odoo.modules.get_resource_from_path": [], "tools.translate.CodeTranslations.get_python_translations": ["tools.translate.CodeTranslations._load_python_translations"], "tools.translate._lt.__init__": ["inspect.currentframe", "inspect.getfile", "odoo.modules.get_resource_from_path"], "tools.translate._lt.__str__": ["tools.translate.GettextAlias._get_translation"], "tools.translate._lt.__eq__": ["<builtin>.NotImplementedError"], "tools.translate._lt.__lt__": ["<builtin>.NotImplementedError"], "tools.translate._lt.__add__": ["<builtin>.isinstance", "tools.translate.GettextAlias._get_translation"], "tools.translate._lt.__radd__": ["<builtin>.isinstance", "tools.translate.GettextAlias._get_translation"], "tools.translate.quote": [], "tools.translate._sub_replacement": [], "tools.translate.unquote": [], "tools.translate.TranslationFileReader": ["tools.translate.PoFileReader.__init__", "tools.translate.CSVFileReader.__init__", "<builtin>.Exception"], "tools.translate.CSVFileReader.__init__": ["codecs.getreader", "csv.DictReader"], "tools.translate.PoFileReader.__init__": ["<builtin>.isinstance", "polib.pofile", "tools.translate.PoFileReader.__init__.get_pot_path"], "csv.DictReader": [], "tools.translate.CSVFileReader.__iter__": ["<builtin>.int"], "tools.translate.PoFileReader.__init__.get_pot_path": ["<builtin>.isinstance", "pathlib.Path", "<builtin>.str"], "polib.pofile": [], "tools.translate.PoFileReader.__iter__": ["<builtin>.int", "re.match"], "re.match": [], "tools.translate.TranslationFileWriter": ["tools.translate.PoFileWriter.__init__", "tools.translate.CSVFileWriter.__init__", "tools.translate.TarFileWriter.__init__", "<builtin>.Exception"], "tools.translate.CSVFileWriter.__init__": ["tools.pycompat.csv_writer"], "tools.translate.PoFileWriter.__init__": ["polib.POFile"], "tools.translate.TarFileWriter.__init__": ["tarfile.open"], "tools.translate.CSVFileWriter.write_rows": ["tools.translate.TranslationModuleReader.__iter__"], "tools.translate.TranslationModuleReader.__iter__": ["tools.translate.encode", "odoo.tools.ustr"], "polib.POFile": [], "tools.translate.PoFileWriter.write_rows": ["tools.translate.PoFileWriter.add_entry", "datetime.datetime.utcnow", "<builtin>.str", "<builtin>.sorted", "tools.translate.TranslationModuleReader.__iter__", "<builtin>.set"], "tools.translate.PoFileWriter.add_entry": ["<builtin>.len", "<builtin>.isinstance", "<builtin>.str", "polib.POEntry"], "datetime.datetime.utcnow": [], "polib.POEntry": [], "tarfile.open": [], "tools.translate.TarFileWriter.write_rows": ["<builtin>.len", "tools.translate.PoFileWriter.__init__", "io.BytesIO", "tarfile.TarInfo", "tools.translate.TranslationModuleReader.__iter__", "collections.defaultdict", "os.path.join", "tools.translate.PoFileWriter.write_rows"], "tarfile.TarInfo": [], "tools.translate.trans_export": ["tools.translate.TranslationModuleReader.__init__", "tools.translate.CSVFileWriter.write_rows", "tools.translate.TranslationFileWriter", "tools.translate.TarFileWriter.write_rows", "tools.translate.PoFileWriter.write_rows"], "tools.translate.TranslationModuleReader.__init__": ["tools.translate.TranslationModuleReader._export_translatable_resources", "tools.translate.TranslationModuleReader._export_translatable_records", "odoo.api.Environment"], "tools.translate._push": ["<builtin>.len", "<builtin>.any", "tools.translate.babel_extract_qweb.handle_text"], "tools.translate.babel_extract_qweb.handle_text": [], "tools.translate._extract_translatable_qweb_terms": ["tools.translate._extract_translatable_qweb_terms", "<builtin>.isinstance", "tools.translate._push"], "tools.translate.babel_extract_qweb": ["tools.translate._extract_translatable_qweb_terms", "lxml.etree.parse"], "tools.translate.extract_formula_terms": ["io.StringIO", "tokenize.generate_tokens", "<builtin>.next"], "io.StringIO": [], "tokenize.generate_tokens": [], "tools.translate.extract_spreadsheet_terms": ["tools.translate.extract_formula_terms", "<builtin>.any", "json.load", "itertools.chain", "re.fullmatch"], "json.load": [], "re.fullmatch": [], "itertools.chain": [], "collections.namedtuple": [], "tools.translate.TranslationModuleReader._export_translatable_records": ["<builtin>.str", "<builtin>.list", "collections.defaultdict", "tools.translate.TranslationModuleReader._push_translation", "tools.translate.TranslationModuleReader._get_translatable_records", "<builtin>.callable"], "tools.translate.TranslationModuleReader._export_translatable_resources": ["os.walk", "fnmatch.filter", "os.path.join", "tools.translate.TranslationModuleReader._babel_extract_terms", "fnmatch.fnmatch"], "odoo.tools.ustr": [], "tools.translate.TranslationModuleReader._push_translation": ["<builtin>.len", "<builtin>.tuple", "re.sub"], "tools.translate.TranslationModuleReader._get_translatable_records": ["<builtin>.len", "<builtin>.iter", "collections.defaultdict", "<builtin>.next", "<builtin>.set"], "<builtin>.callable": [], "tools.translate.TranslationModuleReader._get_module_from_path": ["<builtin>.len", "os.path.join", "os.path.dirname"], "tools.translate.TranslationModuleReader._verified_module_filepaths": ["<builtin>.len", "os.path.join", "tools.translate.TranslationModuleReader._get_module_from_path"], "tools.translate.TranslationModuleReader._babel_extract_terms": ["tools.translate.TranslationModuleReader._verified_module_filepaths", "tools.translate.CodeTranslations.get_web_translations", "tools.translate.encode", "tools.translate.CodeTranslations.get_python_translations", "tools.translate.TranslationModuleReader._push_translation", "babel.messages.extract.extract", "<builtin>.open"], "tools.translate.CodeTranslations.get_web_translations": ["tools.translate.CodeTranslations._load_web_translations"], "babel.messages.extract.extract": [], "fnmatch.filter": [], "fnmatch.fnmatch": [], "tools.translate.DeepDefaultDict": ["collections.defaultdict"], "tools.translate.TranslationImporter.__init__": ["fields.OrderedSet", "tools.cache.ormcache_counter.__init__", "odoo.tools.OrderedSet", "odoo.api.Environment"], "fields.OrderedSet": [], "odoo.tools.OrderedSet": [], "tools.translate.TranslationImporter.load_file": ["tools.misc.file_open", "os.path.splitext", "tools.translate.TranslationImporter.load"], "tools.translate.TranslationImporter.load": ["tools.translate.TranslationImporter._load", "tools.misc.get_iso_codes", "tools.translate.TranslationFileReader"], "tools.translate.TranslationImporter._load": ["tools.translate.CSVFileReader.__iter__", "<builtin>.isinstance", "tools.translate.PoFileReader.__iter__", "<builtin>.set"], "tools.translate.TranslationImporter.save": ["<builtin>.len", "psycopg2.extras.Json"], "tools.translate.TranslationImporter.save.<lambda1>": [], "psycopg2.extras.Json": [], "tools.translate.trans_load": ["warnings.warn", "tools.translate.TranslationImporter.save", "tools.translate.TranslationImporter.load_file", "tools.translate.TranslationImporter.__init__"], "tools.translate.trans_load_data": ["warnings.warn", "tools.translate.TranslationImporter.save", "tools.translate.TranslationImporter.load", "tools.translate.TranslationImporter.__init__"], "tools.translate.get_locales": ["locale.getpreferredencoding", "locale.getlocale", "tools.translate.get_locales.process"], "locale.getlocale": [], "tools.translate.get_locales.process": ["locale.normalize", "locale._build_localename"], "locale._build_localename": [], "locale.normalize": [], "tools.translate.resetlocale": ["tools.translate.get_locales", "locale.setlocale"], "locale.setlocale": [], "tools.translate.load_language": ["odoo.api.Environment"], "tools.translate.CodeTranslations.__init__": [], "tools.translate.CodeTranslations._get_po_paths": ["odoo.http.request.env.lang.split", "odoo.modules.module.get_resource_path"], "tools.translate.CodeTranslations._read_code_translations_file": ["tools.translate.PoFileReader.__iter__", "tools.translate.TranslationFileReader", "tools.translate.CodeTranslations._load_web_translations.filter_func", "tools.translate.CSVFileReader.__iter__", "tools.translate.CodeTranslations._load_python_translations.filter_func"], "tools.translate.CodeTranslations._load_web_translations.filter_func": [], "tools.translate.CodeTranslations._load_python_translations.filter_func": [], "tools.translate.CodeTranslations._get_code_translations": ["tools.misc.file_open", "tools.misc.get_iso_codes", "tools.translate.CodeTranslations._read_code_translations_file", "tools.translate.CodeTranslations._get_po_paths"], "tools.translate.CodeTranslations._load_python_translations": ["tools.translate.CodeTranslations._get_code_translations"], "tools.translate.CodeTranslations._load_web_translations": ["tools.translate.CodeTranslations._get_code_translations"], "tools.translate._get_translation_upgrade_queries": ["odoo.registry", "<builtin>.zip", "<builtin>.callable"], "tools.translate._get_translation_upgrade_queries.<lambda1>": [], "tools.config": ["passlib.context.CryptContext", "tools.config.configmanager.__init__"], "passlib.context.CryptContext": [], "tools.config.MyOption.__init__": ["<builtin>.super"], "tools.config._get_default_datadir": ["tools.config._get_default_datadir.<lambda1>", "os.path.expanduser", "os.path.isdir", "tools.appdirs.user_data_dir", "tools.appdirs.site_data_dir"], "tools.config._get_default_datadir.<lambda1>": [], "tools.config._deduplicate_loggers": ["<builtin>.dict"], "tools.config.configmanager.__init__": ["optparse.OptionParser", "tempfile.gettempdir", "os.path.join", "tools.config.configmanager._parse_config", "<builtin>.set", "<builtin>.dict", "tools.config._get_default_datadir", "<builtin>.getattr", "optparse.OptionGroup"], "optparse.OptionParser": [], "optparse.OptionGroup": [], "tempfile.gettempdir": [], "tools.config.configmanager._parse_config": ["os.path.exists", "tools.config.configmanager._parse_config.die", "<builtin>.bool", "os.path.expanduser", "tools.config.configmanager.save", "os.path.dirname", "os.path.abspath", "os.path.isfile", "os.path.join", "tools.config.configmanager._normalize", "tools.config.configmanager.load", "<builtin>.dict", "<builtin>.isinstance", "os.environ.get", "<builtin>.getattr", "os.access"], "tools.config.configmanager.parse_config": ["tools.config.configmanager._parse_config", "tools.config.configmanager._warn_deprecated_options", "odoo.netsvc.init_logger", "odoo.modules.module.initialize_sys_path"], "odoo.netsvc.init_logger": [], "tools.config.configmanager._warn_deprecated_options": ["warnings.warn"], "odoo.modules.module.initialize_sys_path": [], "tools.config.configmanager._parse_config.die": [], "tools.config.configmanager.load": ["configparser.RawConfigParser"], "tools.config.configmanager._normalize": ["os.path.realpath", "os.path.expanduser", "os.path.normcase", "os.path.abspath", "os.path.expandvars"], "tools.config.configmanager.save": ["<builtin>.open", "os.path.exists", "configparser.RawConfigParser", "sys.stderr.write", "<builtin>.sorted", "os.path.dirname", "os.makedirs", "<builtin>.zip", "tools.config._deduplicate_loggers", "os.chmod", "<builtin>.dict"], "tools.config.configmanager._is_addons_path": ["os.listdir", "<builtin>.any", "tools.config.configmanager._is_addons_path.hasfile", "os.path.isdir", "os.path.join"], "tools.config.configmanager._is_addons_path.hasfile": ["os.path.isfile", "os.path.join"], "tools.config.configmanager._check_addons_path": ["optparse.OptionValueError", "os.path.expanduser", "tools.config.configmanager._is_addons_path", "os.path.isdir", "os.path.abspath", "<builtin>.setattr"], "optparse.OptionValueError": [], "tools.config.configmanager._check_upgrade_path": ["optparse.OptionValueError", "os.path.isdir", "tools.config.configmanager._normalize", "tools.config.configmanager._is_upgrades_path", "<builtin>.setattr"], "tools.config.configmanager._is_upgrades_path": ["os.path.join", "<builtin>.any", "glob.glob"], "glob.glob": [], "tools.config.configmanager._test_enable_callback": [], "configparser.RawConfigParser": [], "os.makedirs": [], "os.chmod": [], "sys.stderr.write": [], "tools.config.configmanager.pop": [], "tools.config.configmanager.get_misc": [], "tools.config.configmanager.__setitem__": ["<builtin>.isinstance"], "tools.config.configmanager.__getitem__": [], "tools.config.configmanager.addons_data_dir": ["logging.getLogger", "os.path.join", "os.path.exists", "os.makedirs"], "tools.config.configmanager.session_dir": ["os.path.join", "os.access", "os.makedirs"], "tools.config.configmanager.set_admin_password": ["<builtin>.hasattr"], "tools.config.configmanager.verify_admin_password": [], "os.path.expandvars": [], "tools.query": ["re.compile"], "tools.query._from_table": [], "tools.query._generate_table_alias": ["<builtin>.len", "zlib.crc32"], "zlib.crc32": [], "tools.query.Query.__init__": [], "tools.query.Query.add_table": ["<builtin>.str"], "tools.query.Query.add_where": [], "tools.query.Query.join": ["tools.query.Query._join"], "tools.query.Query._join": ["<builtin>.str", "tools.query._generate_table_alias", "<builtin>.list", "tools.query.Query.add_where"], "tools.query.Query.left_join": ["tools.query.Query._join"], "tools.query.Query.select": ["tools.query.Query.get_sql"], "tools.query.Query.get_sql": ["tools.query._from_table"], "tools.query.Query.subselect": ["tools.query.Query.get_sql", "tools.query.Query.select"], "tools.query.Query": ["tools.func.lazy_property"], "tools.query.Query._result": ["tools.query.Query.select"], "tools.query.Query.__str__": ["tools.query.Query.select"], "tools.query.Query.__bool__": ["<builtin>.bool"], "tools.query.Query.__len__": ["<builtin>.len"], "tools.query.Query.__iter__": ["<builtin>.iter"], "tools.query.Query.tables": ["warnings.warn", "<builtin>.tuple", "tools.query._from_table"], "tools.query.Query.where_clause": ["<builtin>.tuple"], "tools.query.Query.where_clause_params": ["<builtin>.tuple"], "tools.query.Query.add_join": ["warnings.warn", "tools.query._from_table", "tools.query.Query._join"], "tools.float_utils": ["<builtin>.str", "time.time", "<builtin>.zip", "tools.float_utils.try_round", "<builtin>.range", "<builtin>.print"], "tools.float_utils.round": ["math.copysign", "builtins.round"], "builtins.round": [], "math.copysign": [], "tools.float_utils._float_check_precision": [], "tools.float_utils.float_round": ["math.copysign", "math.floor", "<builtin>.abs", "tools.float_utils._float_check_precision", "tools.float_utils.round", "math.log", "math.ceil"], "math.log": [], "math.ceil": [], "math.floor": [], "tools.float_utils.float_is_zero": ["tools.float_utils.float_round", "<builtin>.abs", "tools.float_utils._float_check_precision"], "tools.float_utils.float_compare": ["tools.float_utils.float_is_zero", "tools.float_utils.float_round", "tools.float_utils._float_check_precision"], "tools.float_utils.float_repr": [], "tools.float_utils.float_split_str": ["tools.float_utils.float_round", "tools.float_utils.float_repr", "<builtin>.tuple"], "tools.float_utils.float_split": ["<builtin>.int", "tools.float_utils.float_split_str"], "tools.float_utils.json_float_round": ["tools.float_utils.float_round", "tools.float_utils.float_repr", "<builtin>.float"], "tools.float_utils.try_round": ["tools.float_utils.float_round", "<builtin>.print", "tools.float_utils.float_repr"], "tools.date_utils": [], "tools.date_utils.get_month": ["<builtin>.type", "calendar.monthrange"], "calendar.monthrange": [], "tools.date_utils.get_quarter_number": ["math.ceil"], "tools.date_utils.get_quarter": ["tools.date_utils.get_quarter_number", "<builtin>.type", "calendar.monthrange", "dateutil.relativedelta.relativedelta"], "dateutil.relativedelta.relativedelta": [], "tools.date_utils.get_fiscal_year": ["<builtin>.min", "<builtin>.type", "calendar.monthrange", "dateutil.relativedelta.relativedelta"], "tools.date_utils.get_timedelta": ["dateutil.relativedelta.relativedelta"], "tools.date_utils.start_of": ["datetime.datetime.combine", "tools.date_utils.get_quarter", "calendar.weekday", "dateutil.relativedelta.relativedelta", "<builtin>.ValueError", "<builtin>.isinstance"], "calendar.weekday": [], "datetime.datetime.combine": [], "tools.date_utils.end_of": ["datetime.datetime.combine", "tools.date_utils.get_quarter", "dateutil.relativedelta.relativedelta", "calendar.weekday", "<builtin>.ValueError", "<builtin>.isinstance"], "tools.date_utils.add": ["dateutil.relativedelta.relativedelta"], "tools.date_utils.subtract": ["dateutil.relativedelta.relativedelta"], "tools.date_utils.json_default": ["odoo.fields.Datetime.to_string", "<builtin>.isinstance", "odoo.fields.Date.to_string", "odoo.loglevels.ustr"], "odoo.fields.Datetime.to_string": [], "odoo.fields.Date.to_string": [], "tools.date_utils.date_range": ["<builtin>.ValueError", "tools.date_utils.date_range.<lambda1>"], "tools.date_utils.date_range.<lambda1>": [], "tools.sql": ["logging.getLogger", "collections.defaultdict"], "tools.sql.existing_tables": [], "tools.sql.table_exists": ["<builtin>.len", "tools.sql.existing_tables"], "tools.sql.table_kind": [], "tools.sql.<lambda1>": [], "tools.sql.create_model_table": [], "tools.sql.table_columns": [], "tools.sql.column_exists": [], "tools.sql.create_column": [], "tools.sql.rename_column": [], "tools.sql.convert_column": ["tools.sql._convert_column"], "tools.sql._convert_column": ["tools.sql.drop_depending_views"], "tools.sql.convert_column_translatable": ["tools.sql.drop_index", "tools.sql._convert_column"], "tools.sql.drop_index": [], "tools.sql.drop_depending_views": ["tools.sql.get_depending_views"], "tools.sql.get_depending_views": [], "tools.sql.set_not_null": ["<builtin>.Exception"], "tools.sql.drop_not_null": [], "tools.sql.constraint_definition": [], "tools.sql.add_constraint": ["<builtin>.Exception"], "tools.sql.drop_constraint": [], "tools.sql.add_foreign_key": [], "tools.sql.get_foreign_keys": [], "tools.sql.fix_foreign_key": ["tools.sql.add_foreign_key", "tools.sql.drop_constraint"], "tools.sql.index_exists": [], "tools.sql.check_index_exist": ["tools.sql.index_exists"], "tools.sql.create_index": ["tools.sql.index_exists"], "tools.sql.create_unique_index": ["tools.sql.index_exists"], "tools.sql.drop_view_if_exists": [], "tools.sql.escape_psql": [], "tools.sql.pg_varchar": ["<builtin>.type", "<builtin>.isinstance", "<builtin>.ValueError"], "tools.sql.reverse_order": [], "tools.sql.increment_fields_skiplock": ["<builtin>.map", "psycopg2.sql.SQL", "psycopg2.sql.Identifier", "<builtin>.bool"], "psycopg2.sql.Identifier": [], "psycopg2.sql.SQL": [], "tools.sql.value_to_translated_trigram_pattern": ["<builtin>.len", "json.dumps", "re.sub"], "tools.sql.pattern_to_translated_trigram_pattern": ["json.dumps", "<builtin>.len", "re.findall", "re.sub"], "re.findall": [], "tools.barcode": [], "tools.barcode.get_barcode_check_digit": ["<builtin>.int", "<builtin>.enumerate"], "tools.barcode.check_barcode_encoding": ["<builtin>.len", "tools.barcode.get_barcode_check_digit", "<builtin>.int", "re.match"], "tools.xml_utils": ["logging.getLogger"], "tools.xml_utils.odoo_resolver.__init__": ["<builtin>.super"], "tools.xml_utils.odoo_resolver.resolve": ["lxml.etree.Resolver.resolve_string"], "lxml.etree.Resolver.resolve_string": [], "tools.xml_utils._check_with_xsd": ["io.BytesIO", "<builtin>.FileNotFoundError", "lxml.etree.XMLParser", "<builtin>.str", "lxml.etree.parse", "lxml.etree.fromstring", "tools.xml_utils.odoo_resolver.__init__", "odoo.exceptions.UserError", "lxml.etree.XMLSchema", "<builtin>.isinstance"], "lxml.etree.XMLSchema": [], "tools.xml_utils.create_xml_node_chain": ["lxml.etree.SubElement"], "lxml.etree.SubElement": [], "tools.xml_utils.create_xml_node": ["tools.xml_utils.create_xml_node_chain"], "tools.xml_utils.cleanup_xml_node": ["lxml.etree.fromstring", "<builtin>.isinstance", "tools.xml_utils.cleanup_xml_node.leaf_iter"], "tools.xml_utils.cleanup_xml_node.leaf_iter": ["<builtin>.len", "tools.xml_utils.cleanup_xml_node.leaf_iter"], "tools.xml_utils.load_xsd_files_from_url": ["requests.get", "<builtin>.isinstance", "zipfile.ZipFile", "io.BytesIO"], "requests.get": [], "tools.xml_utils.validate_xml_from_attachment": ["tools.xml_utils._check_with_xsd"], "tools.js_transpiler": ["logging.getLogger", "re.compile"], "tools.js_transpiler.transpile_javascript": ["tools.js_transpiler.get_aliased_odoo_define_content", "tools.js_transpiler.url_to_module_path", "functools.partial"], "tools.js_transpiler.url_to_module_path": ["<builtin>.ValueError"], "tools.js_transpiler.get_aliased_odoo_define_content": [], "tools.js_transpiler.wrap_with_odoo_define": [], "tools.js_transpiler.convert_export_function": [], "tools.js_transpiler.convert_export_class": [], "tools.js_transpiler.convert_export_function_default": [], "tools.js_transpiler.convert_export_class_default": [], "tools.js_transpiler.convert_variable_export": [], "tools.js_transpiler.convert_variable_export_default": [], "tools.js_transpiler.convert_object_export": [], "tools.js_transpiler.convert_object_export.repl": ["tools.js_transpiler.convert_as"], "tools.js_transpiler.convert_as": ["<builtin>.len", "<builtin>.tuple", "<builtin>.reversed"], "tools.js_transpiler.convert_from_export": [], "tools.js_transpiler.convert_from_export.repl": ["tools.js_transpiler.convert_as", "tools.js_transpiler.remove_as"], "tools.js_transpiler.remove_as": ["<builtin>.len"], "tools.js_transpiler.convert_star_from_export": [], "tools.js_transpiler.convert_default_export": ["tools.js_transpiler.convert_variable_export_default", "tools.js_transpiler.convert_export_class_default", "tools.js_transpiler.convert_export_function_default"], "tools.js_transpiler.convert_basic_import": [], "tools.js_transpiler.convert_basic_import.repl": [], "tools.js_transpiler.convert_legacy_default_import": [], "tools.js_transpiler.convert_default_import": [], "tools.js_transpiler.convert_default_and_named_import": [], "tools.js_transpiler.convert_default_and_named_import.repl": [], "tools.js_transpiler.convert_relative_require": ["tools.js_transpiler.relative_path_to_module_path", "re.sub"], "tools.js_transpiler.relative_path_to_module_path": ["<builtin>.len", "tools.js_transpiler.url_to_module_path"], "tools.js_transpiler.convert_star_import": [], "tools.js_transpiler.convert_default_and_star_import": [], "tools.js_transpiler.convert_unnamed_relative_import": [], "tools.js_transpiler.remove_index": [], "tools.js_transpiler.remove_index.repl": [], "tools.js_transpiler.is_odoo_module": ["<builtin>.bool"], "tools.sourcemap_generator": ["functools.lru_cache"], "tools.sourcemap_generator.SourceMapGenerator.__init__": [], "tools.sourcemap_generator.SourceMapGenerator._serialize_mappings": ["tools.sourcemap_generator.base64vlq_encode"], "tools.sourcemap_generator.base64vlq_encode": ["<builtin>.int", "<builtin>.map", "<builtin>.abs", "<builtin>.bytes"], "tools.sourcemap_generator.SourceMapGenerator.to_json": ["tools.sourcemap_generator.SourceMapGenerator._serialize_mappings", "<builtin>.list"], "tools.sourcemap_generator.SourceMapGenerator.get_content": ["json.dumps", "tools.sourcemap_generator.SourceMapGenerator.to_json"], "tools.sourcemap_generator.SourceMapGenerator.add_source": ["<builtin>.len", "<builtin>.range"], "functools.lru_cache": [], "<builtin>.bytes": [], "tools.template_inheritance": ["logging.getLogger", "re.compile"], "tools.template_inheritance.add_stripped_items_before": ["<builtin>.len", "tools.template_inheritance.apply_inheritance_specs.extract"], "tools.template_inheritance.apply_inheritance_specs.extract": ["<builtin>.len", "lxml.etree.tostring", "tools.template_inheritance.remove_element", "<builtin>.ValueError", "tools.template_inheritance.<lambda1>", "tools.template_inheritance.locate_node", "odoo.tools.translate._"], "tools.template_inheritance.add_text_before": [], "tools.template_inheritance.remove_element": ["tools.template_inheritance.add_text_before"], "tools.template_inheritance.locate_node": ["lxml.etree.ETXPath", "<builtin>.isinstance", "<builtin>.all"], "lxml.etree.ETXPath": [], "tools.template_inheritance.apply_inheritance_specs": ["<builtin>.len", "odoo.tools.translate._", "tools.template_inheritance.apply_inheritance_specs.extract", "odoo.tools.html_escape", "tools.template_inheritance.add_stripped_items_before", "tools.template_inheritance.remove_element", "<builtin>.ValueError", "lxml.etree.ProcessingInstruction", "tools.template_inheritance.<lambda1>", "lxml.builder.E.sentinel", "<builtin>.isinstance", "itertools.chain", "copy.deepcopy", "tools.template_inheritance.locate_node"], "tools.template_inheritance.<lambda1>": [], "copy.deepcopy": [], "lxml.etree.ProcessingInstruction": [], "lxml.builder.E.sentinel": [], "odoo.tools.html_escape": [], "tools.func": ["tools.func.synchronized"], "tools.func.lazy_property.__init__": [], "tools.func.lazy_property.__get__": ["<builtin>.setattr"], "tools.func.lazy_property.__doc__": [], "tools.func.lazy_property.reset_all": ["<builtin>.vars", "<builtin>.list", "<builtin>.type", "<builtin>.isinstance", "<builtin>.getattr"], "<builtin>.vars": [], "tools.func.lazy_classproperty.__get__": ["<builtin>.setattr", "tools.func.lazy_property.fget"], "tools.func.lazy_property.fget": [], "tools.func.conditional": [], "tools.func.conditional.<lambda1>": [], "tools.func.synchronized": ["decorator.decorator"], "tools.func.frame_codeinfo": ["<builtin>.range", "inspect.getsourcefile"], "inspect.getsourcefile": [], "tools.func.compose": ["warnings.warn", "functools.wraps"], "tools.func.compose.wrapper": [], "tools.func._ClassProperty.__get__": [], "tools.func.classproperty": ["<builtin>.classmethod"], "<builtin>.classmethod": [], "tools.func.lazy.__init__": [], "tools.func.lazy._value": [], "tools.func.lazy.__getattr__": ["<builtin>.getattr"], "tools.func.lazy.__setattr__": ["<builtin>.setattr"], "tools.func.lazy.__delattr__": ["<builtin>.delattr"], "tools.func.lazy.__repr__": ["<builtin>.repr"], "tools.func.lazy.__str__": ["<builtin>.str"], "tools.func.lazy.__bytes__": ["<builtin>.bytes"], "tools.func.lazy.__format__": ["<builtin>.format"], "<builtin>.format": [], "tools.func.lazy.__lt__": [], "tools.func.lazy.__le__": [], "tools.func.lazy.__eq__": [], "tools.func.lazy.__ne__": [], "tools.func.lazy.__gt__": [], "tools.func.lazy.__ge__": [], "tools.func.lazy.__hash__": ["<builtin>.hash"], "tools.func.lazy.__bool__": ["<builtin>.bool"], "tools.func.lazy.__call__": ["tools.func.lazy._value"], "tools.func.lazy.__len__": ["<builtin>.len"], "tools.func.lazy.__getitem__": [], "tools.func.lazy.__missing__": [], "tools.func.lazy.__setitem__": [], "tools.func.lazy.__delitem__": [], "tools.func.lazy.__iter__": ["<builtin>.iter"], "tools.func.lazy.__reversed__": ["<builtin>.reversed"], "tools.func.lazy.__contains__": [], "tools.func.lazy.__add__": [], "tools.func.lazy.__sub__": [], "tools.func.lazy.__mul__": [], "tools.func.lazy.__matmul__": [], "tools.func.lazy.__truediv__": [], "tools.func.lazy.__floordiv__": [], "tools.func.lazy.__mod__": [], "tools.func.lazy.__divmod__": [], "tools.func.lazy.__pow__": [], "tools.func.lazy.__lshift__": [], "tools.func.lazy.__rshift__": [], "tools.func.lazy.__and__": [], "tools.func.lazy.__xor__": [], "tools.func.lazy.__or__": [], "tools.func.lazy.__radd__": [], "tools.func.lazy.__rsub__": [], "tools.func.lazy.__rmul__": [], "tools.func.lazy.__rmatmul__": [], "tools.func.lazy.__rtruediv__": [], "tools.func.lazy.__rfloordiv__": [], "tools.func.lazy.__rmod__": [], "tools.func.lazy.__rdivmod__": [], "tools.func.lazy.__rpow__": [], "tools.func.lazy.__rlshift__": [], "tools.func.lazy.__rrshift__": [], "tools.func.lazy.__rand__": [], "tools.func.lazy.__rxor__": [], "tools.func.lazy.__ror__": [], "tools.func.lazy.__iadd__": [], "tools.func.lazy.__isub__": [], "tools.func.lazy.__imul__": [], "tools.func.lazy.__imatmul__": [], "tools.func.lazy.__itruediv__": [], "tools.func.lazy.__ifloordiv__": [], "tools.func.lazy.__imod__": [], "tools.func.lazy.__ipow__": [], "tools.func.lazy.__ilshift__": [], "tools.func.lazy.__irshift__": [], "tools.func.lazy.__iand__": [], "tools.func.lazy.__ixor__": [], "tools.func.lazy.__ior__": [], "tools.func.lazy.__neg__": [], "tools.func.lazy.__pos__": [], "tools.func.lazy.__abs__": [], "tools.func.lazy.__invert__": [], "tools.func.lazy.__complex__": ["<builtin>.complex"], "<builtin>.complex": [], "tools.func.lazy.__int__": ["<builtin>.int"], "tools.func.lazy.__float__": ["<builtin>.float"], "tools.func.lazy.__index__": [], "tools.func.lazy.__round__": [], "tools.func.lazy.__trunc__": [], "tools.func.lazy.__floor__": [], "tools.func.lazy.__ceil__": [], "tools.func.lazy.__enter__": [], "tools.func.lazy.__exit__": [], "tools.func.lazy.__await__": [], "tools.func.lazy.__aiter__": [], "tools.func.lazy.__anext__": [], "tools.func.lazy.__aenter__": [], "tools.func.lazy.__aexit__": [], "tools.profiler": ["logging.getLogger"], "tools.profiler._format_frame": [], "tools.profiler._format_stack": ["<builtin>.list"], "tools.profiler.get_current_frame": ["sys._getframe", "sys._current_frames"], "sys._getframe": [], "tools.profiler._get_stack_trace": ["<builtin>.reversed", "<builtin>.list", "tools.profiler._format_frame"], "tools.profiler.stack_size": ["tools.profiler.get_current_frame"], "tools.profiler.make_session": ["datetime.datetime.now"], "tools.profiler.force_hook": ["<builtin>.getattr", "threading.current_thread"], "tools.profiler.Collector.__init_subclass__": [], "tools.profiler.Collector.make": [], "tools.profiler.Collector.__init__": [], "tools.profiler.Collector.start": [], "tools.profiler.Collector.stop": [], "tools.profiler.Collector.add": [], "tools.profiler.Collector._get_stack_trace": ["tools.profiler.get_current_frame", "tools.profiler.Collector._get_stack_trace"], "tools.profiler.Collector.post_process": [], "tools.profiler.Collector.entries": ["tools.profiler.Collector.post_process"], "tools.profiler.SQLCollector.start": ["<builtin>.hasattr"], "tools.profiler.SQLCollector.stop": [], "tools.profiler.SQLCollector.hook": ["<builtin>.str", "tools.profiler.Collector.add"], "tools.profiler.PeriodicCollector.__init__": ["<builtin>.super", "threading.Thread"], "threading.Thread": [], "tools.profiler.PeriodicCollector.run": ["time.sleep", "tools.profiler.PeriodicCollector.add"], "tools.profiler.PeriodicCollector.add": ["<builtin>.super", "tools.profiler.get_current_frame"], "time.sleep": [], "tools.profiler.PeriodicCollector.start": ["<builtin>.min", "<builtin>.hasattr", "<builtin>.max", "<builtin>.float"], "tools.profiler.PeriodicCollector.stop": [], "tools.profiler.SyncCollector.start": ["sys.settrace"], "sys.settrace": [], "tools.profiler.SyncCollector.stop": ["sys.settrace"], "tools.profiler.SyncCollector.hook": ["tools.profiler.Collector.add", "tools.profiler._format_frame"], "tools.profiler.SyncCollector._get_stack_trace": [], "tools.profiler.SyncCollector.post_process": ["<builtin>.super"], "tools.profiler.QwebTracker.wrap_render": ["functools.wraps"], "tools.profiler.QwebTracker.wrap_render._tracked_method_render": ["<builtin>.getattr", "threading.current_thread"], "tools.profiler.QwebTracker.wrap_compile": ["functools.wraps"], "tools.profiler.QwebTracker.wrap_compile._tracked_compile": [], "tools.profiler.QwebTracker.wrap_compile._tracked_compile.profiled_method_compile": ["tools.profiler.QwebTracker.__init__", "tools.profiler.ExecutionContext.__init__"], "tools.profiler.QwebTracker.__init__": ["<builtin>.getattr", "threading.current_thread"], "tools.profiler.ExecutionContext.__init__": [], "tools.profiler.QwebTracker.wrap_compile_directive": ["functools.wraps"], "tools.profiler.QwebTracker.wrap_compile_directive._tracked_compile_directive": [], "tools.profiler.QwebTracker.enter_directive": ["<builtin>.repr", "odoo.tools.profiler.ExecutionContext"], "odoo.tools.profiler.ExecutionContext": [], "tools.profiler.QwebTracker.leave_directive": [], "tools.profiler.QwebCollector.__init__": ["<builtin>.super"], "tools.profiler.QwebCollector.__init__.hook": [], "tools.profiler.QwebCollector._get_directive_profiling_name": ["<builtin>.repr"], "tools.profiler.QwebCollector.start": ["<builtin>.hasattr"], "tools.profiler.QwebCollector.stop": [], "tools.profiler.QwebCollector.post_process": ["<builtin>.super", "tools.profiler.Collector.add", "tools.profiler.QwebCollector._get_directive_profiling_name"], "tools.profiler.ExecutionContext.__enter__": ["tools.profiler.stack_size", "<builtin>.getattr", "threading.current_thread"], "tools.profiler.ExecutionContext.__exit__": ["threading.current_thread"], "tools.profiler.Profiler.__enter__": ["gc.disable", "threading.current_thread", "gc.isenabled", "tools.profiler.get_current_frame", "tools.profiler._get_stack_trace"], "gc.isenabled": [], "gc.disable": [], "tools.profiler.Profiler.__exit__": ["<builtin>.len", "<builtin>.map", "psycopg2.sql.Identifier", "tools.profiler._format_stack", "odoo.sql_db.db_connect", "gc.enable", "<builtin>.sum", "psycopg2.sql.SQL", "datetime.datetime.now", "tools.profiler.Profiler._add_file_lines", "tools.profiler.Profiler.entry_count"], "tools.profiler.Profiler._add_file_lines": ["odoo.tools.file_open", "<builtin>.enumerate"], "tools.profiler.Profiler.entry_count": ["<builtin>.len", "<builtin>.sum"], "gc.enable": [], "odoo.tools.file_open": [], "tools.profiler.Profiler.format_path": ["datetime.datetime.now", "tools.profiler.Profiler.entry_count", "re.sub"], "tools.profiler.Profiler.json": [], "tools.profiler.Nested.__init__": [], "tools.profiler.Nested.__enter__": [], "tools.profiler.Nested.__exit__": [], "tools.view_validation": ["logging.getLogger", "collections.defaultdict", "tools.view_validation.validate.decorator", "tools.view_validation.validate", "re.compile"], "tools.view_validation._get_attrs_symbols": [], "tools.view_validation.get_variable_names": ["tools.view_validation.get_variable_names.process", "<builtin>.set", "<builtin>.isinstance", "ast.parse", "tools.view_validation._get_attrs_symbols"], "tools.view_validation.get_variable_names.get_name_seq": ["tools.view_validation.get_variable_names.get_name_seq", "<builtin>.isinstance"], "tools.view_validation.get_variable_names.process": ["ast.iter_child_nodes", "tools.view_validation.get_variable_names.get_name_seq", "tools.view_validation.get_variable_names.process"], "ast.iter_child_nodes": [], "tools.view_validation.get_dict_asts": ["<builtin>.all", "<builtin>.zip", "<builtin>.ValueError", "<builtin>.isinstance", "ast.parse"], "tools.view_validation._check": ["<builtin>.ValueError"], "tools.view_validation.get_domain_identifiers": ["<builtin>.len", "tools.view_validation._check", "tools.view_validation.get_variable_names", "<builtin>.set", "<builtin>.type", "<builtin>.isinstance", "ast.parse"], "tools.view_validation.valid_view": [], "tools.view_validation.validate": [], "tools.view_validation.validate.decorator": [], "tools.view_validation.relaxng": ["odoo.tools.file_open", "os.path.join", "lxml.etree.RelaxNG", "lxml.etree.parse"], "tools.view_validation.schema_valid": ["tools.view_validation.relaxng", "odoo.tools.ustr"], "tools.test_reports": ["logging.getLogger"], "tools.test_reports.try_report": ["subprocess.Popen", "os.close", "collections.abc.Mapping.__init__", "os.write", "ustr", "tempfile.mkstemp", "<builtin>.ValueError", "os.unlink"], "collections.abc.Mapping.__init__": [], "tempfile.mkstemp": [], "os.write": [], "os.close": [], "ustr": [], "tools.test_reports.try_report_action": ["<builtin>.Exception", "tools.test_reports.try_report_action.log_test", "api.Environment.ref", "collections.abc.Mapping.__init__", "<builtin>.ValueError", "<builtin>.dict", "<builtin>.isinstance", "tools.test_reports.try_report_action._exec_action"], "tools.test_reports.try_report_action.log_test": [], "api.Environment.ref": ["<builtin>.ValueError"], "tools.test_reports.try_report_action._exec_action": ["<builtin>.len", "<builtin>.AssertionError", "<builtin>.Exception", "tools.test_reports.try_report_action.log_test", "collections.abc.Mapping.__init__", "xml.dom.minidom.parseString", "lxml.etree.fromstring", "tools.safe_eval.safe_eval", "tools.test_reports.try_report", "<builtin>.dict", "<builtin>.isinstance", "<builtin>.getattr"], "xml.dom.minidom.parseString": [], "<builtin>.AssertionError": [], "tools.test_reports.try_report_action._exec_action.<lambda1>": [], "tools.populate": [], "tools.populate.Random": ["random.Random"], "random.Random": [], "tools.populate.format_str": ["<builtin>.isinstance"], "tools.populate.chain_factories": ["tools.populate.root_factory"], "tools.populate.root_factory": [], "tools.populate.randomize": [], "tools.populate.randomize.generate": ["tools.populate.format_str", "tools.populate.Random", "<builtin>.enumerate"], "tools.populate.cartesian": [], "tools.populate.cartesian.generate": ["tools.populate.format_str", "tools.populate.randomize"], "tools.populate.iterate": [], "tools.populate.iterate.generate": ["tools.populate.format_str", "tools.populate.randomize", "<builtin>.next"], "tools.populate.constant": [], "tools.populate.constant.generate": ["tools.populate.format_str", "<builtin>.enumerate"], "tools.populate.compute": [], "tools.populate.compute.generate": ["tools.populate.randint.get_rand_int", "tools.populate.randfloat.get_rand_float", "tools.populate.randdatetime.get_rand_datetime", "<builtin>.enumerate", "tools.populate.Random"], "tools.populate.randint.get_rand_int": [], "tools.populate.randfloat.get_rand_float": [], "tools.populate.randdatetime.get_rand_datetime": ["dateutil.relativedelta.relativedelta", "<builtin>.int"], "tools.populate.randint": ["tools.populate.compute"], "tools.populate.randfloat": ["tools.populate.compute"], "tools.populate.randdatetime": ["tools.populate.compute", "datetime.datetime"], "tools.json": [], "tools.json._ScriptSafe.__html__": ["markupsafe.Markup", "re.sub"], "tools.json._ScriptSafe.__html__.<lambda1>": [], "tools.json.JSON.loads": ["json.loads"], "tools.json.JSON.dumps": ["json.dumps"], "tools.speedscope": ["reprlib.Repr"], "reprlib.Repr": [], "tools.speedscope.Speedscope.__init__": ["<builtin>.len", "tools.speedscope.Speedscope.convert_stack"], "tools.speedscope.Speedscope.convert_stack": ["<builtin>.len", "<builtin>.enumerate"], "tools.speedscope.Speedscope.add": ["tools.speedscope.Speedscope.convert_stack"], "tools.speedscope.Speedscope.add_output": ["tools.speedscope.Speedscope.stack_to_ids", "<builtin>.reversed", "tools.speedscope.Speedscope.process"], "tools.speedscope.Speedscope.add_output.<lambda1>": [], "tools.speedscope.Speedscope.process": ["tools.speedscope.Speedscope.stack_to_ids", "<builtin>.reversed", "<builtin>.zip", "<builtin>.enumerate", "<builtin>.min"], "tools.speedscope.Speedscope.stack_to_ids": ["<builtin>.iter", "<builtin>.next", "<builtin>.enumerate", "tools.speedscope.Speedscope.get_frame_id"], "tools.speedscope.Speedscope.add_default": ["<builtin>.len", "tools.speedscope.Speedscope.add_output"], "tools.speedscope.Speedscope.make": ["tools.speedscope.Speedscope.add_default"], "tools.speedscope.Speedscope.get_frame_id": [], "tools.geoipresolver": [], "tools.geoipresolver.GeoIPResolver.__init__": ["<builtin>.ValueError", "geoip2.database.Reader", "GeoIP.open"], "geoip2.database.Reader": [], "GeoIP.open": [], "tools.geoipresolver.GeoIPResolver.__del__": [], "tools.geoipresolver.GeoIPResolver": [], "tools.geoipresolver.GeoIPResolver.resolve": ["<builtin>.getattr"], "tools.geoipresolver.GeoIPResolver.record_by_addr": [], "tools._vendor.useragents": [], "tools._vendor.useragents.UserAgentParser": ["re.compile"], "tools._vendor.useragents.UserAgentParser.__init__": ["re.compile"], "tools._vendor.useragents.UserAgentParser.__call__": [], "tools._vendor.useragents.UserAgent": ["tools._vendor.useragents.UserAgentParser.__init__"], "tools._vendor.useragents.UserAgent.__init__": ["<builtin>.isinstance"], "tools._vendor.useragents.UserAgent.to_header": [], "tools._vendor.useragents.UserAgent.__str__": [], "tools._vendor.useragents.UserAgent.__nonzero__": ["<builtin>.bool"], "tools._vendor.useragents.UserAgent.__repr__": [], "tools._vendor.send_file": ["logging.getLogger"], "werkzeug.datastructures.Headers": [], "mimetypes.guess_type": [], "werkzeug.wsgi.wrap_file": [], "werkzeug.wrappers.Response": [], "tools._vendor.sessions": ["logging.getLogger", "re.compile"], "tools._vendor.sessions.generate_key": ["<builtin>.repr", "hashlib.sha1"], "hashlib.sha1": [], "tools._vendor.sessions.ModificationTrackingDict.__init__": ["werkzeug.datastructures.CallbackDict.__init__"], "tools._vendor.sessions.ModificationTrackingDict.__init__.on_update": [], "werkzeug.datastructures.CallbackDict.__init__": [], "tools._vendor.sessions.ModificationTrackingDict.copy": ["<builtin>.object", "<builtin>.getattr", "<builtin>.setattr"], "tools._vendor.sessions.ModificationTrackingDict.__copy__": ["tools._vendor.sessions.ModificationTrackingDict.copy"], "tools._vendor.sessions.Session.__init__": ["tools._vendor.sessions.ModificationTrackingDict.__init__"], "tools._vendor.sessions.Session.__repr__": [], "tools._vendor.sessions.Session.should_save": [], "tools._vendor.sessions.SessionStore.__init__": [], "tools._vendor.sessions.SessionStore.is_valid_key": [], "tools._vendor.sessions.SessionStore.new": ["tools._vendor.sessions.Session.__init__", "tools._vendor.sessions.FilesystemSessionStore.__init__", "tools._vendor.sessions.SessionStore.generate_key"], "tools._vendor.sessions.SessionStore.save": [], "tools._vendor.sessions.SessionStore.save_if_modified": ["tools._vendor.sessions.SessionStore.save", "tools._vendor.sessions.FilesystemSessionStore.save", "http.FilesystemSessionStore.save"], "tools._vendor.sessions.FilesystemSessionStore.save": ["os.replace", "tempfile.mkstemp", "os.chmod", "os.fdopen", "<builtin>.dict", "tools._vendor.sessions.FilesystemSessionStore.get_session_filename", "pickle.dump", "http.FilesystemSessionStore.get_session_filename"], "tools._vendor.sessions.SessionStore.delete": [], "tools._vendor.sessions.SessionStore.get": ["tools._vendor.sessions.Session.__init__", "tools._vendor.sessions.FilesystemSessionStore.__init__"], "tools._vendor.sessions.FilesystemSessionStore.get_session_filename": [], "os.fdopen": [], "pickle.dump": [], "os.replace": [], "tools._vendor.sessions.FilesystemSessionStore.get": ["pickle.load", "tools._vendor.sessions.SessionStore.is_valid_key", "tools._vendor.sessions.FilesystemSessionStore.__init__", "tools._vendor.sessions.Session.__init__", "tools._vendor.sessions.SessionStore.new", "<builtin>.open", "tools._vendor.sessions.FilesystemSessionStore.get_session_filename", "http.FilesystemSessionStore.get_session_filename"], "pickle.load": [], "tools._vendor.sessions.FilesystemSessionStore.list": ["re.escape", "re.compile", "os.listdir"], "tools._vendor": [], "tools.mimetypes": ["logging.getLogger", "collections.namedtuple", "magic.open", "re.compile", "<builtin>.hasattr", "functools.partial"], "tools.mimetypes._check_ooxml": ["<builtin>.any", "zipfile.ZipFile", "io.BytesIO"], "tools.mimetypes._check_open_container_format": ["<builtin>.len", "zipfile.ZipFile", "io.BytesIO"], "tools.mimetypes._check_olecf": [], "tools.mimetypes._check_svg": [], "tools.mimetypes._odoo_guess_mimetype": [], "magic.open": [], "tools.mimetypes.guess_mimetype": [], "tools.mimetypes.neuter_mimetype": [], "tools.mimetypes.get_extension": ["<builtin>.len", "mimetypes.guess_type"], "tools.rendering_tools": ["re.compile"], "tools.rendering_tools.relativedelta_proxy": ["dateutil.relativedelta.relativedelta"], "tools.rendering_tools.parse_inline_template": [], "tools.rendering_tools.convert_inline_template_to_qweb": ["markupsafe.Markup", "tools.rendering_tools.parse_inline_template"], "tools.rendering_tools.render_inline_template": ["<builtin>.str", "odoo.tools.safe_eval.safe_eval"], "odoo.tools.safe_eval.safe_eval": [], "fields": ["<builtin>.len", "logging.getLogger", "<builtin>.iter", "itertools.count", "<builtin>.object", "datetime.datetime.now", "<builtin>.type", "datetime.date.today"], "fields.first": ["<builtin>.len", "<builtin>.iter", "<builtin>.next"], "fields.resolve_mro": [], "fields.MetaField.__init__": ["<builtin>.super", "<builtin>.dir", "<builtin>.hasattr"], "<builtin>.dir": [], "itertools.count": [], "fields.Field.__init__": ["<builtin>.next"], "fields.Field.new": [], "fields.Field.__str__": [], "fields.Field.__repr__": [], "fields.Field.__set_name__": ["<builtin>.issubclass", "fields.Many2one._setup_attrs", "models.is_definition_class", "fields.Char._setup_attrs", "fields.Field._setup_attrs"], "models.is_definition_class": ["<builtin>.isinstance", "<builtin>.getattr"], "fields.Char._setup_attrs": ["<builtin>.super", "<builtin>.isinstance"], "fields.Field._setup_attrs": ["<builtin>.callable", "<builtin>.hasattr", "fields.Field._get_attrs"], "fields.Many2one._setup_attrs": ["<builtin>.super"], "fields.Field._get_attrs": ["warnings.warn", "<builtin>.isinstance", "<builtin>.tuple", "<builtin>.set"], "fields.Field._setup_attrs.<lambda1>": [], "fields.Field.prepare_setup": [], "fields.Field.setup": ["fields.Many2one.setup_nonrelated", "fields.Field.setup_related", "fields.Field.setup_nonrelated"], "fields.Field.setup_related": ["<builtin>.tuple", "<builtin>.KeyError", "<builtin>.TypeError", "<builtin>.setattr", "<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.getattr"], "fields.Many2one.setup_nonrelated": ["<builtin>.super", "<builtin>.ValueError"], "fields.Field.setup_nonrelated": [], "fields.Field.get_depends": ["fields.resolve_mro", "<builtin>.list", "<builtin>.callable", "<builtin>.isinstance", "<builtin>.getattr"], "fields.Field.traverse_related": ["fields.first"], "fields.Field._compute_related": ["fields.first", "<builtin>.list", "fields.Field._process_related", "<builtin>.zip", "exceptions.UserError.__init__"], "fields.Field._process_related": [], "fields.Field._inverse_related": ["fields.Field.traverse_related", "<builtin>.bool"], "fields.Field._search_related": [], "operator.attrgetter": [], "fields.Field": ["<builtin>.property", "operator.attrgetter"], "<builtin>.property": [], "fields.Field.base_field": [], "fields.Field.groupable": [], "fields.Field._default_company_dependent": [], "fields.Field._compute_company_dependent": [], "fields.Field._inverse_company_dependent": ["fields.Many2one.convert_to_write", "fields.Field.convert_to_write"], "fields.Many2one.convert_to_write": ["<builtin>.isinstance", "<builtin>.ValueError"], "fields.Field.convert_to_write": ["fields.Many2one.convert_to_cache", "fields.Char.convert_to_cache", "fields.Field.convert_to_cache", "fields.Many2one.convert_to_record", "fields.Many2one.convert_to_read", "fields.Datetime.convert_to_cache", "fields.Field.convert_to_read", "fields.Field.convert_to_record"], "fields.Field._search_company_dependent": [], "fields.Field.resolve_depends": ["warnings.warn", "<builtin>.ValueError", "<builtin>.tuple", "<builtin>.enumerate"], "fields.Field.get_description": ["<builtin>.callable", "<builtin>.getattr"], "fields.Field._description_depends": [], "fields.Field._description_searchable": ["<builtin>.bool"], "fields.Field._description_sortable": [], "fields.Field._description_string": [], "fields.Field._description_help": [], "fields.Field.is_editable": ["<builtin>.any"], "fields.Field.null": [], "fields.Field.convert_to_column": ["tools.pycompat.to_text"], "fields.Field.convert_to_cache": [], "fields.Field.convert_to_record": [], "fields.Field.convert_to_record_multi": ["fields.Many2one.convert_to_record", "<builtin>.zip", "fields.Field.convert_to_record"], "fields.Many2one.convert_to_record": ["fields.PrefetchMany2one.__init__"], "fields.Field.convert_to_read": [], "fields.Many2one.convert_to_cache": ["<builtin>.len", "<builtin>.any", "models.NewId", "<builtin>.ValueError", "<builtin>.isinstance"], "fields.Char.convert_to_cache": ["tools.pycompat.to_text"], "fields.Datetime.convert_to_cache": ["fields.Datetime.to_datetime"], "fields.Many2one.convert_to_read": [], "fields.Field.convert_to_onchange": ["fields.Many2one.convert_to_read", "fields.Field.convert_to_read"], "fields.Field.convert_to_export": [], "fields.Field.convert_to_display_name": ["odoo.loglevels.ustr"], "fields.Field.column_order": [], "fields.Field.update_db": ["fields.Field.update_db_notnull", "fields.Many2one.update_db_column", "fields.Char.update_db_column", "fields.Field.update_db_column"], "fields.Many2one.update_db_column": ["<builtin>.super"], "fields.Char.update_db_column": ["<builtin>.super", "tools.sql.convert_column"], "fields.Field.update_db_column": ["tools.sql.drop_not_null", "fields.Field._convert_db_column", "tools.sql.create_column"], "fields.Field.update_db_notnull": ["tools.sql.drop_not_null"], "fields.Field._convert_db_column": ["tools.sql.convert_column"], "fields.Field.update_db_notnull.add_not_null": [], "fields.Field.update_db_related": [], "fields.Field.read": ["<builtin>.NotImplementedError"], "fields.Field.create": ["fields.Field.write", "fields.Many2one.write"], "fields.Field.write": ["itertools.repeat", "fields.Many2one.convert_to_cache", "fields.Char.convert_to_cache", "fields.Field.convert_to_cache", "<builtin>.any", "fields.Datetime.convert_to_cache"], "fields.Many2one.write": ["itertools.repeat", "fields.Many2one._remove_inverses", "fields.Many2one.convert_to_cache", "<builtin>.any", "fields.Many2one._update_inverses"], "fields.Field.__get__": ["fields.Field.__get__.is_inherited_field", "fields.Many2one.convert_to_cache", "fields.Char.convert_to_cache", "fields.Field.recompute", "fields.Field.convert_to_cache", "fields.Many2one.convert_to_record", "fields.Field.compute_value", "exceptions.UserError.__init__", "fields.Datetime.convert_to_cache", "<builtin>.ValueError", "fields.Field.convert_to_record"], "fields.Field.recompute": ["fields.Field.compute_value", "models.expand_ids", "itertools.islice"], "fields.Field.compute_value": [], "fields.Field.__get__.is_inherited_field": [], "fields.Field.mapped": ["<builtin>.len", "fields.Field.__get__", "fields.Field.recompute", "fields.first", "fields.Field.convert_to_record_multi", "<builtin>.list", "fields.Id.__get__", "fields.Many2one.convert_to_record_multi"], "fields.Id.__get__": ["<builtin>.len", "<builtin>.ValueError"], "fields.Many2one.convert_to_record_multi": ["fields.PrefetchMany2one.__init__", "<builtin>.tuple", "tools.misc.unique"], "fields.Field.__set__": ["fields.Many2one.convert_to_write", "fields.Field.convert_to_write", "fields.Field.write", "fields.Many2one.write"], "fields.Field.__set__.<lambda1>": [], "models.expand_ids": ["<builtin>.bool"], "fields.Field.determine_inverse": ["fields.Field._inverse_related", "<builtin>.isinstance", "<builtin>.getattr"], "fields.Field.determine_domain": ["<builtin>.isinstance", "fields.Field._search_related", "<builtin>.getattr"], "fields.Boolean.convert_to_column": ["<builtin>.bool"], "fields.Boolean.convert_to_cache": ["<builtin>.bool"], "fields.Boolean.convert_to_export": [], "fields.Integer.convert_to_column": ["<builtin>.int"], "fields.Integer.convert_to_cache": ["<builtin>.int", "<builtin>.isinstance"], "fields.Integer.convert_to_record": [], "fields.Integer.convert_to_read": ["<builtin>.float"], "fields.Integer._update": [], "fields.Integer.convert_to_export": [], "fields.Float.__init__": ["<builtin>.super"], "fields.Float.column_type": [], "fields.Float.get_digits": ["<builtin>.isinstance"], "fields.Float": ["<builtin>.staticmethod", "<builtin>.property", "operator.attrgetter"], "fields.Float._description_digits": ["fields.Float.get_digits"], "fields.Float.convert_to_column": ["tools.float_utils.float_round", "tools.float_utils.float_repr", "fields.Float.get_digits", "<builtin>.float"], "fields.Float.convert_to_cache": ["tools.float_utils.float_round", "fields.Float.get_digits", "<builtin>.float"], "fields.Float.convert_to_record": [], "fields.Float.convert_to_export": [], "<builtin>.staticmethod": [], "fields.Monetary.__init__": ["<builtin>.super"], "fields.Monetary._description_currency_field": ["fields.Monetary.get_currency_field"], "fields.Monetary.get_currency_field": [], "fields.Monetary.setup_nonrelated": ["<builtin>.super", "fields.Monetary.get_currency_field"], "fields.Monetary.setup_related": ["<builtin>.super", "fields.Monetary.get_currency_field"], "fields.Monetary.convert_to_column": ["tools.float_utils.float_repr", "fields.Monetary.get_currency_field", "<builtin>.float"], "fields.Monetary.convert_to_cache": ["<builtin>.len", "<builtin>.float", "<builtin>.str", "<builtin>.ValueError", "fields.Monetary.get_currency_field"], "fields.Monetary.convert_to_record": [], "fields.Monetary.convert_to_read": [], "fields.Monetary.convert_to_write": [], "fields._String.__init__": ["<builtin>.super", "<builtin>.callable", "<builtin>.bool"], "fields._String": ["<builtin>.property", "operator.attrgetter"], "fields._String._description_translate": ["<builtin>.bool"], "fields._String._convert_db_column": ["tools.sql.convert_column_translatable", "tools.sql.convert_column"], "fields._String.get_trans_terms": ["<builtin>.callable"], "fields._String.get_text_content": ["<builtin>.getattr"], "fields._String.get_text_content.<lambda1>": [], "fields._String.convert_to_column": ["fields._String._convert_from_cache_to_column", "<builtin>.callable", "fields.Char.convert_to_cache", "fields._String.convert_to_cache"], "fields._String.convert_to_cache": [], "fields._String.convert_to_column.<lambda1>": [], "fields._String._convert_from_cache_to_column": ["psycopg2.extras.Json"], "fields._String.convert_to_record": ["<builtin>.callable", "<builtin>.zip", "fields._String.get_trans_terms"], "fields._String.convert_to_record.<lambda1>": ["hashlib.sha256"], "hashlib.sha256": [], "fields._String.convert_to_write": [], "fields._String.get_trans_func": ["<builtin>.dict", "<builtin>.zip", "fields._String.get_translation_dictionary", "<builtin>.callable"], "fields._String.get_trans_func.<lambda1>": [], "fields._String.get_translation_dictionary": ["<builtin>.len", "<builtin>.zip", "fields._String.get_trans_terms", "collections.defaultdict"], "fields._String.get_trans_func.translate": [], "fields._String.get_trans_func.translate.<lambda1>": [], "fields._String.get_translation_dictionary.<lambda1>": ["collections.defaultdict"], "fields._String._get_stored_translations": [], "fields._String.write": ["itertools.repeat", "fields.Char.convert_to_cache", "fields._String._get_stored_translations", "<builtin>.any", "fields._String.get_translation_dictionary", "<builtin>.super", "<builtin>.list", "collections.defaultdict", "fields._String.get_text_content", "fields._String.get_trans_terms", "difflib.get_close_matches", "<builtin>.set", "<builtin>.callable", "fields._String.convert_to_cache"], "fields._String.write.<lambda1>": [], "difflib.get_close_matches": [], "fields._String.write.<lambda2>": [], "fields.Char.column_type": ["tools.sql.pg_varchar"], "fields.Char": ["<builtin>.property", "operator.attrgetter"], "fields.Char.convert_to_column": ["tools.pycompat.to_text", "<builtin>.super"], "fields.Text.column_type": [], "fields.Text.convert_to_cache": ["odoo.loglevels.ustr"], "fields.Html._get_attrs": ["<builtin>.super"], "fields.Html.column_type": [], "fields.Html": ["<builtin>.property", "operator.attrgetter"], "fields.Html.convert_to_column": ["fields.Html._convert", "<builtin>.super"], "fields.Html._convert": ["tools.mail.html_sanitize", "exceptions.UserError.__init__", "tools.mail.html_normalize"], "fields.Html.convert_to_cache": ["fields.Html._convert"], "fields.Html.convert_to_record": ["<builtin>.super", "markupsafe.Markup", "<builtin>.isinstance"], "fields.Html.convert_to_read": ["<builtin>.super", "markupsafe.Markup", "<builtin>.isinstance"], "fields.Html.get_trans_terms": ["<builtin>.super", "<builtin>.map", "<builtin>.list"], "fields.Date": ["<builtin>.staticmethod"], "fields.Date.today": ["datetime.date.today"], "fields.Date.context_today": ["datetime.datetime.now", "pytz.timezone"], "fields.Date.to_date": ["<builtin>.isinstance", "datetime.datetime.strptime"], "datetime.datetime.strptime": [], "fields.Date.to_string": [], "fields.Date.convert_to_cache": ["fields.Date.to_date", "<builtin>.isinstance"], "fields.Date.convert_to_export": ["fields.Date.to_date"], "fields.Datetime": ["<builtin>.staticmethod"], "fields.Datetime.now": ["datetime.datetime.now"], "fields.Datetime.today": ["fields.Datetime.now"], "fields.Datetime.context_timestamp": ["<builtin>.isinstance", "pytz.utc.localize", "pytz.timezone"], "fields.Datetime.to_datetime": ["datetime.datetime.combine", "<builtin>.len", "datetime.datetime.strptime", "<builtin>.ValueError", "<builtin>.isinstance"], "fields.Datetime.to_string": [], "fields.Datetime.convert_to_export": ["fields.Datetime.to_datetime", "fields.Datetime.convert_to_display_name"], "fields.Datetime.convert_to_display_name": ["fields.Datetime.context_timestamp", "fields.Datetime.to_string", "fields.Datetime.to_datetime"], "fields.Binary.column_type": [], "fields.Binary._get_attrs": ["<builtin>.super"], "fields.Binary": ["<builtin>.property", "operator.attrgetter"], "fields.Binary.convert_to_column": ["psycopg2.Binary", "<builtin>.str", "tools.mimetypes._odoo_guess_mimetype", "exceptions.UserError.__init__", "base64.b64decode", "<builtin>.isinstance"], "psycopg2.Binary": [], "fields.Binary.convert_to_cache": ["<builtin>.isinstance", "tools.misc.human_size", "<builtin>.bytes"], "fields.Binary.convert_to_record": ["<builtin>.isinstance", "<builtin>.bytes"], "fields.Binary.compute_value": ["<builtin>.len", "<builtin>.any", "<builtin>.super", "tools.misc.human_size", "<builtin>.zip", "fields.Binary.convert_to_cache", "base64.b64decode", "<builtin>.isinstance"], "fields.Binary.read": ["<builtin>.map"], "fields.Binary.create": [], "fields.Binary.write": ["<builtin>.super", "fields.Binary.convert_to_cache", "<builtin>.any", "itertools.repeat"], "fields.Image.create": ["fields.Image._image_process", "fields.Binary.convert_to_cache", "<builtin>.super", "itertools.repeat"], "fields.Image._image_process": ["base64.b64decode", "exceptions.UserError.__init__", "tools.image.image_process", "base64.b64encode"], "fields.Image.write": ["itertools.repeat", "<builtin>.any", "<builtin>.super", "fields.Binary.convert_to_cache", "fields.Image._image_process"], "fields.Image._process_related": ["<builtin>.super", "fields.Image._image_process"], "fields.Selection": ["tools.sql.pg_varchar"], "fields.Selection.__init__": ["<builtin>.super"], "fields.Selection.setup_nonrelated": ["<builtin>.super"], "fields.Selection.setup_related": ["<builtin>.super"], "fields.Selection.setup_related.<lambda1>": [], "fields.Selection._get_attrs": ["<builtin>.super"], "fields.Selection._setup_attrs": ["<builtin>.len", "<builtin>.all", "<builtin>.super", "<builtin>.ValueError", "<builtin>.dict", "<builtin>.callable", "<builtin>.isinstance", "tools.misc.merge_sequences"], "fields.Selection._selection_modules": ["<builtin>.len", "fields.resolve_mro", "<builtin>.reversed", "collections.defaultdict", "<builtin>.isinstance"], "fields.Selection._description_selection": ["<builtin>.callable", "<builtin>.isinstance", "fields.Selection.setup_related.<lambda1>", "<builtin>.getattr"], "fields.Selection._default_group_expand": ["fields.Selection.get_values"], "fields.Selection.get_values": ["<builtin>.callable", "<builtin>.isinstance", "fields.Selection.setup_related.<lambda1>", "<builtin>.getattr"], "fields.Selection.convert_to_column": ["<builtin>.super", "fields.Selection.convert_to_cache"], "fields.Selection.convert_to_cache": ["fields.Selection.get_values", "<builtin>.int", "<builtin>.ValueError"], "fields.Selection.convert_to_export": ["<builtin>.isinstance", "fields.Selection._description_selection"], "fields.Reference.column_type": ["tools.sql.pg_varchar"], "fields.Reference.convert_to_column": ["fields.Field.convert_to_column", "fields.Char.convert_to_column", "fields.Many2one.convert_to_column"], "fields.Many2one.convert_to_column": [], "fields.Reference.convert_to_cache": ["<builtin>.len", "<builtin>.int", "<builtin>.ValueError", "fields.Selection.get_values", "<builtin>.isinstance"], "fields.Reference.convert_to_record": ["<builtin>.int"], "fields.Reference.convert_to_read": [], "fields.Reference.convert_to_export": [], "fields.Reference.convert_to_display_name": [], "fields._Relational.__get__": ["<builtin>.len", "fields.Field.mapped", "<builtin>.super"], "fields._Relational.setup_nonrelated": ["<builtin>.super"], "fields._Relational.get_domain_list": ["<builtin>.callable", "<builtin>.isinstance"], "fields._Relational._related_domain": ["<builtin>.callable"], "fields._Relational._related_domain.<lambda1>": [], "fields._Relational": ["<builtin>.property", "operator.attrgetter"], "fields._Relational._description_domain": ["<builtin>.callable"], "fields._Relational.null": [], "fields.Many2one.__init__": ["<builtin>.super"], "fields.Many2one.update_db": ["<builtin>.super", "<builtin>.ValueError"], "fields.Many2one.update_db_foreign_key": [], "fields.Many2one._update": ["fields.Many2one.convert_to_cache"], "models.NewId": [], "fields.PrefetchMany2one.__init__": [], "fields.Many2one.convert_to_export": [], "fields.Many2one.convert_to_display_name": [], "fields.Many2one.convert_to_onchange": ["<builtin>.super"], "fields.Many2one._remove_inverses": ["<builtin>.all", "<builtin>.tuple", "<builtin>.set"], "fields.Many2one._update_inverses": ["fields.Many2one.convert_to_record", "<builtin>.tuple", "tools.misc.unique"], "fields.Many2one._remove_inverses.<lambda1>": [], "fields.Many2one._remove_inverses.<lambda2>": ["models.NewId"], "fields.Many2oneReference": ["<builtin>.property", "operator.attrgetter"], "fields.Many2oneReference.convert_to_cache": ["<builtin>.super", "<builtin>.isinstance"], "fields.Many2oneReference._remove_inverses": ["fields.Many2oneReference._record_ids_per_res_model", "<builtin>.tuple", "<builtin>.set"], "fields.Many2oneReference._record_ids_per_res_model": ["collections.defaultdict"], "fields.Many2oneReference._update_inverses": ["<builtin>.tuple", "tools.misc.unique", "fields.Many2oneReference._record_ids_per_res_model"], "fields.Json.convert_to_record": ["copy.deepcopy"], "fields.Json.convert_to_cache": ["json.dumps", "json.loads"], "fields.Json.convert_to_column": ["psycopg2.extras.Json"], "fields.Json.convert_to_export": ["json.dumps"], "fields.Properties": ["<builtin>.property", "operator.attrgetter"], "fields.Properties._setup_attrs": ["<builtin>.super"], "fields.Properties.convert_to_column": ["json.dumps", "fields.Properties.convert_to_cache"], "fields.Properties.convert_to_cache": ["fields.Properties._list_to_dict", "fields.Properties._remove_display_name", "<builtin>.ValueError", "<builtin>.isinstance", "json.loads"], "fields.Properties._remove_display_name": ["<builtin>.isinstance", "tools.misc.has_list_types", "tools.misc.is_list_of"], "fields.Properties._list_to_dict": ["<builtin>.ValueError", "<builtin>.isinstance", "tools.misc.is_list_of", "fields.Properties._add_missing_names"], "fields.Properties.convert_to_record": ["fields.Properties._dict_to_list", "<builtin>.isinstance", "fields.Properties._get_properties_definition", "fields.Properties._parse_json_types"], "fields.Properties._get_properties_definition": [], "fields.Properties._dict_to_list": ["<builtin>.ValueError", "tools.misc.is_list_of"], "fields.Properties._parse_json_types": ["<builtin>.len", "<builtin>.bool", "tools.misc.is_list_of", "<builtin>.list", "<builtin>.ValueError", "<builtin>.set", "<builtin>.isinstance"], "fields.Properties.convert_to_read": ["fields.Properties._add_display_name"], "fields.Properties._add_display_name": ["<builtin>.isinstance", "tools.misc.is_list_of"], "fields.Properties.convert_to_write": ["<builtin>.super", "<builtin>.isinstance", "fields.Properties._remove_display_name"], "fields.Properties.convert_to_onchange": ["fields.Properties._add_display_name"], "fields.Properties.read": ["<builtin>.zip", "<builtin>.list", "collections.defaultdict", "<builtin>.set"], "fields.Properties.write": ["<builtin>.super", "<builtin>.isinstance", "json.loads", "<builtin>.any"], "fields.Properties._compute": ["fields.Properties._add_default_values"], "fields.Properties._add_default_values": ["fields.Properties._dict_to_list", "<builtin>.isinstance", "fields.Properties._remove_display_name", "<builtin>.ValueError"], "fields.Properties._add_missing_names": ["<builtin>.str", "uuid.uuid4"], "uuid.uuid4": [], "fields.PropertiesDefinition.convert_to_column": ["json.dumps", "fields.Properties._remove_display_name", "fields.PropertiesDefinition._validate_properties_definition", "<builtin>.ValueError", "<builtin>.isinstance", "json.loads"], "fields.PropertiesDefinition._validate_properties_definition": ["<builtin>.len", "<builtin>.all", "tools.misc.is_list_of", "<builtin>.ValueError", "<builtin>.filter", "<builtin>.set", "<builtin>.isinstance"], "fields.PropertiesDefinition.convert_to_cache": ["json.dumps", "fields.Properties._remove_display_name", "fields.PropertiesDefinition._validate_properties_definition", "<builtin>.ValueError", "<builtin>.isinstance", "json.loads"], "fields.PropertiesDefinition.convert_to_record": ["<builtin>.dict", "<builtin>.all", "ast.literal_eval", "odoo.osv.expression.expression"], "odoo.osv.expression.expression": [], "fields.PropertiesDefinition.convert_to_read": ["fields.Properties._add_display_name"], "fields.PropertiesDefinition._validate_properties_definition.<lambda1>": [], "fields.PropertiesDefinition._validate_properties_definition.<lambda2>": [], "fields.Command.create": [], "fields.Command.update": [], "fields.Command.delete": [], "fields.Command.unlink": [], "fields.Command.link": [], "fields.Command.clear": [], "fields.Command.set": [], "fields._RelationalMulti._update": ["<builtin>.callable", "<builtin>.isinstance", "fields._RelationalMulti.convert_to_cache"], "fields._RelationalMulti.convert_to_cache": ["odoo.tools.OrderedSet", "fields._RelationalMulti.convert_to_cache.<lambda1>", "models.NewId", "tools.cache.ormcache_counter.__init__", "<builtin>.ValueError", "fields.OrderedSet", "tools.misc.OrderedSet.__init__", "<builtin>.isinstance", "<builtin>.tuple"], "fields._RelationalMulti.convert_to_cache.<lambda1>": ["models.NewId"], "fields._RelationalMulti.convert_to_record": ["fields.PrefetchX2many.__init__"], "fields.PrefetchX2many.__init__": [], "fields._RelationalMulti.convert_to_record_multi": ["<builtin>.tuple", "tools.misc.unique", "fields.PrefetchX2many.__init__"], "fields._RelationalMulti.convert_to_read": [], "fields._RelationalMulti.convert_to_write": ["fields.Command.set", "fields.Command.create", "fields.Command.update", "<builtin>.ValueError", "fields._RelationalMulti.convert_to_write.get_origin", "<builtin>.isinstance", "fields.Command.clear"], "fields._RelationalMulti.convert_to_write.get_origin": ["<builtin>.isinstance"], "fields._RelationalMulti.convert_to_export": [], "fields._RelationalMulti.convert_to_display_name": ["<builtin>.NotImplementedError"], "fields._RelationalMulti.get_depends": ["<builtin>.super", "<builtin>.isinstance", "itertools.chain", "tools.misc.unique"], "fields._RelationalMulti.create": ["fields._RelationalMulti.write_batch"], "fields._RelationalMulti.write_batch": ["<builtin>.all", "fields.Command.set", "<builtin>.any", "<builtin>.ValueError", "<builtin>.enumerate", "fields.Command.clear", "<builtin>.isinstance", "<builtin>.tuple"], "fields._RelationalMulti.write": ["fields._RelationalMulti.write_batch"], "fields.One2many.__init__": ["<builtin>.super"], "fields.One2many.setup_nonrelated": ["<builtin>.super", "<builtin>.isinstance"], "fields.One2many": ["<builtin>.property", "operator.attrgetter"], "fields.One2many.update_db": ["exceptions.UserError.__init__"], "fields.One2many.get_domain_list": ["<builtin>.super"], "fields.One2many.__get__": ["<builtin>.super"], "fields.One2many.read": ["<builtin>.len", "itertools.repeat", "fields.One2many.get_domain_list", "collections.defaultdict", "<builtin>.tuple"], "fields.One2many.read.<lambda1>": [], "fields.One2many.write_real": ["itertools.repeat", "fields.One2many.write_real.link", "fields.One2many.get_domain_list", "fields.One2many.write_real.unlink", "collections.defaultdict", "fields.One2many.write_real.flush", "<builtin>.dict"], "fields.One2many.write_real.unlink": ["<builtin>.getattr"], "fields.One2many.write_real.flush": [], "fields.One2many.write_real.link": ["<builtin>.tuple", "tools.misc.unique"], "fields.One2many.write_new": ["itertools.repeat", "fields.One2many.write_new.browse", "fields.One2many.write_new.link", "fields.One2many.write_new.unlink"], "fields.One2many.write_new.browse": ["models.NewId"], "fields.One2many.write_new.link": ["<builtin>.tuple", "tools.misc.unique"], "fields.One2many.write_new.unlink": [], "fields.Many2many.__init__": ["<builtin>.super"], "fields.Many2many.setup_nonrelated": ["models.check_pg_name", "<builtin>.super", "<builtin>.sorted", "<builtin>.ValueError", "<builtin>.TypeError", "<builtin>.tuple"], "models.check_pg_name": ["<builtin>.len", "exceptions.UserError.__init__"], "fields.Many2many.update_db": ["tools.sql.table_exists"], "fields.Many2many.update_db_foreign_keys": [], "fields.Many2many.groupable": [], "fields.Many2many.read": ["fields._Relational.get_domain_list", "<builtin>.tuple", "collections.defaultdict"], "fields.Many2many.write_real": ["<builtin>.len", "fields.Many2many.write_real.relation_remove", "fields.Many2many.write_real.relation_delete", "<builtin>.list", "collections.defaultdict", "<builtin>.frozenset", "<builtin>.zip", "fields.Many2many.read", "fields.Many2many.write_real.relation_set", "fields.OrderedSet", "fields.Many2many.write_real.relation_add", "<builtin>.isinstance", "<builtin>.tuple"], "fields.Many2many.write_real.relation_add": [], "fields.Many2many.write_real.relation_remove": [], "fields.Many2many.write_real.relation_set": ["fields.OrderedSet"], "fields.Many2many.write_real.relation_delete": [], "fields.Many2many.write_real.<lambda1>": [], "fields.Many2many.write_new": ["odoo.tools.OrderedSet", "collections.defaultdict", "tools.cache.ormcache_counter.__init__", "fields.OrderedSet", "tools.misc.OrderedSet.__init__", "<builtin>.isinstance", "<builtin>.tuple", "fields.Many2many.write_new.<lambda1>"], "fields.Many2many.write_new.<lambda1>": ["models.NewId"], "fields.Many2many.write_new.<lambda2>": [], "fields.Id.update_db": [], "fields.Id.__set__": ["<builtin>.TypeError"], "fields.PrefetchMany2one.__iter__": ["tools.misc.unique"], "fields.PrefetchMany2one.__reversed__": ["tools.misc.unique", "<builtin>.reversed"], "fields.PrefetchX2many.__iter__": ["tools.misc.unique"], "fields.PrefetchX2many.__reversed__": ["tools.misc.unique", "<builtin>.reversed"], "fields.apply_required": ["tools.sql.set_not_null"], "release": ["<builtin>.str"], "modules.db": ["logging.getLogger"], "modules.db.is_initialized": [], "modules.db.initialize": ["<builtin>.IOError", "<builtin>.tuple", "psycopg2.extras.Json", "modules.db.create_categories"], "modules.db.create_categories": ["psycopg2.extras.Json"], "modules.db.has_unaccent": [], "modules.db.has_trigram": ["<builtin>.len"], "modules.neutralize": [], "modules.neutralize.get_installed_modules": [], "modules.neutralize.get_neutralization_queries": ["odoo.modules.get_module_resource", "odoo.tools.misc.file_open"], "odoo.modules.get_module_resource": [], "modules.loading": ["logging.getLogger"], "modules.loading.load_data": ["<builtin>.bool", "threading.current_thread", "tools.convert_file", "modules.loading.load_data._get_files_of_kind"], "modules.loading.load_data._get_files_of_kind": ["<builtin>.isinstance"], "tools.convert_file": [], "modules.loading.load_demo": ["collections.abc.Mapping.get", "api.Environment.ref", "collections.abc.Mapping.__init__", "modules.loading.load_data"], "collections.abc.Mapping.get": [], "modules.loading.force_demo": ["modules.loading.load_demo", "collections.abc.Mapping.__init__", "odoo.modules.graph.Graph"], "odoo.modules.graph.Graph": [], "modules.loading.load_module_graph": ["<builtin>.len", "modules.module.adapt_version", "<builtin>.tuple", "odoo.tests.loader.make_suite", "modules.loading.load_data", "odoo.registry", "modules.loading.load_demo", "time.time", "collections.abc.Mapping.__init__", "modules.module.load_openerp_module", "odoo.tests.loader.run_suite", "<builtin>.getattr", "<builtin>.enumerate", "<builtin>.set", "api.Environment.flush_all", "<builtin>.delattr", "<builtin>.hasattr", "odoo.modules.migration.MigrationManager"], "odoo.modules.migration.MigrationManager": [], "api.Environment.flush_all": ["odoo.tools.OrderedSet", "api.Environment._recompute_all", "tools.cache.ormcache_counter.__init__", "collections.abc.Mapping.cache.get_dirty_fields", "fields.OrderedSet", "tools.misc.OrderedSet.__init__"], "modules.module.load_openerp_module": ["modules.module.get_manifest", "<builtin>.__import__", "<builtin>.getattr"], "odoo.tests.loader.make_suite": [], "odoo.tests.loader.run_suite": [], "modules.module.adapt_version": [], "modules.loading._check_module_names": ["<builtin>.len", "<builtin>.tuple", "<builtin>.set"], "modules.loading.load_marked_modules": ["<builtin>.len", "modules.loading.load_module_graph", "<builtin>.tuple", "<builtin>.set"], "modules.loading.load_modules": ["tools.ustr", "<builtin>.list", "<builtin>.reversed", "api.Environment.flush_all", "odoo.modules.db.initialize", "odoo.modules.registry.Registry.new", "<builtin>.len", "odoo.modules.db.is_initialized", "<builtin>.sorted", "odoo.modules.migration.MigrationManager", "<builtin>.getattr", "modules.module.initialize_sys_path", "collections.abc.Mapping.values", "modules.loading._check_module_names", "<builtin>.ImportError", "collections.abc.Mapping.__init__", "odoo.tools.table_exists", "<builtin>.set", "<builtin>.dict", "itertools.chain", "odoo.modules.graph.Graph", "modules.loading.load_marked_modules", "tools.config.configmanager.pop", "modules.loading.load_module_graph", "tools.load_language"], "modules.module.initialize_sys_path": ["importlib.machinery.ModuleSpec", "os.path.normcase", "importlib.util.module_from_spec", "os.path.dirname", "os.path.abspath", "os.path.isdir", "sys.meta_path.insert", "odoo.upgrade.__path__.append", "os.path.join", "odoo.tools.ustr", "<builtin>.getattr", "odoo.addons.__path__.append", "os.access"], "odoo.modules.db.is_initialized": [], "odoo.modules.db.initialize": [], "odoo.tools.table_exists": [], "tools.load_language": [], "odoo.modules.registry.Registry.new": [], "tools.ustr": [], "collections.abc.Mapping.values": [], "modules.loading.reset_modules_state": ["odoo.sql_db.db_connect"], "modules.module": ["logging.getLogger", "odoo.tools.lazy", "functools.lru_cache"], "odoo.tools.lazy": [], "modules.module.ad_paths": ["warnings.warn"], "modules.module.AddonsHook.find_module": ["warnings.warn"], "modules.module.AddonsHook.load_module": ["importlib.import_module", "sys.modules.get", "re.sub"], "sys.modules.get": [], "modules.module.OdooHook.find_module": ["warnings.warn", "re.match"], "modules.module.OdooHook.load_module": ["importlib.import_module", "re.sub"], "modules.module.UpgradeHook.find_module": ["re.match"], "modules.module.UpgradeHook.load_module": ["importlib.import_module"], "odoo.addons.__path__.append": [], "odoo.upgrade.__path__.append": [], "importlib.machinery.ModuleSpec": [], "importlib.util.module_from_spec": [], "sys.meta_path.insert": [], "modules.module.get_module_path": ["os.path.join", "os.path.exists", "<builtin>.any"], "modules.module.get_module_filetree": ["<builtin>.len", "<builtin>.int", "<builtin>.Exception", "odoo.tools.osutil.listdir", "warnings.warn", "os.path.normpath", "modules.module.get_module_path"], "odoo.tools.osutil.listdir": [], "modules.module.get_resource_path": ["modules.module.check_resource_path", "modules.module.get_module_path"], "modules.module.check_resource_path": ["os.path.join", "os.path.exists"], "modules.module.get_resource_from_path": ["os.path.join", "os.path.sep.join", "os.path.commonprefix"], "os.path.commonprefix": [], "os.path.sep.join": [], "modules.module.get_module_icon": ["modules.module.get_resource_path"], "modules.module.module_manifest": ["os.path.isfile", "os.path.join"], "modules.module.get_module_root": ["os.path.join", "os.path.abspath", "modules.module.module_manifest"], "modules.module.load_manifest": ["<builtin>.isinstance", "modules.module.adapt_version", "odoo.tools.file_open", "ast.literal_eval", "modules.module.module_manifest", "os.path.isfile", "os.path.join", "os.path.normpath", "modules.module.get_module_icon", "<builtin>.set", "copy.deepcopy", "modules.module.get_module_path"], "modules.module.load_information_from_description_file": ["modules.module.get_manifest", "warnings.warn"], "modules.module.get_modules": ["os.path.exists", "<builtin>.list", "modules.module.get_modules.listdir", "<builtin>.set"], "modules.module.get_modules.listdir": ["modules.module.get_modules.listdir.is_really_module", "os.listdir", "modules.module.get_modules.listdir.clean"], "modules.module.get_modules.listdir.clean": ["os.path.basename"], "modules.module.get_modules.listdir.is_really_module": ["os.path.isfile", "os.path.join"], "modules.module.get_modules_with_version": ["modules.module.get_modules", "modules.module.get_manifest", "modules.module.adapt_version"], "modules": [], "modules.registry": ["logging.getLogger"], "odoo.tools.lazy_classproperty": [], "modules.registry.Registry.registries": ["odoo.tools.lru.LRU", "<builtin>.int", "odoo.tools.config.get"], "odoo.tools.config.get": [], "odoo.tools.lru.LRU": [], "modules.registry.Registry.__new__": ["threading.current_thread"], "odoo.tools.func.locked": [], "modules.registry.Registry.new": ["<builtin>.bool", "time.time", "odoo.modules.load_modules", "odoo.modules.reset_modules_state"], "odoo.modules.load_modules": [], "odoo.modules.reset_modules_state": [], "modules.registry.Registry.init": ["odoo.tools.Collector", "odoo.modules.db.has_unaccent", "odoo.sql_db.db_connect", "odoo.tests.result.OdooTestResult", "contextlib.closing", "collections.deque", "<builtin>.set", "odoo.modules.db.has_trigram", "threading.local", "odoo.tools.lru.LRU"], "odoo.tests.result.OdooTestResult": [], "odoo.tools.Collector": [], "threading.local": [], "odoo.modules.db.has_unaccent": [], "odoo.modules.db.has_trigram": [], "modules.registry.Registry.delete": [], "modules.registry.Registry.delete_all": [], "modules.registry.Registry.__len__": ["<builtin>.len"], "modules.registry.Registry.__iter__": ["<builtin>.iter"], "modules.registry.Registry.__getitem__": [], "modules.registry.Registry.__call__": [], "modules.registry.Registry.__setitem__": [], "modules.registry.Registry.__delitem__": [], "modules.registry.Registry.descendants": ["<builtin>.all", "odoo.tools.OrderedSet", "collections.deque", "operator.attrgetter", "fields.OrderedSet"], "modules.registry.Registry.load": ["models.MetaModel.module_to_models.get", "odoo.tools.lazy_property.reset_all"], "odoo.tools.lazy_property.reset_all": [], "models.MetaModel.module_to_models.get": [], "modules.registry.Registry.setup_models": ["odoo.tools.lazy_property.reset_all", "<builtin>.list", "collections.defaultdict", "odoo.api.Environment", "<builtin>.tuple"], "odoo.tools.lazy_property": [], "modules.registry.Registry.field_computed": ["<builtin>.len", "collections.defaultdict"], "modules.registry.Registry.get_trigger_tree": ["modules.registry.TriggerTree.merge"], "modules.registry.TriggerTree.merge": ["odoo.tools.OrderedSet", "collections.defaultdict", "modules.registry.TriggerTree.merge", "fields.OrderedSet", "modules.registry.TriggerTree.__init__"], "modules.registry.Registry.get_dependent_fields": [], "modules.registry.Registry._discard_fields": [], "modules.registry.Registry.get_field_trigger_tree": ["odoo.tools.OrderedSet", "modules.registry.Registry.get_field_trigger_tree.transitive_triggers", "modules.registry.TriggerTree.increase", "fields.OrderedSet", "modules.registry.TriggerTree.__init__"], "modules.registry.TriggerTree.__init__": ["<builtin>.super"], "modules.registry.Registry.get_field_trigger_tree.transitive_triggers": ["modules.registry.Registry.get_field_trigger_tree.transitive_triggers", "modules.registry.Registry.get_field_trigger_tree.concat"], "modules.registry.Registry.get_field_trigger_tree.concat": ["modules.registry.Registry.get_field_trigger_tree.concat"], "modules.registry.TriggerTree.increase": ["modules.registry.TriggerTree.__init__"], "modules.registry.Registry._field_triggers": ["<builtin>.reversed", "<builtin>.tuple", "<builtin>.list", "collections.defaultdict"], "modules.registry.Registry._field_triggers.<lambda1>": ["collections.defaultdict"], "modules.registry.Registry.is_modifying_relations": ["<builtin>.any"], "modules.registry.Registry.post_init": ["functools.partial"], "modules.registry.Registry.post_constraint": [], "modules.registry.Registry.finalize_constraints": [], "modules.registry.Registry.init_models": ["collections.deque", "odoo.api.Environment"], "modules.registry.Registry.check_indexes": ["odoo.tools.sql.create_index", "odoo.osv.expression.get_unaccent_wrapper", "<builtin>.getattr", "warnings.warn", "<builtin>.dict", "<builtin>.tuple"], "odoo.osv.expression.get_unaccent_wrapper": [], "odoo.tools.sql.create_index": [], "modules.registry.Registry.add_foreign_key": [], "modules.registry.Registry.check_foreign_keys": ["odoo.tools.sql.drop_constraint", "odoo.tools.sql.get_foreign_keys", "odoo.tools.sql.add_foreign_key"], "odoo.tools.sql.add_foreign_key": [], "odoo.tools.sql.get_foreign_keys": [], "odoo.tools.sql.drop_constraint": [], "modules.registry.Registry.check_tables_exist": ["odoo.tools.existing_tables", "<builtin>.set", "odoo.api.Environment"], "odoo.tools.existing_tables": [], "modules.registry.Registry._clear_cache": [], "modules.registry.Registry.clear_caches": [], "modules.registry.Registry.is_an_ordinary_table": ["<builtin>.tuple"], "modules.registry.Registry.registry_invalidated": ["<builtin>.getattr"], "modules.registry.Registry.cache_invalidated": ["<builtin>.getattr"], "modules.registry.Registry.setup_signaling": [], "modules.registry.Registry.check_signaling": ["modules.registry.Registry.new", "contextlib.closing"], "modules.registry.Registry.signal_changes": ["contextlib.closing"], "modules.registry.Registry.reset_changes": ["contextlib.closing"], "modules.registry.Registry.manage_changes": [], "modules.registry.Registry.in_test_mode": [], "modules.registry.Registry.enter_test_mode": ["threading.RLock"], "modules.registry.Registry.leave_test_mode": [], "modules.registry.Registry.cursor": ["odoo.sql_db.TestCursor"], "odoo.sql_db.TestCursor": [], "modules.registry.DummyRLock.acquire": [], "modules.registry.DummyRLock.release": [], "modules.registry.DummyRLock.__enter__": ["modules.registry.DummyRLock.acquire"], "modules.registry.DummyRLock.__exit__": ["modules.registry.DummyRLock.release"], "modules.registry.TriggerTree.__bool__": ["<builtin>.len", "<builtin>.bool"], "modules.registry.TriggerTree.depth_first": [], "modules.graph": ["logging.getLogger"], "modules.graph.Graph.add_node": ["modules.graph.Node.__init__"], "modules.graph.Node.__init__": ["<builtin>.hasattr", "<builtin>.getattr"], "modules.graph.Graph.update_from_db": ["<builtin>.len", "<builtin>.tuple", "<builtin>.setattr"], "modules.graph.Graph.add_module": ["modules.graph.Graph.add_modules"], "modules.graph.Graph.add_modules": ["<builtin>.len", "<builtin>.all", "modules.graph.Graph.add_node", "modules.graph.Graph.update_from_db", "odoo.modules.module.get_manifest", "<builtin>.set", "<builtin>.dict", "<builtin>.setattr"], "odoo.modules.module.get_manifest": [], "modules.graph.Graph.__iter__": ["<builtin>.sorted", "<builtin>.set"], "modules.graph.Graph.__str__": ["<builtin>.str"], "modules.graph.Node.__new__": [], "modules.graph.Node.data": [], "modules.graph.Node.add_child": ["<builtin>.hasattr", "<builtin>.setattr", "modules.graph.Node.__init__"], "modules.graph.Node.add_child.<lambda1>": [], "modules.graph.Node.__setattr__": ["<builtin>.super", "<builtin>.setattr"], "modules.graph.Node.__iter__": ["itertools.chain", "itertools.chain.from_iterable"], "itertools.chain.from_iterable": [], "modules.graph.Node.__str__": ["modules.graph.Node._pprint"], "modules.graph.Node._pprint": [], "modules.graph.Node.should_have_demo": ["<builtin>.all", "<builtin>.hasattr"], "modules.graph.Node.parents": [], "modules.migration": ["logging.getLogger"], "modules.migration.load_script": ["odoo.modules.module.get_resource_path", "os.path.isabs"], "modules.migration.MigrationManager.__init__": ["modules.migration.MigrationManager._get_files", "collections.defaultdict"], "modules.migration.MigrationManager._get_files": ["modules.migration.MigrationManager._get_files._get_upgrade_path", "odoo.modules.module.get_resource_path", "collections.defaultdict", "modules.migration.MigrationManager._get_files.get_scripts", "<builtin>.hasattr", "<builtin>.getattr"], "modules.migration.MigrationManager._get_files._get_upgrade_path": ["os.path.join", "os.path.exists"], "modules.migration.MigrationManager._get_files.get_scripts": ["os.path.join", "os.listdir", "os.path.isdir", "glob.glob"], "modules.migration.MigrationManager.migrate_module": ["modules.migration.MigrationManager.migrate_module._get_migration_files", "modules.migration.MigrationManager.migrate_module._get_migration_versions", "modules.migration.MigrationManager.migrate_module.convert_version", "os.path.basename", "os.path.splitext", "modules.migration.load_script", "<builtin>.dict", "odoo.tools.parse_version.parse_version", "<builtin>.hasattr", "<builtin>.getattr"], "modules.migration.MigrationManager.migrate_module.convert_version": [], "modules.migration.MigrationManager.migrate_module._get_migration_versions": ["<builtin>.sorted"], "modules.migration.MigrationManager.migrate_module._get_migration_versions.<lambda1>": ["odoo.tools.parse_version.parse_version", "modules.migration.MigrationManager.migrate_module.convert_version"], "odoo.tools.parse_version.parse_version": [], "modules.migration.MigrationManager.migrate_module._get_migration_files": ["os.path.basename", "<builtin>.sorted"], "models": ["logging.getLogger", "collections.defaultdict", "collections.abc.Sequence.register", "collections.abc.Set.register", "psycopg2.extensions.AsIs", "re.compile"], "psycopg2.extensions.AsIs": [], "models.check_object_name": [], "models.raise_on_invalid_object_name": ["<builtin>.ValueError", "models.check_object_name"], "models.check_method_name": ["exceptions.UserError.__init__"], "models.fix_import_export_id_paths": ["re.sub"], "models.MetaModel": ["collections.defaultdict"], "models.MetaModel.__new__": ["<builtin>.len", "<builtin>.isinstance", "<builtin>.super"], "models.MetaModel.__init__": ["<builtin>.len", "fields.Field.__init__", "models.MetaModel.__init__.add", "<builtin>.super", "models.MetaModel.__init__.add_default", "fields._String.__init__", "inspect.signature", "fields.Many2one.__init__"], "models.MetaModel.__init__.add": ["fields.Field.__set_name__", "<builtin>.setattr"], "models.MetaModel.__init__.add_default": ["fields.Field.__set_name__", "<builtin>.setattr"], "models.NewId.__init__": [], "models.NewId.__bool__": [], "models.NewId.__eq__": ["<builtin>.isinstance"], "models.NewId.__hash__": ["<builtin>.hash", "<builtin>.id"], "models.NewId.__repr__": ["<builtin>.id"], "models.NewId.__str__": ["<builtin>.repr", "<builtin>.hex", "<builtin>.id"], "models.origin_ids": ["<builtin>.getattr"], "models.OriginIds.__init__": [], "models.OriginIds.__iter__": ["models.origin_ids"], "models.OriginIds.__reversed__": ["models.origin_ids", "<builtin>.reversed"], "models.is_registry_class": ["<builtin>.getattr"], "models.BaseModel.<lambda1>": ["tools.config.configmanager.get"], "models.BaseModel": ["tools.cache.ormcache.__init__", "api.returns", "api.attrsetter.<lambda1>", "<builtin>.property", "api.model_create_multi", "tools.func.lazy_property.__init__", "api.depends", "api.model"], "models.BaseModel.<lambda2>": ["tools.config.configmanager.get"], "models.BaseModel._valid_field_parameter": [], "api.model": ["api.model_create_single"], "models.BaseModel._add_field": ["<builtin>.type", "<builtin>.isinstance", "<builtin>.getattr", "<builtin>.setattr"], "models.BaseModel._pop_field": ["<builtin>.type", "<builtin>.tuple", "tools.misc.discardattr"], "models.BaseModel.<lambda3>": [], "api.depends": ["<builtin>.NotImplementedError", "<builtin>.callable", "api.attrsetter", "<builtin>.any"], "api.attrsetter.<lambda1>": ["<builtin>.setattr"], "models.BaseModel._compute_concurrency_field": ["odoo.fields.Datetime.now", "fields.Datetime.now"], "odoo.fields.Datetime.now": [], "models.BaseModel._build_model": ["<builtin>.tuple", "models.check_pg_name", "<builtin>.list", "<builtin>.TypeError", "<builtin>.type", "tools.misc.OrderedSet.__init__", "<builtin>.getattr"], "models.BaseModel._build_model_check_base": ["<builtin>.TypeError"], "models.BaseModel._build_model_check_parent": ["<builtin>.TypeError"], "models.BaseModel._build_model_attributes": ["<builtin>.list", "<builtin>.getattr", "<builtin>.reversed", "models.is_definition_class"], "models.BaseModel._init_constraints_onchanges": [], "models.BaseModel._constraint_methods": ["<builtin>.type", "<builtin>.callable", "models.BaseModel._constraint_methods.wrap", "inspect.getmembers"], "models.BaseModel._constraint_methods.is_constraint": ["<builtin>.callable", "<builtin>.hasattr"], "models.BaseModel._constraint_methods.wrap": ["api.attrsetter.<lambda1>", "api.constrains"], "api.constrains": ["<builtin>.callable", "api.attrsetter"], "models.BaseModel._constraint_methods.wrap.wrapper": ["models.BaseModel._constraint_methods.wrap.wrapper"], "models.BaseModel._ondelete_methods": ["<builtin>.type", "inspect.getmembers"], "models.BaseModel._ondelete_methods.is_ondelete": ["<builtin>.callable", "<builtin>.hasattr"], "models.BaseModel._onchange_methods": ["<builtin>.type", "functools.partial", "inspect.getmembers", "collections.defaultdict"], "models.BaseModel._onchange_methods.is_onchange": ["<builtin>.callable", "<builtin>.hasattr"], "models.BaseModel._onchange_methods.onchange_default": [], "models.BaseModel._is_an_ordinary_table": [], "models.BaseModel.__ensure_xml_id": ["<builtin>.iter", "<builtin>.Exception", "uuid.uuid4", "psycopg2.extensions.get_wait_callback", "psycopg2.extensions.set_wait_callback", "io.StringIO", "models.BaseModel.__ensure_xml_id.to_xid", "<builtin>.tuple"], "models.BaseModel.__ensure_xml_id.to_xid": [], "models.BaseModel.__ensure_xml_id.<lambda1>": [], "psycopg2.extensions.get_wait_callback": [], "psycopg2.extensions.set_wait_callback": [], "models.BaseModel._export_rows": ["<builtin>.len", "<builtin>.any", "<builtin>.str", "collections.defaultdict", "models.BaseModel._export_rows.<lambda1>", "contextlib.suppress", "<builtin>.enumerate", "<builtin>.type", "<builtin>.isinstance"], "models.BaseModel._export_rows.splittor": ["<builtin>.len", "<builtin>.range"], "models.BaseModel._export_rows.<lambda1>": [], "models.BaseModel.export_data": ["exceptions.UserError.__init__", "models.fix_import_export_id_paths"], "models.BaseModel.load": ["<builtin>.any", "<builtin>.float", "models.fix_import_export_id_paths", "models.BaseModel.load.flush", "tools.lru.LRU.__init__", "<builtin>.set", "<builtin>.isinstance"], "models.BaseModel.load.flush": ["<builtin>.type", "<builtin>.any", "<builtin>.str", "<builtin>.enumerate", "<builtin>.dict"], "models.BaseModel._add_fake_fields": ["odoo.fields.Char", "odoo.fields.Integer"], "odoo.fields.Char": [], "odoo.fields.Integer": [], "models.BaseModel._extract_records": ["<builtin>.len", "itertools.islice", "<builtin>.map", "models.BaseModel._extract_records.<lambda1>", "<builtin>.any", "itertools.takewhile", "<builtin>.list", "<builtin>.zip", "models.itemgetter_tuple", "<builtin>.enumerate", "<builtin>.set", "<builtin>.dict", "itertools.chain"], "models.BaseModel._extract_records.<lambda1>": [], "models.itemgetter_tuple": ["<builtin>.len", "operator.itemgetter"], "models.BaseModel._extract_records.only_o2m_values": ["models.itemgetter_tuple.<lambda2>", "<builtin>.any", "models.itemgetter_tuple.<lambda1>"], "models.itemgetter_tuple.<lambda2>": [], "models.itemgetter_tuple.<lambda1>": [], "itertools.takewhile": [], "models.BaseModel._convert_records": ["<builtin>.int", "tools.misc.CountingStream.__init__", "models.BaseModel.<lambda4>", "<builtin>.dict", "functools.partial"], "models.BaseModel._convert_records._log": ["<builtin>.len", "<builtin>.str", "models.BaseModel.<lambda4>", "<builtin>.dict", "<builtin>.isinstance"], "models.BaseModel.<lambda4>": [], "models.BaseModel._validate_fields": ["<builtin>.set"], "models.BaseModel.default_get": ["collections.defaultdict"], "models.BaseModel.fields_get_keys": ["warnings.warn", "<builtin>.list"], "models.BaseModel._rec_name_fallback": [], "models.BaseModel.user_has_groups": [], "models.BaseModel.search_count": ["<builtin>.len", "<builtin>.isinstance"], "models.BaseModel.<lambda5>": [], "api.returns": ["api.attrsetter"], "models.BaseModel.search": [], "models.BaseModel.<lambda6>": [], "models.BaseModel._compute_display_name": ["<builtin>.dict"], "models.BaseModel.name_get": [], "models.BaseModel.name_create": [], "models.BaseModel.name_search": [], "models.BaseModel._name_search": ["<builtin>.list"], "models.BaseModel._add_missing_default_values": ["fields.Command.set", "fields.Command.create", "<builtin>.list", "models.BaseModel._add_missing_default_values.avoid", "<builtin>.set", "models.BaseModel._add_missing_default_values.collect_models_to_avoid", "<builtin>.isinstance"], "models.BaseModel._add_missing_default_values.collect_models_to_avoid": ["models.BaseModel._add_missing_default_values.collect_models_to_avoid"], "models.BaseModel._add_missing_default_values.avoid": [], "models.BaseModel.clear_caches": [], "models.BaseModel._read_group_expand_full": [], "models.BaseModel._read_group_fill_results": ["models.BaseModel._read_group_fill_results.<lambda1>", "tools.reverse_order", "<builtin>.list", "collections.OrderedDict", "models.BaseModel._read_group_fill_results.<lambda2>", "<builtin>.type", "<builtin>.callable", "<builtin>.isinstance", "<builtin>.getattr", "models.lazy_name_get"], "tools.reverse_order": [], "models.lazy_name_get": [], "models.BaseModel._read_group_fill_results.<lambda1>": [], "models.BaseModel._read_group_fill_results.<lambda2>": [], "models.BaseModel._read_group_fill_temporal": ["tools.date_utils.date_range", "<builtin>.list", "collections.defaultdict", "<builtin>.max", "tools.date_utils.start_of", "odoo.fields.Datetime.to_datetime", "<builtin>.set", "pytz.timezone", "models.BaseModel.sorted"], "odoo.fields.Datetime.to_datetime": [], "models.BaseModel.sorted": ["models.BaseModel.sorted", "<builtin>.isinstance", "<builtin>.reversed", "operator.itemgetter"], "models.BaseModel._read_group_prepare": ["<builtin>.ValueError"], "models.BaseModel._read_group_process_groupby": ["<builtin>.len", "<builtin>.ValueError", "datetime.timedelta", "dateutil.relativedelta.relativedelta"], "datetime.timedelta": [], "models.BaseModel._read_group_prepare_data": ["<builtin>.isinstance", "pytz.timezone", "datetime.datetime.strptime"], "models.BaseModel._read_group_format_result": ["<builtin>.len", "tools.misc.get_lang", "osv.expression.AND"], "osv.expression.AND": ["osv.expression.combine"], "models.BaseModel._read_group": ["<builtin>.isinstance"], "models.BaseModel.read_group": ["tools.misc.OrderedSet.__init__", "<builtin>.isinstance"], "models.BaseModel._read_group_raw": ["<builtin>.len", "<builtin>.int", "models.BaseModel._read_group_raw.<lambda1>", "<builtin>.list", "exceptions.UserError.__init__", "<builtin>.ValueError", "tools.misc.OrderedSet.__init__", "<builtin>.isinstance", "models.BaseModel._read_group_raw.<lambda2>"], "models.BaseModel._read_group_raw.<lambda1>": [], "models.BaseModel._read_group_raw.<lambda2>": [], "models.BaseModel._read_group_resolve_many2x_fields": ["<builtin>.dict", "models.lazy_name_get"], "models.BaseModel._inherits_join_add": [], "models.BaseModel._inherits_join_calc": ["tools.query.Query.__init__"], "models.BaseModel._parent_store_compute": [], "models.BaseModel._check_removed_columns": ["<builtin>.tuple", "tools.drop_not_null"], "tools.drop_not_null": [], "models.BaseModel._init_column": [], "models.BaseModel._table_has_rows": [], "models.BaseModel._auto_init": ["models.raise_on_invalid_object_name", "models.BaseModel._auto_init.make_type", "tools.table_exists", "tools.column_exists", "tools.table_columns", "tools.create_column", "tools.create_model_table", "models.BaseModel.sorted"], "tools.table_exists": [], "models.BaseModel._auto_init.make_type": [], "models.BaseModel._auto_init.<lambda1>": [], "tools.create_model_table": [], "tools.column_exists": [], "tools.create_column": [], "tools.table_columns": [], "models.BaseModel._auto_init.<lambda2>": [], "models.BaseModel.init": [], "models.BaseModel._check_parent_path": [], "models.BaseModel._add_sql_constraints": ["re.compile", "tools.constraint_definition", "tools.drop_constraint"], "tools.constraint_definition": [], "tools.drop_constraint": [], "models.BaseModel._add_inherited_fields": [], "models.BaseModel._inherits_check": ["<builtin>.type", "fields.Many2one.__init__"], "models.BaseModel._prepare_setup": ["<builtin>.type", "tools.misc.discardattr"], "models.BaseModel._setup_base": ["<builtin>.len", "tools.misc.discardattr", "<builtin>.reversed", "collections.defaultdict", "<builtin>.getattr", "<builtin>.next", "<builtin>.type", "<builtin>.isinstance", "<builtin>.tuple"], "models.BaseModel._setup_fields": ["<builtin>.type"], "models.BaseModel._setup_complete": ["<builtin>.type"], "models.BaseModel.fields_get": [], "models.BaseModel.check_field_access_rights": ["<builtin>.list", "models.BaseModel.check_field_access_rights.format_groups", "exceptions.UserError.__init__", "models.BaseModel.check_field_access_rights.valid", "models.BaseModel.sorted"], "models.BaseModel.check_field_access_rights.valid": [], "models.BaseModel.check_field_access_rights.format_groups": [], "models.BaseModel.check_field_access_rights.format_groups.<lambda1>": ["<builtin>.repr"], "models.BaseModel.check_field_access_rights.format_groups.<lambda2>": [], "models.BaseModel.check_field_access_rights.format_groups.<lambda3>": ["<builtin>.repr"], "models.BaseModel.check_field_access_rights.format_groups.<lambda4>": [], "models.BaseModel.read": ["tools.misc.OrderedSet.__init__", "<builtin>.ValueError"], "models.BaseModel.update_field_translations": [], "models.BaseModel._update_field_translations": ["<builtin>.isinstance", "exceptions.UserError.__init__", "psycopg2.extras.Json", "<builtin>.any"], "models.BaseModel.get_field_translations": ["<builtin>.callable", "<builtin>.set"], "models.BaseModel._read_format": [], "models.BaseModel._fetch_field": [], "models.BaseModel._read": ["<builtin>.zip", "exceptions.UserError.__init__", "<builtin>.next", "models.BaseModel._read.qualify", "tools.query.Query.__init__"], "models.BaseModel._read.qualify": [], "models.BaseModel.get_metadata": ["collections.defaultdict"], "models.BaseModel.get_base_url": ["<builtin>.len", "<builtin>.ValueError"], "models.BaseModel._check_company": ["<builtin>.str", "exceptions.UserError.__init__", "tools.translate._lt.__init__"], "models.BaseModel.check_access_rights": [], "models.BaseModel.check_access_rule": ["exceptions.UserError.__init__"], "models.BaseModel._filter_access_rules": ["tools.query.Query.__init__", "<builtin>.set"], "models.BaseModel._filter_access_rules_python": [], "models.BaseModel.unlink": ["exceptions.UserError.__init__"], "models.BaseModel.write": ["<builtin>.any", "collections.defaultdict", "<builtin>.ValueError", "exceptions.UserError.__init__", "<builtin>.set", "models.BaseModel.sorted"], "models.BaseModel.write.<lambda1>": [], "models.BaseModel._write": ["<builtin>.dict", "psycopg2.extras.Json", "models.BaseModel.sorted"], "api.model_create_multi": ["decorator.decorate"], "models.BaseModel.<lambda7>": [], "models.BaseModel.create": ["<builtin>.all", "<builtin>.iter", "collections.defaultdict", "<builtin>.zip", "<builtin>.ValueError", "<builtin>.next", "<builtin>.set"], "models.BaseModel._prepare_create_values": ["<builtin>.any"], "models.BaseModel._add_precomputed_values": ["<builtin>.zip", "<builtin>.any", "<builtin>.set"], "models.BaseModel._create": ["<builtin>.iter", "tools.misc.split_every", "tools.misc.clean_context", "collections.defaultdict", "<builtin>.zip", "<builtin>.next", "operator.attrgetter", "<builtin>.set", "<builtin>.dict", "tools.misc.OrderedSet.__init__", "<builtin>.tuple", "models.BaseModel.sorted"], "models.BaseModel._compute_field_value": ["<builtin>.isinstance", "<builtin>.getattr", "<builtin>.any"], "models.BaseModel._parent_store_create": ["<builtin>.dict"], "models.BaseModel._parent_store_update_prepare": ["<builtin>.tuple"], "models.BaseModel._parent_store_update": ["<builtin>.dict", "<builtin>.int", "exceptions.UserError.__init__"], "models.BaseModel._load_records_write": [], "models.BaseModel._load_records_create": [], "models.BaseModel._load_records": ["<builtin>.zip", "exceptions.UserError.__init__"], "models.BaseModel._where_calc": ["osv.expression.expression", "tools.query.Query.__init__", "<builtin>.any"], "osv.expression.expression": [], "models.BaseModel._check_qorder": ["exceptions.UserError.__init__"], "models.BaseModel._apply_ir_rules": ["osv.expression.expression"], "models.BaseModel._generate_m2o_order_by": [], "models.BaseModel._generate_order_by_inner": ["<builtin>.len", "<builtin>.ValueError", "<builtin>.set"], "models.BaseModel._generate_order_by": [], "models.BaseModel._flush_search": ["models.BaseModel._flush_search.collect_from_domain", "<builtin>.list", "collections.defaultdict", "<builtin>.set"], "models.BaseModel._flush_search.collect_from_domain": ["<builtin>.isinstance", "models.BaseModel._flush_search.collect_from_path"], "models.BaseModel._flush_search.collect_from_path": ["models.BaseModel._flush_search.collect_from_path", "models.BaseModel._flush_search.collect_from_domain"], "models.BaseModel._search": ["osv.expression.is_false"], "osv.expression.is_false": ["osv.expression.normalize_domain", "<builtin>.reversed", "<builtin>.max", "<builtin>.min", "<builtin>.isinstance"], "models.BaseModel.<lambda8>": [], "models.BaseModel.copy_data": ["fields.Command.create", "models.BaseModel.copy_data.blacklist_given_fields", "collections.defaultdict", "<builtin>.set", "<builtin>.dict"], "models.BaseModel.copy_data.blacklist_given_fields": ["models.BaseModel.copy_data.blacklist_given_fields", "<builtin>.set"], "models.BaseModel.copy_translations": ["<builtin>.zip", "collections.defaultdict", "<builtin>.callable"], "models.BaseModel.<lambda9>": [], "models.BaseModel.copy": [], "models.BaseModel.exists": ["tools.misc.partition", "tools.query.Query.__init__", "<builtin>.set"], "models.BaseModel._check_recursion": [], "models.BaseModel._check_m2m_recursion": ["<builtin>.list", "collections.defaultdict", "<builtin>.ValueError", "<builtin>.set", "itertools.product"], "itertools.product": [], "models.BaseModel._get_external_ids": ["collections.defaultdict"], "models.BaseModel.get_external_id": [], "models.BaseModel.get_xml_id": ["warnings.warn"], "models.BaseModel.is_transient": [], "models.BaseModel.search_read": ["<builtin>.dict", "<builtin>.len"], "models.BaseModel.toggle_active": [], "models.BaseModel.action_archive": [], "models.BaseModel.action_archive.<lambda1>": [], "models.BaseModel.action_unarchive": [], "models.BaseModel.action_unarchive.<lambda1>": [], "models.BaseModel._register_hook": [], "models.BaseModel._unregister_hook": [], "models.BaseModel._patch_method": ["api.propagate", "<builtin>.getattr", "<builtin>.setattr"], "api.propagate": ["<builtin>.hasattr", "<builtin>.getattr", "<builtin>.setattr"], "models.BaseModel._revert_method": ["<builtin>.getattr", "<builtin>.setattr"], "models.BaseModel.__init__": [], "models.BaseModel.browse": ["<builtin>.tuple"], "models.BaseModel.ids": ["models.origin_ids", "<builtin>.list"], "models.BaseModel.<lambda10>": [], "models.BaseModel.<lambda11>": [], "models.BaseModel.<lambda12>": [], "models.BaseModel.ensure_one": ["<builtin>.ValueError"], "models.BaseModel.with_env": [], "models.BaseModel.sudo": ["<builtin>.isinstance"], "models.BaseModel.with_user": [], "models.BaseModel.with_company": ["<builtin>.int", "<builtin>.list"], "models.BaseModel.with_context": ["<builtin>.dict"], "models.BaseModel.with_prefetch": [], "models.BaseModel._update_cache": ["<builtin>.ValueError", "models.BaseModel.sorted"], "models.BaseModel._update_cache.<lambda1>": [], "models.BaseModel._update_cache.<lambda2>": [], "models.BaseModel._convert_to_record": [], "models.BaseModel._convert_to_write": ["<builtin>.isinstance"], "models.BaseModel._mapped_func": ["<builtin>.isinstance"], "models.BaseModel.mapped": ["<builtin>.isinstance"], "models.BaseModel.filtered": ["<builtin>.isinstance", "models.BaseModel.filtered.<lambda1>"], "models.BaseModel.filtered.<lambda1>": ["<builtin>.any"], "models.BaseModel.filtered_domain": ["<builtin>.len", "<builtin>.iter", "<builtin>.any", "fnmatch.filter", "fields.Datetime.to_datetime", "<builtin>.reversed", "<builtin>.ValueError", "<builtin>.next", "<builtin>.set", "<builtin>.isinstance"], "models.BaseModel.update": [], "models.BaseModel.flush": ["warnings.warn"], "models.BaseModel.flush_model": [], "models.BaseModel.flush_recordset": [], "models.BaseModel._flush": ["<builtin>.len", "<builtin>.any", "<builtin>.list", "collections.defaultdict", "<builtin>.zip", "models.BaseModel._flush.process"], "models.BaseModel._flush.process": ["collections.defaultdict"], "models.BaseModel.new": ["models.NewId"], "models.BaseModel._origin": ["models.origin_ids", "models.OriginIds.__init__", "<builtin>.tuple"], "models.BaseModel.__bool__": [], "models.BaseModel.__len__": ["<builtin>.len"], "models.BaseModel.__iter__": ["<builtin>.len"], "models.BaseModel.__reversed__": ["<builtin>.len", "tools.misc.ReversedIterable.__init__", "<builtin>.reversed"], "models.BaseModel.__contains__": ["<builtin>.len", "<builtin>.isinstance", "<builtin>.TypeError"], "models.BaseModel.__add__": [], "models.BaseModel.concat": ["<builtin>.list", "<builtin>.TypeError"], "models.BaseModel.__sub__": ["<builtin>.TypeError", "<builtin>.set"], "models.BaseModel.__and__": ["tools.misc.OrderedSet.__init__", "<builtin>.TypeError", "<builtin>.set"], "models.BaseModel.__or__": [], "models.BaseModel.union": ["tools.misc.OrderedSet.__init__", "<builtin>.list", "<builtin>.TypeError"], "models.BaseModel.__eq__": ["warnings.warn", "<builtin>.set"], "models.BaseModel.__lt__": ["<builtin>.set"], "models.BaseModel.__le__": ["<builtin>.set"], "models.BaseModel.__gt__": ["<builtin>.set"], "models.BaseModel.__ge__": ["<builtin>.set"], "models.BaseModel.__int__": [], "models.BaseModel.__repr__": [], "models.BaseModel.__hash__": ["<builtin>.hash", "<builtin>.frozenset"], "models.BaseModel.__getitem__": ["<builtin>.type", "<builtin>.isinstance"], "models.BaseModel.__setitem__": [], "models.BaseModel._cache": ["models.RecordCache.__init__"], "models.RecordCache.__init__": ["<builtin>.len"], "models.BaseModel._in_cache_without": ["models.expand_ids", "itertools.islice"], "models.BaseModel.refresh": ["warnings.warn"], "models.BaseModel.invalidate_cache": ["warnings.warn"], "models.BaseModel.invalidate_model": [], "models.BaseModel.invalidate_recordset": [], "models.BaseModel._invalidate_cache": [], "models.BaseModel.modified": ["<builtin>.list"], "models.BaseModel.modified.<lambda1>": [], "models.BaseModel._modified_triggers": ["tools.misc.OrderedSet.__init__", "models.NewId", "<builtin>.any"], "models.BaseModel.recompute": ["warnings.warn"], "models.BaseModel._recompute_model": [], "models.BaseModel._recompute_recordset": [], "models.BaseModel._recompute_field": [], "models.BaseModel._has_onchange": ["<builtin>.any"], "models.BaseModel._onchange_eval": ["models.BaseModel._onchange_eval.process"], "models.BaseModel._onchange_eval.process": [], "models.BaseModel.onchange": ["<builtin>.len", "<builtin>.map", "<builtin>.any", "models.BaseModel.onchange.Snapshot.diff", "models.BaseModel.onchange.Snapshot.__init__", "tools.misc.unique", "<builtin>.list", "models.BaseModel.onchange.PrefixTree", "<builtin>.zip", "models.BaseModel.onchange.Snapshot.has_changed", "models.BaseModel.onchange.Snapshot.fetch", "<builtin>.set", "<builtin>.dict", "<builtin>.isinstance", "itertools.chain"], "models.BaseModel.onchange.PrefixTree": ["models.BaseModel.onchange.PrefixTree", "collections.OrderedDict", "collections.defaultdict"], "models.BaseModel.onchange.Snapshot.__init__": ["<builtin>.super", "models.BaseModel.onchange.Snapshot.fetch"], "models.BaseModel.onchange.Snapshot.fetch": ["models.BaseModel.onchange.Snapshot.__init__"], "models.BaseModel.onchange.Snapshot.has_changed": ["<builtin>.len", "<builtin>.any", "<builtin>.set"], "models.BaseModel.onchange.Snapshot.diff": ["<builtin>.tuple", "models.BaseModel.onchange.Snapshot.__init__", "fields.Command.update", "fields.Command.clear", "fields.Command.link"], "models.BaseModel._get_placeholder_filename": [], "models.BaseModel._populate_factories": [], "models.BaseModel._populate_sizes": [], "models.BaseModel._populate_dependencies": [], "models.BaseModel._populate": ["tools.populate.chain_factories", "<builtin>.len", "<builtin>.next"], "collections.abc.Set.register": [], "collections.abc.Sequence.register": [], "models.RecordCache.__contains__": [], "models.RecordCache.__getitem__": [], "models.RecordCache.__setitem__": [], "models.RecordCache.__delitem__": [], "models.RecordCache.__iter__": [], "models.RecordCache.__len__": ["<builtin>.sum"], "models.TransientModel": ["api.autovacuum"], "api.autovacuum": [], "models.TransientModel._transient_vacuum": ["models.TransientModel._transient_clean_rows_older_than", "models.TransientModel._transient_clean_old_rows"], "models.TransientModel._transient_clean_rows_older_than": ["models.BaseModel.sudo", "<builtin>.max"], "models.TransientModel._transient_clean_old_rows": ["models.TransientModel._transient_clean_rows_older_than"], "models.convert_pgerror_not_null": [], "models.convert_pgerror_unique": ["<builtin>.len", "tools.ustr", "contextlib.closing"], "models.convert_pgerror_constraint": ["<builtin>.dict", "tools.ustr"], "models.<lambda1>": [], "models.<lambda1>.<lambda1>": ["tools.ustr"], "models.lazy_name_get.<lambda1>": ["<builtin>.dict"], "netsvc": ["logging.getLogger", "logging.captureWarnings", "logging.addLevelName", "<builtin>.range"], "netsvc.log": ["<builtin>.len", "pprint.pformat"], "netsvc.WatchedFileHandler.__init__": ["<builtin>.super"], "netsvc.WatchedFileHandler._open": ["<builtin>.open"], "netsvc.PostgreSQLHandler.emit": ["threading.current_thread", "logging.getLevelName", "sql_db.db_connect", "contextlib.suppress", "sql_db.Connection.cursor", "<builtin>.getattr", "tools.ustr"], "sql_db.db_connect": ["<builtin>.int", "sql_db.connection_info_for", "sql_db.ConnectionPool.__init__", "sql_db.Connection.__init__", "<builtin>.ValueError"], "sql_db.Connection.cursor": ["warnings.warn", "sql_db.Cursor.__init__"], "logging.getLevelName": [], "netsvc.PerfFilter.format_perf": [], "netsvc.PerfFilter.filter": ["threading.current_thread", "netsvc.PerfFilter.format_perf", "time.time", "<builtin>.delattr", "netsvc.ColoredPerfFilter.format_perf", "<builtin>.hasattr"], "netsvc.ColoredPerfFilter.format_perf": ["netsvc.ColoredPerfFilter.format_perf.colorize_time"], "netsvc.ColoredPerfFilter.format_perf.colorize_time": [], "netsvc.DBFormatter.format": ["logging.Formatter.format", "<builtin>.getattr", "threading.current_thread", "os.getpid"], "os.getpid": [], "logging.Formatter.format": [], "netsvc.ColoredFormatter.format": ["netsvc.ColoredFormatter.format", "netsvc.DBFormatter.format"], "netsvc.init_logger": ["sys.stderr.write", "os.path.isdir", "<builtin>.isinstance", "logging.getLogger", "logging.FileHandler", "logging.getLogRecordFactory", "platform.system", "tools.translate.resetlocale", "logging.Handler.__init__", "<builtin>.getattr", "logging.handlers.NTEventLogHandler", "<builtin>.int", "logging.Handler.setLevel", "os.path.dirname", "os.makedirs", "netsvc.init_logger.is_a_tty", "logging.Filter.__init__", "logging.Formatter.__init__", "logging.handlers.WatchedFileHandler.setFormatter", "logging.setLogRecordFactory", "warnings.filterwarnings", "warnings.simplefilter", "logging.handlers.SysLogHandler", "logging.StreamHandler", "os.environ.get", "netsvc.WatchedFileHandler.__init__"], "logging.getLogRecordFactory": [], "netsvc.init_logger.record_factory": [], "logging.setLogRecordFactory": [], "warnings.simplefilter": [], "warnings.filterwarnings": [], "logging.StreamHandler": [], "logging.handlers.NTEventLogHandler": [], "platform.system": [], "logging.handlers.SysLogHandler": [], "logging.FileHandler": [], "netsvc.init_logger.is_a_tty": ["<builtin>.hasattr", "logging.handlers.WatchedFileHandler.stream.fileno", "os.isatty"], "logging.handlers.WatchedFileHandler.stream.fileno": [], "os.isatty": [], "logging.Formatter.__init__": [], "logging.Filter.__init__": [], "logging.handlers.WatchedFileHandler.setFormatter": [], "logging.Handler.__init__": [], "logging.Handler.setLevel": [], "logging.addLevelName": [], "logging.captureWarnings": [], "netsvc.showwarning_with_traceback": ["warnings.showwarning", "traceback.format_list", "traceback.extract_stack"], "traceback.format_list": [], "warnings.showwarning": [], "netsvc.runbot": [], "conf": [], "cli.shell": ["logging.getLogger"], "cli.shell.raise_keyboard_interrupt": ["<builtin>.KeyboardInterrupt"], "<builtin>.KeyboardInterrupt": [], "cli.shell.Console.__init__": ["readline.parse_and_bind", "code.InteractiveConsole.__init__", "rlcompleter.Completer", "readline.set_completer", "<builtin>.print"], "code.InteractiveConsole.__init__": [], "rlcompleter.Completer": [], "readline.set_completer": [], "readline.parse_and_bind": [], "cli.shell.Shell.init": ["odoo.service.server.start", "signal.signal", "odoo.tools.config.parse_config", "odoo.cli.server.report_configuration"], "odoo.tools.config.parse_config": [], "odoo.cli.server.report_configuration": [], "odoo.service.server.start": [], "signal.signal": [], "cli.shell.Shell.console": ["<builtin>.sorted", "sys.stdin.fileno", "odoo.tools.config.options.get", "<builtin>.print", "<builtin>.getattr", "<builtin>.exec", "os.isatty", "sys.stdin.read"], "sys.stdin.fileno": [], "sys.stdin.read": [], "<builtin>.exec": [], "odoo.tools.config.options.get": [], "cli.shell.Shell.ipython": ["IPython.start_ipython"], "IPython.start_ipython": [], "cli.shell.Shell.ptpython": ["ptpython.repl.embed"], "ptpython.repl.embed": [], "cli.shell.Shell.bpython": ["bpython.embed"], "bpython.embed": [], "cli.shell.Shell.python": ["cli.shell.Console.__init__", "code.InteractiveConsole.interact"], "code.InteractiveConsole.interact": [], "cli.shell.Shell.shell": ["odoo.registry", "cli.shell.Shell.console", "odoo.api.Environment"], "cli.shell.Shell.run": ["cli.shell.Shell.init", "cli.shell.Shell.shell"], "cli": [], "cli.command": [], "cli.command.Command.__init_subclass__": [], "cli.command.Help.run": ["<builtin>.len", "<builtin>.sorted", "<builtin>.list", "<builtin>.max", "<builtin>.print"], "cli.command.main": ["<builtin>.len", "odoo.modules.initialize_sys_path", "odoo.tools.config._parse_config", "odoo.modules.get_module_path", "<builtin>.__import__", "sys.exit", "logging.disable", "os.path.isdir", "os.path.join", "odoo.modules.get_modules"], "odoo.tools.config._parse_config": [], "logging.disable": [], "odoo.modules.initialize_sys_path": [], "odoo.modules.get_modules": [], "sys.exit": [], "cli.server": ["logging.getLogger"], "cli.server.check_root_user": ["sys.stderr.write", "getpass.getuser"], "getpass.getuser": [], "cli.server.check_postgres_user": ["sys.exit", "sys.stderr.write", "os.environ.get"], "cli.server.report_configuration": ["os.path.isfile", "os.environ.get", "odoo.tools.config.get"], "cli.server.rm_pid_file": ["os.unlink", "os.getpid"], "cli.server.setup_pid_file": ["<builtin>.open", "<builtin>.str", "atexit.register", "os.getpid"], "atexit.register": [], "cli.server.export_translation": ["<builtin>.open", "odoo.tools.trans_export", "os.path.splitext", "odoo.modules.registry.Registry.new"], "odoo.tools.trans_export": [], "cli.server.import_translation": ["odoo.tools.translate.TranslationImporter", "odoo.modules.registry.Registry.new"], "odoo.tools.translate.TranslationImporter": [], "cli.server.main": ["odoo.service.server.start", "cli.server.check_root_user", "cli.server.export_translation", "odoo.tools.config.parse_config", "csv.field_size_limit", "sys.exit", "cli.server.report_configuration", "cli.server.setup_pid_file", "cli.server.check_postgres_user", "odoo.service.db._create_empty_database", "cli.server.import_translation"], "csv.field_size_limit": [], "odoo.service.db._create_empty_database": [], "cli.server.Server.run": ["cli.server.main"], "cli.populate": ["logging.getLogger"], "cli.populate.Populate.run": ["cli.populate.Populate.populate", "odoo.tools.config.parser.add_option_group", "odoo.registry", "odoo.tools.config.parse_config", "odoo.api.Environment", "<builtin>.set", "optparse.OptionGroup"], "odoo.tools.config.parser.add_option_group": [], "cli.populate.Populate.populate": ["<builtin>.len", "unittest.mock.patch", "time.time", "odoo.tools.profiler.Profiler", "cli.populate.Populate._get_ordered_models", "contextlib.nullcontext"], "cli.populate.Populate._get_ordered_models": ["<builtin>.all", "<builtin>.any", "cli.populate.Populate._get_ordered_models.add_model", "<builtin>.set", "fnmatch.fnmatch"], "odoo.tools.profiler.Profiler": [], "unittest.mock.patch": [], "cli.populate.Populate._get_ordered_models.add_model": ["<builtin>.ValueError", "cli.populate.Populate._get_ordered_models.add_model"], "cli.scaffold": ["jinja2.Environment"], "cli.scaffold.Scaffold.run": ["argparse.ArgumentParser", "cli.scaffold.Scaffold.epilog", "sys.exit", "cli.scaffold.snake", "cli.scaffold.template.__init__", "cli.scaffold.directory"], "cli.scaffold.Scaffold.epilog": ["os.listdir", "cli.scaffold.<lambda1>"], "argparse.ArgumentParser": [], "cli.scaffold.template.__init__": ["cli.scaffold.die", "os.path.isdir", "cli.scaffold.<lambda1>"], "cli.scaffold.snake": ["re.sub"], "cli.scaffold.directory": ["cli.scaffold.die", "os.path.exists", "os.path.expanduser", "os.path.abspath", "os.path.isdir", "os.makedirs", "os.path.expandvars"], "cli.scaffold.<lambda1>": ["os.path.join", "os.path.dirname", "os.path.abspath"], "cli.scaffold.pascal": ["re.sub"], "cli.scaffold.die": ["<builtin>.print", "sys.exit"], "jinja2.Environment": [], "cli.scaffold.template.__str__": [], "cli.scaffold.template.files": ["os.walk", "os.path.join", "<builtin>.open"], "cli.scaffold.template.render_to": ["os.path.exists", "os.path.relpath", "os.path.dirname", "os.makedirs", "os.path.join", "os.path.splitext", "cli.scaffold.template.files", "<builtin>.open"], "cli.scaffold.warn": ["<builtin>.print"], "cli.db": ["functools.partial"], "cli.db.Db.run": ["argparse.ArgumentParser", "pathlib.Path", "<builtin>.vars", "cli.server.report_configuration", "tools.config.configmanager.parse_config"], "cli.db.Db.run.<lambda1>": ["<builtin>.exit"], "<builtin>.exit": [], "cli.db.Db.load": ["service.db.restore_db", "pathlib.Path", "cli.db.Db._check_target", "io.BytesIO", "requests.get", "zipfile.is_zipfile", "<builtin>.exit"], "cli.db.Db._check_target": ["service.db.exp_db_exist", "<builtin>.exit", "service.db.exp_drop"], "zipfile.is_zipfile": [], "cli.db.Db.dump": ["<builtin>.open", "service.db.dump_db"], "cli.db.Db.duplicate": ["service.db.exp_duplicate_database", "cli.db.Db._check_target"], "cli.db.Db.rename": ["service.db.exp_rename", "cli.db.Db._check_target"], "cli.db.Db.drop": ["<builtin>.exit", "service.db.exp_drop"], "service.db.exp_db_exist": ["odoo.sql_db.db_connect"], "cli.deploy": [], "cli.deploy.Deploy.__init__": ["<builtin>.super", "requests.session"], "requests.session": [], "cli.deploy.Deploy.deploy_module": ["cli.deploy.Deploy.zip_module", "os.remove", "cli.deploy.Deploy.login_upload_module"], "cli.deploy.Deploy.zip_module": ["<builtin>.Exception", "tempfile.mktemp", "os.walk", "os.path.isdir", "os.path.abspath", "os.path.join", "os.path.split", "zipfile.ZipFile", "<builtin>.print", "os.remove"], "cli.deploy.Deploy.login_upload_module": ["<builtin>.open", "<builtin>.print", "<builtin>.Exception"], "os.remove": [], "tempfile.mktemp": [], "cli.deploy.Deploy.run": ["argparse.ArgumentParser", "<builtin>.print", "sys.exit", "cli.deploy.Deploy.deploy_module"], "cli.tsconfig": [], "cli.tsconfig.TSConfig.__init__": [], "cli.tsconfig.TSConfig.get_module_list": ["os.path.join", "glob.glob"], "cli.tsconfig.TSConfig.clean_path": ["re.sub"], "cli.tsconfig.TSConfig.prefix_suffix_path": ["cli.tsconfig.TSConfig.clean_path"], "cli.tsconfig.TSConfig.remove_": [], "cli.tsconfig.TSConfig.run": ["argparse.ArgumentParser", "<builtin>.map", "json.dumps", "<builtin>.list", "cli.tsconfig.TSConfig.generate_file_content", "cli.tsconfig.TSConfig.get_module_list", "cli.tsconfig.TSConfig.prefix_suffix_path", "<builtin>.print"], "cli.tsconfig.TSConfig.generate_file_content": ["cli.tsconfig.TSConfig.generate_excludes", "cli.tsconfig.TSConfig.generate_imports", "<builtin>.map", "<builtin>.list"], "cli.tsconfig.TSConfig.generate_imports": [], "cli.tsconfig.TSConfig.generate_file_content.<dict1>.<dict1>.<lambda1>": [], "cli.tsconfig.TSConfig.generate_excludes": [], "cli.genproxytoken": [], "cli.genproxytoken.GenProxyToken.__init__": [], "cli.genproxytoken.GenProxyToken.generate_token": ["textwrap.wrap", "<builtin>.int", "secrets.token_hex"], "secrets.token_hex": [], "textwrap.wrap": [], "cli.genproxytoken.GenProxyToken.run": ["argparse.ArgumentParser", "odoo.tools.config.save", "cli.genproxytoken.GenProxyToken.generate_token", "sys.stdout.write", "passlib.hash.pbkdf2_sha512.hash"], "passlib.hash.pbkdf2_sha512.hash": [], "odoo.tools.config.save": [], "sys.stdout.write": [], "cli.start": [], "cli.start.Start.get_module_list": ["os.path.join", "itertools.chain.from_iterable", "glob.glob"], "cli.start.Start.run": ["cli.server.main", "argparse.ArgumentParser", "cli.start.Start.run.to_remove", "odoo.modules.module.get_module_root", "os.path.expanduser", "os.defpath.split", "os.path.abspath", "cli.start.die", "os.path.join", "odoo.service.db._create_empty_database", "os.path.expandvars", "odoo.addons.__path__.split", "<builtin>.enumerate", "os.environ.get", "cli.start.Start.get_module_list"], "odoo.modules.module.get_module_root": [], "cli.start.die": ["<builtin>.print", "sys.exit"], "cli.start.Start.run.to_remove": [], "cli.neutralize": ["logging.getLogger"], "cli.neutralize.Neutralize.run": ["odoo.modules.neutralize.get_installed_modules", "odoo.tools.config.parser.add_option_group", "odoo.sql_db.db_connect", "odoo.modules.neutralize.get_neutralization_queries", "odoo.tools.config.parse_config", "sys.exit", "<builtin>.print", "optparse.OptionGroup"], "odoo.modules.neutralize.get_installed_modules": [], "odoo.modules.neutralize.get_neutralization_queries": [], "cli.cloc": [], "cli.cloc.Cloc.run": ["argparse.ArgumentParser", "odoo.tools.cloc.Cloc", "textwrap.dedent", "sys.exit", "odoo.tools.config.parse_config"], "textwrap.dedent": [], "odoo.tools.cloc.Cloc": [], "sql_db": ["logging.getLogger", "re.compile", "psycopg2.extensions.new_type", "psycopg2.extensions.register_type"], "psycopg2.extensions.register_type": [], "sql_db.undecimalize": ["<builtin>.float"], "psycopg2.extensions.new_type": [], "sql_db.Savepoint.__init__": ["psycopg2.sql.Identifier", "<builtin>.str", "uuid.uuid1", "psycopg2.sql.SQL", "sql_db.Cursor.execute"], "uuid.uuid1": [], "sql_db.Cursor.execute": ["threading.current_thread", "<builtin>.ValueError", "sql_db.Cursor._format", "<builtin>.isinstance", "<builtin>.hasattr", "<builtin>.getattr", "tools.ustr"], "sql_db.Savepoint.__enter__": [], "sql_db.Savepoint.__exit__": ["sql_db.Savepoint.close"], "sql_db.Savepoint.close": ["sql_db._FlushingSavepoint._close", "sql_db.Savepoint._close"], "sql_db._FlushingSavepoint._close": ["<builtin>.super", "sql_db.BaseCursor.flush"], "sql_db.Savepoint._close": ["sql_db._FlushingSavepoint.rollback", "psycopg2.sql.SQL", "sql_db.Savepoint.rollback", "sql_db.Cursor.execute"], "sql_db.Savepoint.rollback": ["psycopg2.sql.SQL", "sql_db.Cursor.execute"], "sql_db._FlushingSavepoint.rollback": ["sql_db.BaseCursor.clear", "<builtin>.super"], "sql_db._FlushingSavepoint.__init__": ["<builtin>.super", "sql_db.BaseCursor.flush"], "sql_db.BaseCursor.flush": ["tools.misc.Callbacks.run"], "sql_db.BaseCursor.clear": ["tools.misc.Callbacks.clear"], "sql_db.BaseCursor.__init__": [], "sql_db.BaseCursor.reset": [], "sql_db.BaseCursor.savepoint": ["sql_db.Savepoint.__init__", "sql_db._FlushingSavepoint.__init__"], "sql_db.BaseCursor.__enter__": [], "sql_db.BaseCursor.__exit__": ["sql_db.Cursor.commit", "sql_db.Cursor.close"], "sql_db.Cursor.commit": ["sql_db.BaseCursor.clear", "tools.misc.Callbacks.run", "sql_db.BaseCursor.flush", "tools.misc.Callbacks.clear"], "sql_db.Cursor.close": ["sql_db.Cursor._close"], "sql_db.Cursor.__init__": ["inspect.currentframe", "<builtin>.super", "warnings.warn", "sql_db.ConnectionPool.borrow", "tools.func.frame_codeinfo"], "sql_db.ConnectionPool.borrow": ["tools.reverse_enumerate", "<builtin>.len", "psycopg2.connect", "sql_db.ConnectionPool._debug", "<builtin>.enumerate", "<builtin>.delattr", "<builtin>.getattr"], "sql_db.Cursor.__build_dict": ["<builtin>.enumerate"], "sql_db.Cursor.dictfetchone": ["sql_db.Cursor.__build_dict"], "sql_db.Cursor.dictfetchmany": ["sql_db.Cursor.__build_dict"], "sql_db.Cursor.dictfetchall": ["sql_db.Cursor.__build_dict"], "sql_db.Cursor.__del__": ["sql_db.Cursor._close"], "sql_db.Cursor._close": ["sql_db.ConnectionPool.give_back", "sql_db.Cursor.rollback", "sql_db.Cursor.print_log"], "sql_db.Cursor._format": [], "sql_db.Cursor.split_for_in_conditions": ["tools.misc.split_every", "odoo.tools.misc.split_every"], "odoo.tools.misc.split_every": [], "sql_db.Cursor.print_log": ["sql_db.Cursor.print_log.process"], "sql_db.Cursor.print_log.process": ["datetime.timedelta", "<builtin>.sorted"], "sql_db.Cursor.print_log.process.<lambda1>": [], "sql_db.Cursor": ["contextlib.contextmanager"], "sql_db.Cursor._enable_logging": [], "sql_db.Cursor.rollback": ["sql_db.BaseCursor.clear", "tools.misc.Callbacks.run", "tools.misc.Callbacks.clear"], "sql_db.ConnectionPool.give_back": ["sql_db.ConnectionPool._debug", "<builtin>.enumerate"], "sql_db.Cursor.autocommit": ["warnings.warn"], "sql_db.Cursor.__getattr__": ["psycopg2.InterfaceError", "<builtin>.getattr"], "psycopg2.InterfaceError": [], "sql_db.Cursor.closed": [], "sql_db.Cursor.now": ["sql_db.Cursor.execute"], "sql_db.TestCursor.__init__": ["<builtin>.super"], "sql_db.TestCursor.execute": [], "sql_db.TestCursor.close": ["sql_db.TestCursor.rollback"], "sql_db.TestCursor.rollback": ["sql_db.BaseCursor.clear", "tools.misc.Callbacks.run", "tools.misc.Callbacks.clear"], "sql_db.TestCursor.autocommit": ["warnings.warn"], "sql_db.TestCursor.commit": ["sql_db.BaseCursor.clear", "sql_db.BaseCursor.flush", "tools.misc.Callbacks.clear"], "sql_db.TestCursor.__getattr__": ["<builtin>.getattr"], "sql_db.TestCursor.now": ["datetime.datetime.now"], "sql_db.PsycoConnection.lobject": [], "sql_db.ConnectionPool.__init__": ["threading.Lock", "<builtin>.max"], "threading.Lock": [], "sql_db.ConnectionPool.__repr__": ["<builtin>.len"], "sql_db.ConnectionPool._debug": [], "sql_db.ConnectionPool": ["tools.func.synchronized.locked"], "tools.reverse_enumerate": [], "psycopg2.connect": [], "sql_db.ConnectionPool.close_all": ["tools.reverse_enumerate"], "sql_db.Connection.__init__": [], "sql_db.Connection.serialized_cursor": ["warnings.warn", "sql_db.Connection.cursor"], "sql_db.Connection.__bool__": ["<builtin>.NotImplementedError"], "sql_db.connection_info_for": ["werkzeug.urls.url_parse", "<builtin>.len", "os.getpid"], "sql_db.close_db": ["sql_db.connection_info_for"], "sql_db.close_all": [], "upgrade": ["pkgutil.extend_path"], "pkgutil.extend_path": [], "api": ["logging.getLogger", "<builtin>.object"], "api.Params.__init__": [], "api.Params.__str__": ["<builtin>.repr", "<builtin>.sorted"], "api.Meta.__new__": ["<builtin>.callable", "api.propagate", "<builtin>.getattr", "<builtin>.list"], "api.attrsetter": [], "api.ondelete": ["api.attrsetter"], "api.onchange": ["api.attrsetter"], "api.depends_context": ["api.attrsetter"], "api.downgrade": ["inspect.signature", "<builtin>.len", "<builtin>.getattr"], "api.split_context": [], "api.model_create_single": ["decorator.decorate"], "api._model_create_single": ["<builtin>.len", "<builtin>.isinstance"], "decorator.decorate": [], "api._model_create_multi": ["<builtin>.isinstance"], "api._call_kw_model": ["api.downgrade", "api.split_context", "api.Params.__init__"], "api._call_kw_model_create": ["<builtin>.isinstance", "api.split_context", "api.Params.__init__"], "api._call_kw_multi": ["api.downgrade", "api.split_context", "api.Params.__init__"], "api.call_kw": ["api._call_kw_model", "api._call_kw_multi", "api._call_kw_model_create", "<builtin>.type", "<builtin>.getattr"], "api.Environment": ["tools.func.lazy_property", "tools.func.classproperty", "contextlib.contextmanager"], "api.Environment.envs": ["<builtin>.NotImplementedError"], "api.Environment.manage": ["warnings.warn"], "api.Environment.reset": ["collections.abc.Mapping.transaction.reset"], "collections.abc.Mapping.transaction.reset": [], "api.Environment.__new__": ["odoo.modules.registry.Registry", "api.Transaction.__init__"], "odoo.modules.registry.Registry": [], "api.Transaction.__init__": ["tools.misc.StackMap.__init__", "weakref.WeakSet", "api.Cache.__init__", "collections.defaultdict"], "api.Environment.__contains__": [], "api.Environment.__getitem__": [], "api.Environment.__iter__": ["<builtin>.iter"], "api.Environment.__len__": ["<builtin>.len"], "api.Environment.__eq__": [], "api.Environment.__ne__": [], "api.Environment.__hash__": [], "api.Environment.__call__": ["<builtin>.int", "collections.abc.Mapping.__init__"], "api.Environment.is_superuser": [], "api.Environment.is_admin": [], "api.Environment.is_system": [], "api.Environment.user": ["collections.abc.Mapping.__init__"], "api.Environment.company": ["exceptions.UserError.__init__", "collections.abc.Mapping.context.get", "<builtin>.set"], "collections.abc.Mapping.context.get": [], "api.Environment.companies": ["exceptions.UserError.__init__", "collections.abc.Mapping.context.get", "<builtin>.set"], "api.Environment.lang": ["collections.abc.Mapping.context.get"], "api.Environment.clear": ["collections.abc.Mapping.transaction.clear", "tools.func.lazy_property.reset_all"], "collections.abc.Mapping.transaction.clear": [], "api.Environment.clear_upon_failure": ["warnings.warn", "collections.abc.Mapping.cr.savepoint"], "collections.abc.Mapping.cr.savepoint": [], "api.Environment.invalidate_all": ["collections.abc.Mapping.cache.invalidate", "api.Environment.flush_all"], "collections.abc.Mapping.cache.invalidate": [], "api.Environment._recompute_all": ["api.Environment.fields_to_compute", "<builtin>.list"], "api.Environment.fields_to_compute": ["collections.abc.Mapping.all.tocompute.keys"], "collections.abc.Mapping.cache.get_dirty_fields": [], "api.Environment.is_protected": ["collections.abc.Mapping._protected.get"], "collections.abc.Mapping._protected.get": [], "api.Environment.protected": ["collections.abc.Mapping._protected.get"], "api.Environment.protecting": ["collections.abc.Mapping._protected.pushmap", "collections.abc.Mapping._protected.popmap", "collections.defaultdict", "<builtin>.frozenset", "collections.abc.Mapping._protected.get"], "collections.abc.Mapping._protected.pushmap": [], "collections.abc.Mapping._protected.popmap": [], "collections.abc.Mapping.all.tocompute.keys": [], "api.Environment.records_to_compute": ["collections.abc.Mapping.all.tocompute.get"], "collections.abc.Mapping.all.tocompute.get": [], "api.Environment.is_to_compute": ["collections.abc.Mapping.all.tocompute.get"], "api.Environment.not_to_compute": ["collections.abc.Mapping.all.tocompute.get"], "api.Environment.add_to_compute": [], "api.Environment.remove_to_compute": ["collections.abc.Mapping.all.tocompute.get"], "api.Environment.norecompute": [], "api.Environment.cache_key": ["api.Environment.cache_key.get", "<builtin>.tuple"], "api.Environment.cache_key.get": ["<builtin>.type", "<builtin>.hash", "<builtin>.tuple", "<builtin>.TypeError"], "weakref.WeakSet": [], "api.Cache.__init__": ["collections.defaultdict"], "api.Transaction.flush": ["<builtin>.isinstance"], "api.Transaction.clear": ["api.Cache.clear"], "api.Cache.clear": [], "api.Transaction.reset": ["api.Transaction.clear", "odoo.modules.registry.Registry", "tools.func.lazy_property.reset_all"], "api.Cache.__repr__": ["<builtin>.iter", "<builtin>.repr", "<builtin>.sorted", "<builtin>.next", "api.Starred.__init__", "<builtin>.isinstance"], "api.Cache.__repr__.<lambda1>": ["<builtin>.str"], "api.Starred.__init__": [], "api.Cache._get_field_cache": [], "api.Cache._set_field_cache": [], "api.Cache.contains": ["api.Cache._get_field_cache"], "api.Cache.contains_field": ["<builtin>.iter", "<builtin>.isinstance", "<builtin>.next", "<builtin>.any"], "api.Cache.get": ["exceptions.CacheMiss.__init__", "api.Cache._get_field_cache"], "api.Cache.set": ["api.Cache._set_field_cache"], "api.Cache.update": ["<builtin>.zip", "api.Cache.update_raw", "api.Cache._get_field_cache"], "api.Cache.update_raw": ["api.Cache._set_field_cache", "<builtin>.zip", "<builtin>.all"], "api.Cache.insert_missing": ["api.Cache._set_field_cache", "<builtin>.zip"], "api.Cache.remove": ["api.Cache._set_field_cache"], "api.Cache.get_values": ["api.Cache._get_field_cache"], "api.Cache.get_until_miss": ["api.Cache.get_until_miss.get_value", "api.Cache._get_field_cache"], "api.Cache.get_until_miss.get_value": [], "api.Cache.get_records_different_from": ["api.Cache.get_records_different_from.get_value", "api.Cache._get_field_cache"], "api.Cache.get_records_different_from.get_value": [], "api.Cache.get_fields": ["api.Cache._get_field_cache"], "api.Cache.get_records": ["api.Cache._get_field_cache"], "api.Cache.get_missing_ids": ["api.Cache._get_field_cache"], "api.Cache.get_dirty_fields": [], "api.Cache.get_dirty_records": [], "api.Cache.has_dirty_fields": ["<builtin>.any"], "api.Cache.clear_dirty_field": [], "api.Cache.invalidate": ["<builtin>.iter", "<builtin>.isinstance", "<builtin>.next"], "api.Cache.check": ["<builtin>.zip", "api.Cache.check.process", "pprint.pformat", "<builtin>.dict", "<builtin>.callable"], "api.Cache.check.process": ["tools.query.Query.__init__"], "api.Starred.__repr__": [], "osv.expression": ["logging.getLogger"], "osv.expression.normalize_domain": ["<builtin>.isinstance", "<builtin>.tuple"], "osv.expression.combine": ["osv.expression.normalize_domain"], "osv.expression.OR": ["osv.expression.combine"], "osv.expression.distribute_not": ["osv.expression.is_leaf"], "osv.expression.is_leaf": ["<builtin>.len", "<builtin>.isinstance", "<builtin>.tuple"], "osv.expression._quote": [], "osv.expression.normalize_leaf": ["<builtin>.isinstance", "osv.expression.is_leaf"], "osv.expression.is_operator": ["<builtin>.isinstance"], "osv.expression.is_boolean": [], "osv.expression.check_leaf": ["osv.expression.is_leaf", "osv.expression.is_operator", "<builtin>.str", "<builtin>.ValueError"], "osv.expression._unaccent_wrapper": ["<builtin>.isinstance", "psycopg2.sql.SQL"], "osv.expression.get_unaccent_wrapper": [], "osv.expression.get_unaccent_wrapper.<lambda1>": [], "osv.expression.expression.__init__": ["odoo.tools.Query", "osv.expression.normalize_domain", "osv.expression.expression.parse", "osv.expression.get_unaccent_wrapper", "osv.expression.distribute_not"], "odoo.tools.Query": [], "osv.expression.expression.parse": ["datetime.datetime.combine", "<builtin>.all", "odoo.tools.sql.pattern_to_translated_trigram_pattern", "osv.expression.expression.parse.to_ids", "odoo.tools._generate_table_alias", "<builtin>.list", "osv.expression.get_unaccent_wrapper.<lambda1>", "osv.expression._unaccent_wrapper", "<builtin>.isinstance", "<builtin>.len", "traceback.format_stack", "osv.expression.is_operator", "osv.expression.is_boolean", "reprlib.repr", "osv.expression.expression._unaccent", "<builtin>.getattr", "osv.expression.expression.parse.pop", "odoo.tools.sql.value_to_translated_trigram_pattern", "osv.expression.normalize_domain", "osv.expression.expression.__leaf_to_sql", "osv.expression.expression.parse.push_result", "<builtin>.NotImplementedError", "osv.expression.expression._unaccent.<lambda1>", "osv.expression.expression.parse.push", "osv.expression.expression.parse.pop_result", "<builtin>.str", "<builtin>.ValueError", "<builtin>.tuple"], "osv.expression.expression._unaccent": ["<builtin>.getattr"], "osv.expression.expression._unaccent.<lambda1>": [], "osv.expression.expression.get_tables": ["warnings.warn"], "osv.expression.expression.parse.to_ids": ["<builtin>.all", "<builtin>.isinstance", "<builtin>.list"], "osv.expression.expression.parse.child_of_domain": ["osv.expression.OR", "<builtin>.list", "<builtin>.set"], "osv.expression.expression.parse.parent_of_domain": ["<builtin>.int", "<builtin>.list", "<builtin>.set"], "osv.expression.expression.parse.pop": [], "osv.expression.expression.parse.push": ["osv.expression.normalize_leaf", "osv.expression.check_leaf"], "osv.expression.expression.parse.pop_result": [], "osv.expression.expression.parse.push_result": [], "osv.expression.expression.__leaf_to_sql": ["<builtin>.len", "odoo.tools.pycompat.to_text", "osv.expression._quote", "osv.expression.expression.__leaf_to_sql", "<builtin>.list", "<builtin>.ValueError", "<builtin>.isinstance", "osv.expression.expression._unaccent", "<builtin>.tuple"], "traceback.format_stack": [], "osv.expression.expression.parse.<lambda1>": [], "osv.expression.expression.parse.<lambda2>": [], "odoo.tools._generate_table_alias": [], "reprlib.repr": [], "odoo.tools.sql.value_to_translated_trigram_pattern": [], "odoo.tools.sql.pattern_to_translated_trigram_pattern": [], "osv.expression.expression.parse.<lambda3>": [], "osv.expression.expression.__leaf_to_sql.<lambda1>": [], "odoo.tools.pycompat.to_text": [], "osv.expression.expression.to_sql": ["warnings.warn"], "osv.osv": [], "osv": [], "service.model": ["logging.getLogger"], "service.model.dispatch": ["<builtin>.int", "threading.current_thread", "<builtin>.NameError", "odoo.registry", "service.model.execute_kw", "service.security.check", "service.model.execute"], "service.security.check": ["odoo.registry"], "service.model.execute": ["odoo.registry", "service.model.execute_cr", "odoo.models.check_method_name"], "service.model.execute_kw": ["service.model.execute"], "service.model.execute_cr": ["service.model._traverse_containers", "service.model.retrying", "odoo.api.Environment", "odoo.exceptions.UserError", "odoo.tools.translate._", "functools.partial"], "service.model._traverse_containers": ["<builtin>.isinstance", "service.model._traverse_containers"], "odoo.models.check_method_name": [], "service.model._as_validation_error": ["odoo.exceptions.ValidationError", "odoo.tools.translate.translate_sql_constraint", "odoo.tools.translate._"], "odoo.exceptions.ValidationError": [], "odoo.tools.translate.translate_sql_constraint": [], "odoo.http.request._get_session_and_dbname": [], "psycopg2.errorcodes.lookup": [], "random.uniform": [], "service": [], "service.server": ["logging.getLogger"], "service.server.<lambda1>": [], "service.server.memory_info": ["<builtin>.getattr", "platform.system"], "service.server.set_limit_memory_hard": ["resource.setrlimit", "platform.system", "resource.getrlimit"], "resource.getrlimit": [], "resource.setrlimit": [], "service.server.empty_pipe": ["os.read"], "os.read": [], "service.server.LoggingBaseWSGIServerMixIn.handle_error": ["sys.exc_info"], "sys.exc_info": [], "service.server.BaseWSGIServerNoBind.__init__": [], "service.server.BaseWSGIServerNoBind.server_activate": [], "service.server.RequestHandler.setup": ["<builtin>.super", "threading.current_thread"], "service.server.RequestHandler.make_environ": ["<builtin>.super"], "service.server.RequestHandler.send_header": ["<builtin>.super"], "service.server.ThreadedWSGIServerReloadable.__init__": ["<builtin>.super", "<builtin>.int", "os.environ.get", "threading.Semaphore"], "threading.Semaphore": [], "service.server.ThreadedWSGIServerReloadable.server_bind": ["<builtin>.super", "<builtin>.str", "os.environ.get", "os.getpid"], "service.server.ThreadedWSGIServerReloadable.server_activate": ["<builtin>.super"], "service.server.ThreadedWSGIServerReloadable.process_request": ["time.time", "threading.Thread"], "service.server.ThreadedWSGIServerReloadable._handle_request_noblock": ["<builtin>.super"], "service.server.ThreadedWSGIServerReloadable.shutdown_request": ["<builtin>.super"], "service.server.FSWatcherBase.handle_file": ["<builtin>.compile", "os.path.basename", "<builtin>.open", "service.server.restart", "<builtin>.getattr"], "service.server.restart": ["os.kill", "threading.Thread"], "service.server.FSWatcherWatchdog.__init__": ["watchdog.observers.Observer"], "watchdog.observers.Observer": [], "service.server.FSWatcherWatchdog.dispatch": ["<builtin>.isinstance", "<builtin>.getattr", "service.server.FSWatcherBase.handle_file"], "service.server.FSWatcherWatchdog.start": [], "service.server.FSWatcherWatchdog.stop": [], "service.server.FSWatcherInotify.__init__": ["inotify.adapters.InotifyTrees", "inotify.adapters._LOGGER.setLevel"], "inotify.adapters._LOGGER.setLevel": [], "inotify.adapters.InotifyTrees": [], "service.server.FSWatcherInotify.run": ["os.walk", "os.path.join", "service.server.FSWatcherBase.handle_file", "<builtin>.set"], "service.server.FSWatcherInotify.start": ["threading.Thread"], "service.server.FSWatcherInotify.stop": [], "service.server.CommonServer.__init__": ["os.getpid"], "service.server.CommonServer.close_socket": ["platform.system"], "service.server.CommonServer.on_stop": [], "service.server.CommonServer.stop": ["<builtin>.type"], "service.server.ThreadedServer.__init__": ["<builtin>.super", "threading.current_thread", "<builtin>.set"], "service.server.ThreadedServer.signal_handler": ["<builtin>.KeyboardInterrupt", "sys.stderr.flush", "sys.stderr.write", "os._exit", "<builtin>.hasattr"], "os._exit": [], "sys.stderr.flush": [], "service.server.ThreadedServer.process_limit": ["threading.current_thread", "time.time", "<builtin>.list", "threading.enumerate", "service.server.memory_info", "psutil.Process", "<builtin>.getattr", "os.getpid"], "psutil.Process": [], "service.server.ThreadedServer.cron_thread": ["time.sleep", "select.select", "threading.current_thread", "odoo.sql_db.db_connect", "time.time", "odoo.modules.registry.Registry.registries.d.items", "odoo.addons.base.models.ir_cron.ir_cron._process_jobs"], "select.select": [], "odoo.addons.base.models.ir_cron.ir_cron._process_jobs": [], "service.server.ThreadedServer.cron_spawn": ["threading.Thread", "datetime.datetime.strptime", "<builtin>.range"], "service.server.ThreadedServer.cron_spawn.target": ["service.server.ThreadedServer.cron_thread"], "service.server.ThreadedServer.http_thread": ["service.server.ThreadedWSGIServerReloadable.__init__"], "service.server.ThreadedServer.http_spawn": ["threading.Thread"], "service.server.ThreadedServer.start": ["service.server.set_limit_memory_hard", "win32api.SetConsoleCtrlHandler", "signal.signal", "service.server.ThreadedServer.http_spawn"], "service.server.ThreadedServer.start.<lambda1>": ["service.server.ThreadedServer.signal_handler"], "win32api.SetConsoleCtrlHandler": [], "service.server.ThreadedServer.stop": ["time.sleep", "threading.current_thread", "<builtin>.super", "time.time", "logging.shutdown", "odoo.sql_db.close_all", "threading.enumerate", "<builtin>.getattr"], "odoo.sql_db.close_all": [], "logging.shutdown": [], "service.server.ThreadedServer.run": ["time.sleep", "service.server.ThreadedServer.process_limit", "<builtin>.any", "service.server.ThreadedServer.cron_spawn", "time.time", "odoo.modules.registry.Registry.registries.d.items", "service.server.preload_registries", "threading.enumerate", "odoo.tools.dumpstacks", "service.server.ThreadedServer.stop", "service.server.ThreadedServer.reload", "<builtin>.getattr", "service.server.ThreadedServer.start"], "service.server.preload_registries": ["service.server.load_test_file_py", "time.time", "<builtin>.sorted", "odoo.api.Environment", "os.path.isfile", "tests.loader.run_suite", "tests.loader.make_suite", "odoo.modules.registry.Registry.new"], "odoo.tools.dumpstacks": [], "service.server.ThreadedServer.reload": ["os.kill"], "os.kill": [], "service.server.GeventServer.__init__": ["<builtin>.super"], "service.server.GeventServer.process_limits": ["os.kill", "service.server.memory_info", "psutil.Process", "os.getppid"], "service.server.GeventServer.watchdog": ["gevent.sleep", "service.server.GeventServer.process_limits", "os.getppid"], "gevent.sleep": [], "service.server.GeventServer.start": ["logging.getLogger", "signal.signal", "gevent.spawn", "service.server.set_limit_memory_hard", "gevent.pywsgi.WSGIServer", "gevent.wsgi.WSGIServer"], "service.server.GeventServer.start.ProxyHandler._connection_upgrade_requested": ["gevent.pywsgi.WSGIHandler.headers.get"], "gevent.pywsgi.WSGIHandler.headers.get": [], "service.server.GeventServer.start.ProxyHandler.format_request": ["<builtin>.super", "<builtin>.getattr"], "service.server.GeventServer.start.ProxyHandler.finalize_headers": ["<builtin>.super"], "service.server.GeventServer.start.ProxyHandler.get_environ": ["<builtin>.super", "service.server.GeventServer.start.ProxyHandler._connection_upgrade_requested"], "gevent.spawn": [], "gevent.wsgi.WSGIServer": [], "gevent.pywsgi.WSGIServer": [], "service.server.GeventServer.stop": ["<builtin>.super", "gevent.shutdown"], "gevent.shutdown": [], "service.server.GeventServer.run": ["service.server.GeventServer.start", "service.server.GeventServer.stop"], "service.server.PreforkServer.__init__": ["<builtin>.super"], "service.server.PreforkServer.pipe_new": ["os.pipe", "fcntl.fcntl"], "os.pipe": [], "fcntl.fcntl": [], "service.server.PreforkServer.pipe_ping": ["os.write"], "service.server.PreforkServer.signal_handler": ["<builtin>.len", "service.server.PreforkServer.pipe_ping"], "service.server.PreforkServer.worker_spawn": ["service.server.WorkerHTTP.__init__", "sys.exit", "os.fork", "service.server.WorkerCron.__init__"], "service.server.WorkerCron.__init__": ["<builtin>.super"], "service.server.WorkerHTTP.__init__": ["<builtin>.super", "os.environ.get", "<builtin>.float"], "os.fork": [], "service.server.PreforkServer.long_polling_spawn": ["subprocess.Popen", "odoo.tools.stripped_sys_argv"], "odoo.tools.stripped_sys_argv": [], "service.server.PreforkServer.worker_pop": [], "service.server.PreforkServer.worker_kill": ["service.server.PreforkServer.worker_pop", "os.kill"], "service.server.PreforkServer.process_signals": ["<builtin>.len", "odoo.tools.log_ormcache_stats", "odoo.tools.dumpstacks"], "odoo.tools.log_ormcache_stats": [], "service.server.PreforkServer.process_zombie": ["service.server.PreforkServer.worker_pop", "<builtin>.Exception", "os.waitpid"], "os.waitpid": [], "service.server.PreforkServer.process_timeout": ["service.server.PreforkServer.worker_kill", "time.time"], "service.server.PreforkServer.process_spawn": ["<builtin>.len", "service.server.PreforkServer.worker_spawn", "service.server.PreforkServer.long_polling_spawn"], "service.server.PreforkServer.sleep": ["service.server.empty_pipe", "select.select", "time.time", "<builtin>.list"], "service.server.PreforkServer.start": ["signal.signal", "service.server.PreforkServer.pipe_new"], "service.server.PreforkServer.stop": ["service.server.PreforkServer.process_signals", "time.sleep", "<builtin>.super", "time.time", "service.server.PreforkServer.process_zombie", "service.server.PreforkServer.worker_kill"], "service.server.PreforkServer.run": ["service.server.PreforkServer.process_signals", "service.server.PreforkServer.stop", "service.server.preload_registries", "odoo.sql_db.close_all", "service.server.PreforkServer.sleep", "service.server.PreforkServer.process_zombie", "service.server.PreforkServer.start", "service.server.PreforkServer.process_timeout", "service.server.PreforkServer.process_spawn"], "service.server.Worker.__init__": ["time.time", "os.getpid"], "service.server.Worker.setproctitle": ["service.server.Worker.setproctitle"], "service.server.Worker.close": ["os.close"], "service.server.Worker.signal_handler": [], "service.server.Worker.signal_time_expired_handler": ["<builtin>.Exception"], "service.server.Worker.sleep": ["select.select", "service.server.empty_pipe"], "service.server.Worker.check_limits": ["<builtin>.int", "os.getppid", "service.server.set_limit_memory_hard", "resource.setrlimit", "service.server.memory_info", "psutil.Process", "resource.getrlimit", "resource.getrusage", "os.getpid"], "resource.getrusage": [], "service.server.Worker.process_work": [], "service.server.Worker.start": ["signal.signal", "random.seed", "fcntl.fcntl", "service.server.Worker.setproctitle", "signal.set_wakeup_fd", "os.getpid"], "random.seed": [], "signal.set_wakeup_fd": [], "service.server.Worker.stop": [], "service.server.Worker.run": ["<builtin>.len", "service.server.WorkerCron.start", "service.server.WorkerCron.stop", "service.server.Worker.start", "sys.exit", "service.server.Worker.stop", "threading.Thread", "service.server.WorkerHTTP.start"], "service.server.WorkerHTTP.start": ["service.server.WorkerHTTP.start", "service.server.Worker.start", "service.server.BaseWSGIServerNoBind.__init__", "service.server.WorkerCron.start"], "service.server.WorkerCron.start": ["service.server.WorkerCron.start", "odoo.sql_db.db_connect", "service.server.Worker.start", "os.nice", "service.server.WorkerHTTP.start"], "service.server.WorkerCron.stop": ["<builtin>.super"], "service.server.Worker._runloop": ["service.server.WorkerCron.sleep", "service.server.WorkerCron.process_work", "service.server.Worker.process_work", "sys.exit", "service.server.Worker.sleep", "service.server.WorkerHTTP.process_work", "signal.pthread_sigmask", "service.server.Worker.check_limits"], "signal.pthread_sigmask": [], "service.server.WorkerCron.sleep": ["time.sleep", "select.select", "service.server.empty_pipe"], "service.server.WorkerHTTP.process_work": ["service.server.WorkerHTTP.process_request"], "service.server.WorkerCron.process_work": ["<builtin>.len", "service.server.WorkerCron._db_list", "odoo.sql_db.close_db", "odoo.addons.base.models.ir_cron.ir_cron._process_jobs", "service.server.Worker.setproctitle"], "service.server.WorkerHTTP.process_request": ["service.server.ThreadedWSGIServerReloadable.process_request", "fcntl.fcntl"], "service.server.WorkerCron._db_list": ["odoo.service.db.list_dbs"], "odoo.sql_db.close_db": [], "os.nice": [], "service.server.load_server_wide_modules": ["odoo.modules.module.load_openerp_module", "<builtin>.set"], "odoo.modules.module.load_openerp_module": [], "service.server._reexec": ["odoo.tools.stripped_sys_argv", "odoo.tools.osutil.is_running_as_nt_service", "os.execve", "os.path.basename", "subprocess.call"], "odoo.tools.osutil.is_running_as_nt_service": [], "os.execve": [], "service.server.load_test_file_py": ["unittest.TestLoader", "tests.loader.unwrap_suite", "threading.current_thread", "odoo.tests.suite.OdooSuite", "odoo.tools.config._normalize", "os.path.abspath", "os.path.splitext", "<builtin>.getattr", "odoo.modules.get_modules", "tests.loader.get_test_modules"], "tests.loader.get_test_modules": [], "odoo.tools.config._normalize": [], "unittest.TestLoader": [], "tests.loader.unwrap_suite": [], "odoo.tests.suite.OdooSuite": [], "tests.loader.make_suite": [], "tests.loader.run_suite": [], "service.server.start": ["service.server.PreforkServer.__init__", "service.server.FSWatcherInotify.__init__", "service.server.load_server_wide_modules", "service.server.FSWatcherInotify.start", "platform.system", "<builtin>.getattr", "service.server._reexec", "werkzeug.debug.DebuggedApplication", "service.server.ThreadedServer.__init__", "service.server.ThreadedServer.run", "service.server.FSWatcherWatchdog.__init__", "ctypes.c_int", "service.server.GeventServer.__init__", "service.server.FSWatcherInotify.stop", "service.server.FSWatcherWatchdog.stop", "service.server.GeventServer.run", "service.server.PreforkServer.run", "ctypes.CDLL", "service.server.FSWatcherWatchdog.start"], "ctypes.CDLL": [], "ctypes.c_int": [], "werkzeug.debug.DebuggedApplication": [], "service.common": ["logging.getLogger"], "service.common.exp_login": ["service.common.exp_authenticate"], "service.common.exp_authenticate": [], "service.common.exp_version": [], "service.common.exp_about": ["odoo.tools.translate._"], "service.common.exp_set_loglevel": [], "service.common.dispatch": ["<builtin>.Exception", "<builtin>.globals"], "<builtin>.globals": [], "service.db": ["logging.getLogger", "odoo.tools.mute_logger", "service.db.check_db_management_enabled"], "service.db.check_db_management_enabled": ["decorator.decorator"], "service.db.check_db_management_enabled.if_db_mgt_enabled": ["odoo.exceptions.AccessDenied"], "odoo.exceptions.AccessDenied": [], "service.db.check_super": ["odoo.exceptions.AccessDenied", "odoo.tools.config.verify_admin_password"], "odoo.tools.config.verify_admin_password": [], "service.db._initialize_db": ["<builtin>.len", "pytz.country_timezones.get", "odoo.sql_db.db_connect", "odoo.tools.email_split", "odoo.api.Environment", "contextlib.closing", "odoo.modules.db.initialize", "odoo.modules.registry.Registry.new"], "pytz.country_timezones.get": [], "odoo.tools.email_split": [], "service.db._create_empty_database": ["odoo.sql_db.db_connect", "psycopg2.sql.SQL", "psycopg2.sql.Identifier", "contextlib.closing"], "service.db._drop_conn": [], "odoo.tools.config.filestore": [], "shutil.copytree": [], "service.db.list_dbs": ["odoo.sql_db.db_connect", "<builtin>.sorted", "contextlib.closing", "odoo.exceptions.AccessDenied", "<builtin>.set", "odoo.tools.ustr", "<builtin>.tuple"], "odoo.modules.registry.Registry.delete": [], "shutil.rmtree": [], "tempfile.TemporaryFile": [], "odoo.tools.find_pg_tool": [], "odoo.tools.exec_pg_environ": [], "tempfile.TemporaryDirectory": [], "json.dump": [], "service.db.dump_db.<lambda1>": [], "odoo.tools.osutil.zip_dir": [], "service.db.dump_db.<lambda2>": [], "service.db.exp_restore.chunks": ["<builtin>.len", "<builtin>.range"], "tempfile.NamedTemporaryFile": [], "shutil.move": [], "odoo.tools.config.set_admin_password": [], "odoo.tools.mute_logger": [], "service.db.list_db_incompatible": ["odoo.sql_db.db_connect", "<builtin>.str", "contextlib.closing", "odoo.tools.table_exists", "odoo.sql_db.close_db"], "service.db.exp_list": ["odoo.exceptions.AccessDenied", "service.db.list_dbs"], "service.db.exp_list_lang": ["odoo.tools.scan_languages"], "odoo.tools.scan_languages": [], "service.db.exp_list_countries": ["os.path.join", "xml.etree.ElementTree.parse", "<builtin>.sorted"], "xml.etree.ElementTree.parse": [], "service.db.exp_list_countries.<lambda1>": [], "service.db.exp_server_version": [], "service.db.dispatch": ["service.db.check_super", "<builtin>.globals", "<builtin>.KeyError"], "service.wsgi_server": [], "service.wsgi_server.application": ["warnings.warn"], "service.security": [], "service.security.check_session": ["odoo.tools.misc.consteq"], "odoo.tools.misc.consteq": []}